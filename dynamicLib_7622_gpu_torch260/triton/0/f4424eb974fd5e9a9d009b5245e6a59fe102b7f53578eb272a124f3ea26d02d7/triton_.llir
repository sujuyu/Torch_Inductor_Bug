; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 3, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = and i32 %8, 7, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, %3, !dbg !14
  %13 = lshr i32 %8, 5, !dbg !15
  %14 = lshr i32 %8, 3, !dbg !15
  %15 = and i32 %14, 15, !dbg !15
  %16 = or disjoint i32 %15, 16, !dbg !15
  %17 = or disjoint i32 %15, 32, !dbg !15
  %18 = or disjoint i32 %15, 48, !dbg !15
  %19 = icmp ult i32 %18, 50, !dbg !16
  %20 = sext i32 %11 to i64, !dbg !17
  %21 = getelementptr double, ptr addrspace(1) %0, i64 %20, !dbg !17
  %22 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %21, i1 %12) #3, !dbg !18
  %23 = bitcast i64 %22 to double, !dbg !18
  %24 = fcmp olt double %23, 5.000000e+01, !dbg !19
  %25 = fcmp uno double %23, 0.000000e+00, !dbg !23
  %26 = or i1 %24, %25, !dbg !24
  %27 = select i1 %26, double %23, double 5.000000e+01, !dbg !25
  %28 = uitofp nneg i32 %15 to double
  %29 = uitofp nneg i32 %16 to double
  %30 = uitofp nneg i32 %17 to double
  %31 = uitofp nneg i32 %18 to double
  %32 = fcmp ogt double %27, %28, !dbg !26
  %33 = fcmp ogt double %27, %29, !dbg !26
  %34 = fcmp ogt double %27, %30, !dbg !26
  %35 = fcmp ogt double %27, %31, !dbg !26
  %36 = uitofp i1 %32 to float, !dbg !27
  %37 = uitofp i1 %33 to float, !dbg !27
  %38 = uitofp i1 %34 to float, !dbg !27
  %39 = uitofp i1 %35 to float, !dbg !27
  %40 = and i1 %19, %12, !dbg !28
  %41 = select i1 %40, float %39, float 0.000000e+00, !dbg !29
  %42 = fadd float %36, %37, !dbg !30
  %43 = fadd float %42, %38, !dbg !30
  %44 = select i1 %12, float %43, float 0.000000e+00, !dbg !30
  %45 = fadd float %41, %44, !dbg !30
  %46 = bitcast float %45 to i32, !dbg !35
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 16, i32 31), !dbg !35
  %48 = bitcast i32 %47 to float, !dbg !35
  %49 = fadd float %45, %48, !dbg !30
  %50 = bitcast float %49 to i32, !dbg !35
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 8, i32 31), !dbg !35
  %52 = bitcast i32 %51 to float, !dbg !35
  %53 = fadd float %49, %52, !dbg !30
  %54 = lshr i32 %9, 3, !dbg !35
  %55 = icmp ult i32 %9, 8, !dbg !35
  %56 = and i32 %13, 3, !dbg !35
  %57 = shl nuw nsw i32 %10, 2, !dbg !35
  %58 = or disjoint i32 %57, %56, !dbg !35
  %59 = zext nneg i32 %58 to i64, !dbg !35
  %60 = getelementptr float, ptr addrspace(3) @global_smem, i64 %59, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %60, float %53, i1 %55) #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %61 = icmp slt i32 %8, 32, !dbg !35
  %62 = sext i32 %8 to i64, !dbg !35
  %63 = getelementptr float, ptr addrspace(3) @global_smem, i64 %62, !dbg !35
  %64 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %63, i1 %61) #3, !dbg !35
  %65 = bitcast float %64 to i32, !dbg !35
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 2, i32 31), !dbg !35
  %67 = bitcast i32 %66 to float, !dbg !35
  %68 = fadd float %64, %67, !dbg !30
  %69 = bitcast float %68 to i32, !dbg !35
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 1, i32 31), !dbg !35
  %71 = bitcast i32 %70 to float, !dbg !35
  %72 = fadd float %68, %71, !dbg !30
  %73 = and i32 %8, 3, !dbg !35
  %74 = icmp eq i32 %73, 0, !dbg !35
  %75 = and i1 %61, %74, !dbg !35
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %63, float %72, i1 %75) #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %76 = zext nneg i32 %57 to i64, !dbg !35
  %77 = getelementptr float, ptr addrspace(3) @global_smem, i64 %76, !dbg !35
  %78 = load float, ptr addrspace(3) %77, align 16, !dbg !35
  %79 = fcmp oeq float %78, 0.000000e+00, !dbg !36
  %80 = or i1 %32, %79, !dbg !37
  %81 = or i1 %33, %79, !dbg !37
  %82 = or i1 %34, %79, !dbg !37
  %83 = or i1 %35, %79, !dbg !37
  %84 = uitofp i1 %80 to float, !dbg !38
  %85 = uitofp i1 %81 to float, !dbg !38
  %86 = uitofp i1 %82 to float, !dbg !38
  %87 = uitofp i1 %83 to float, !dbg !38
  %88 = select i1 %40, float %87, float 0.000000e+00, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %89 = fadd float %84, %85, !dbg !42
  %90 = fadd float %89, %86, !dbg !42
  %91 = select i1 %12, float %90, float 0.000000e+00, !dbg !42
  %92 = fadd float %88, %91, !dbg !42
  %93 = bitcast float %92 to i32, !dbg !40
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 16, i32 31), !dbg !40
  %95 = bitcast i32 %94 to float, !dbg !40
  %96 = fadd float %92, %95, !dbg !42
  %97 = bitcast float %96 to i32, !dbg !40
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 8, i32 31), !dbg !40
  %99 = bitcast i32 %98 to float, !dbg !40
  %100 = fadd float %96, %99, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %60, float %100, i1 %55) #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %101 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %63, i1 %61) #3, !dbg !40
  %102 = bitcast float %101 to i32, !dbg !40
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 2, i32 31), !dbg !40
  %104 = bitcast i32 %103 to float, !dbg !40
  %105 = fadd float %101, %104, !dbg !42
  %106 = bitcast float %105 to i32, !dbg !40
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 1, i32 31), !dbg !40
  %108 = bitcast i32 %107 to float, !dbg !40
  %109 = fadd float %105, %108, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %63, float %109, i1 %75) #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %110 = load i32, ptr addrspace(3) %77, align 16, !dbg !40
  %111 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !43
  %112 = shl nuw nsw i32 %56, 2, !dbg !44
  %113 = or disjoint i32 %112, %54, !dbg !44
  %114 = icmp eq i32 %113, 0, !dbg !44
  %115 = bitcast float %78 to i32, !dbg !44
  %116 = and i1 %114, %12, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %115, ptr addrspace(1) %111, i1 %116) #3, !dbg !44
  %117 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %110, ptr addrspace(1) %117, i1 %116) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coyjxip4s6xvtcg2t65ph3jndq756xmifu6l3oxu7y5qyksgxmln.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/oy")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 44, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 29, column: 30, scope: !7)
!18 = !DILocation(line: 29, column: 35, scope: !7)
!19 = !DILocation(line: 74, column: 15, scope: !20, inlinedAt: !22)
!20 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!21 = !DIFile(filename: "triton_helpers.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime")
!22 = !DILocation(line: 31, column: 40, scope: !7)
!23 = !DILocation(line: 76, column: 21, scope: !20, inlinedAt: !22)
!24 = !DILocation(line: 76, column: 16, scope: !20, inlinedAt: !22)
!25 = !DILocation(line: 77, column: 29, scope: !20, inlinedAt: !22)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 19, scope: !7)
!28 = !DILocation(line: 37, column: 28, scope: !7)
!29 = !DILocation(line: 37, column: 41, scope: !7)
!30 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !34)
!31 = distinct !DILexicalBlockFile(scope: !33, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language")
!33 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!34 = !DILocation(line: 38, column: 25, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !34)
!36 = !DILocation(line: 40, column: 21, scope: !7)
!37 = !DILocation(line: 41, column: 19, scope: !7)
!38 = !DILocation(line: 42, column: 21, scope: !7)
!39 = !DILocation(line: 44, column: 43, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !41)
!41 = !DILocation(line: 45, column: 26, scope: !7)
!42 = !DILocation(line: 256, column: 15, scope: !31, inlinedAt: !41)
!43 = !DILocation(line: 46, column: 25, scope: !7)
!44 = !DILocation(line: 46, column: 37, scope: !7)
!45 = !DILocation(line: 47, column: 25, scope: !7)
!46 = !DILocation(line: 47, column: 37, scope: !7)
!47 = !DILocation(line: 47, column: 4, scope: !7)
