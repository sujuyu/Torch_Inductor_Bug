//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u32 triton__param_7,
	.param .u32 triton__param_8
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<123>;
	.reg .f32 	%f<77>;
	.reg .b64 	%rd<31>;
	.reg .f64 	%fd<14>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd18, [triton__param_0];
	ld.param.u64 	%rd19, [triton__param_1];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33
	shl.b32 	%r43, %r1, 3;
	ld.param.u64 	%rd20, [triton__param_2];
	ld.param.u64 	%rd21, [triton__param_3];
	.loc	1 22 44
	mov.u32 	%r44, %tid.x;
	and.b32  	%r45, %r44, 31;
	ld.param.u64 	%rd22, [triton__param_4];
	shl.b32 	%r46, %r44, 2;
	ld.param.u64 	%rd23, [triton__param_5];
	and.b32  	%r47, %r46, 4;
	ld.param.u64 	%rd24, [triton__param_6];
	and.b32  	%r48, %r44, 7;
	ld.param.u32 	%r49, [triton__param_7];
	.loc	1 22 23
	or.b32  	%r50, %r43, %r47;
	or.b32  	%r51, %r43, %r48;
	.loc	1 23 21
	setp.lt.s32 	%p1, %r50, %r49;
	setp.lt.s32 	%p20, %r51, %r49;
	.loc	1 24 34
	bfe.u32 	%r52, %r44, 1, 6;
	.loc	1 26 21
	setp.lt.u32 	%p28, %r52, 50;
	.loc	1 27 20
	mul.hi.s32 	%r54, %r50, 780903145;
	shr.u32 	%r55, %r54, 31;
	shr.s32 	%r56, %r54, 5;
	add.s32 	%r57, %r56, %r55;
	mul.hi.s32 	%r59, %r51, 780903145;
	shr.u32 	%r60, %r59, 31;
	shr.s32 	%r61, %r59, 5;
	add.s32 	%r62, %r61, %r60;
	mul.lo.s32 	%r63, %r57, 176;
	sub.s32 	%r64, %r50, %r63;
	mul.lo.s32 	%r65, %r62, 176;
	sub.s32 	%r66, %r51, %r65;
	.loc	1 31 30
	mul.wide.s32 	%rd25, %r57, 8;
	add.s64 	%rd2, %rd18, %rd25;
	.loc	1 31 35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30
	mul.wide.s32 	%rd26, %r57, 4;
	add.s64 	%rd9, %rd19, %rd26;
	.loc	1 32 35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 37
	mad.lo.s32 	%r67, %r52, 176, %r64;
	.loc	1 33 48
	mad.lo.s32 	%r68, %r57, 8800, %r67;
	.loc	1 33 31
	mul.wide.s32 	%rd27, %r68, 4;
	add.s64 	%rd13, %rd20, %rd27;
	.loc	1 33 67
	and.pred  	%p9, %p28, %p1;
	mov.b32 	%r10, 0;
	.loc	1 33 59
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p9 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd13 + 0 ];
	@!%p9 mov.u32 %r6, %r10;
	@!%p9 mov.u32 %r7, %r10;
	@!%p9 mov.u32 %r8, %r10;
	@!%p9 mov.u32 %r9, %r10;
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r9;
	.loc	1 34 31
	mul.wide.s32 	%rd28, %r64, 4;
	add.s64 	%rd14, %rd21, %rd28;
	.loc	1 34 36
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r14;
	mov.b32 	%f6, %r15;
	mov.b32 	%f7, %r16;
	mov.b32 	%f8, %r17;
	.loc	1 35 31
	add.s64 	%rd15, %rd22, %rd27;
	.loc	1 35 59
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p9 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd15 + 0 ];
	@!%p9 mov.u32 %r18, %r10;
	@!%p9 mov.u32 %r19, %r10;
	@!%p9 mov.u32 %r20, %r10;
	@!%p9 mov.u32 %r21, %r10;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 36 31
	mul.wide.s32 	%rd29, %r62, 4;
	add.s64 	%rd16, %rd23, %rd29;
	.loc	1 36 36
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r41 }, [ %rd16 + 0 ];
	// end inline asm
	cvt.rn.f64.u32 	%fd1, %r52;
	.loc	1 31 35
	mov.b64 	%fd2, %rd1;
	mov.b64 	%fd3, %rd3;
	mov.b64 	%fd4, %rd5;
	mov.b64 	%fd5, %rd7;
$L__tmp1:
	.loc	2 74 15
	setp.lt.f64 	%p29, %fd5, 0d4049000000000000;
	setp.lt.f64 	%p30, %fd4, 0d4049000000000000;
	setp.lt.f64 	%p31, %fd3, 0d4049000000000000;
	setp.lt.f64 	%p32, %fd2, 0d4049000000000000;
	.loc	2 76 21
	setp.nan.f64 	%p33, %fd5, %fd5;
	setp.nan.f64 	%p34, %fd4, %fd4;
	setp.nan.f64 	%p35, %fd3, %fd3;
	setp.nan.f64 	%p36, %fd2, %fd2;
	.loc	2 77 29
	selp.f64 	%fd6, %fd2, 0d4049000000000000, %p36;
	selp.f64 	%fd7, %fd2, %fd6, %p32;
	selp.f64 	%fd8, %fd3, 0d4049000000000000, %p35;
	selp.f64 	%fd9, %fd3, %fd8, %p31;
	selp.f64 	%fd10, %fd4, 0d4049000000000000, %p34;
	selp.f64 	%fd11, %fd4, %fd10, %p30;
	selp.f64 	%fd12, %fd5, 0d4049000000000000, %p33;
	selp.f64 	%fd13, %fd5, %fd12, %p29;
$L__tmp2:
	.loc	1 41 18
	setp.gt.f64 	%p37, %fd13, %fd1;
	setp.gt.f64 	%p38, %fd11, %fd1;
	setp.gt.f64 	%p39, %fd9, %fd1;
	setp.gt.f64 	%p40, %fd7, %fd1;
	.loc	1 43 19
	and.b32  	%r69, %r2, 2147483647;
	setp.eq.s32 	%p41, %r69, 0;
	.loc	1 45 20
	add.f32 	%f13, %f1, %f5;
	add.f32 	%f14, %f2, %f6;
	add.f32 	%f15, %f3, %f7;
	add.f32 	%f16, %f4, %f8;
	.loc	1 46 20
	add.f32 	%f17, %f13, %f9;
	add.f32 	%f18, %f14, %f10;
	add.f32 	%f19, %f15, %f11;
	add.f32 	%f20, %f16, %f12;
	.loc	1 49 43
	selp.f32 	%f21, %f17, 0f00000000, %p41;
	selp.f32 	%f22, %f17, %f21, %p40;
	selp.f32 	%f23, %f22, 0f00000000, %p9;
$L__tmp3:
	.loc	3 267 36
	mov.b32 	%r70, %f23;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f24, %r71;
	.loc	3 256 15
	add.f32 	%f25, %f23, %f24;
	.loc	3 267 36
	mov.b32 	%r72, %f25;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f26, %r73;
	.loc	3 256 15
	add.f32 	%f27, %f25, %f26;
	.loc	3 267 36
	mov.b32 	%r74, %f27;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f28, %r75;
	.loc	3 256 15
	add.f32 	%f29, %f27, %f28;
	.loc	3 267 36
	mov.b32 	%r76, %f29;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f30, %r77;
	.loc	3 256 15
	add.f32 	%f31, %f29, %f30;
	.loc	3 267 36
	setp.lt.u32 	%p21, %r45, 2;
	bfe.u32 	%r78, %r44, 5, 2;
	shl.b32 	%r79, %r47, 2;
	or.b32  	%r80, %r79, %r78;
	shl.b32 	%r81, %r80, 2;
	mov.u32 	%r82, global_smem;
	add.s32 	%r27, %r82, %r81;
	add.s32 	%r29, %r27, 16;
	add.s32 	%r31, %r27, 32;
	add.s32 	%r33, %r27, 48;
	setp.lt.s32 	%p25, %r44, 32;
	add.s32 	%r36, %r82, %r46;
	and.b32  	%r83, %r3, 2147483647;
	and.b32  	%r84, %r4, 2147483647;
	and.b32  	%r85, %r5, 2147483647;
	and.b32  	%r86, %r44, 3;
	setp.eq.s32 	%p42, %r85, 0;
	setp.eq.s32 	%p43, %r84, 0;
	setp.eq.s32 	%p44, %r83, 0;
	setp.eq.s32 	%p45, %r86, 0;
$L__tmp4:
	.loc	1 49 43
	selp.f32 	%f32, %f18, 0f00000000, %p44;
	selp.f32 	%f33, %f18, %f32, %p39;
	selp.f32 	%f34, %f33, 0f00000000, %p9;
	selp.f32 	%f35, %f19, 0f00000000, %p43;
	selp.f32 	%f36, %f19, %f35, %p38;
	selp.f32 	%f37, %f36, 0f00000000, %p9;
	selp.f32 	%f38, %f20, 0f00000000, %p42;
	selp.f32 	%f39, %f20, %f38, %p37;
	selp.f32 	%f40, %f39, 0f00000000, %p9;
$L__tmp5:
	.loc	3 267 36
	mov.b32 	%r87, %f34;
	shfl.sync.bfly.b32	%r88, %r87, 16, 31, -1;
	mov.b32 	%f41, %r88;
	.loc	3 256 15
	add.f32 	%f42, %f34, %f41;
	.loc	3 267 36
	mov.b32 	%r89, %f42;
	shfl.sync.bfly.b32	%r90, %r89, 8, 31, -1;
	mov.b32 	%f43, %r90;
	.loc	3 256 15
	add.f32 	%f44, %f42, %f43;
	.loc	3 267 36
	mov.b32 	%r91, %f44;
	shfl.sync.bfly.b32	%r92, %r91, 4, 31, -1;
	mov.b32 	%f45, %r92;
	.loc	3 256 15
	add.f32 	%f46, %f44, %f45;
	.loc	3 267 36
	mov.b32 	%r93, %f46;
	shfl.sync.bfly.b32	%r94, %r93, 2, 31, -1;
	mov.b32 	%f47, %r94;
	.loc	3 256 15
	add.f32 	%f48, %f46, %f47;
	.loc	3 267 36
	mov.b32 	%r95, %f37;
	shfl.sync.bfly.b32	%r96, %r95, 16, 31, -1;
	mov.b32 	%f49, %r96;
	.loc	3 256 15
	add.f32 	%f50, %f37, %f49;
	.loc	3 267 36
	mov.b32 	%r97, %f50;
	shfl.sync.bfly.b32	%r98, %r97, 8, 31, -1;
	mov.b32 	%f51, %r98;
	.loc	3 256 15
	add.f32 	%f52, %f50, %f51;
	.loc	3 267 36
	mov.b32 	%r99, %f52;
	shfl.sync.bfly.b32	%r100, %r99, 4, 31, -1;
	mov.b32 	%f53, %r100;
	.loc	3 256 15
	add.f32 	%f54, %f52, %f53;
	.loc	3 267 36
	mov.b32 	%r101, %f54;
	shfl.sync.bfly.b32	%r102, %r101, 2, 31, -1;
	mov.b32 	%f55, %r102;
	.loc	3 256 15
	add.f32 	%f56, %f54, %f55;
	.loc	3 267 36
	mov.b32 	%r103, %f40;
	shfl.sync.bfly.b32	%r104, %r103, 16, 31, -1;
	mov.b32 	%f57, %r104;
	.loc	3 256 15
	add.f32 	%f58, %f40, %f57;
	.loc	3 267 36
	mov.b32 	%r105, %f58;
	shfl.sync.bfly.b32	%r106, %r105, 8, 31, -1;
	mov.b32 	%f59, %r106;
	.loc	3 256 15
	add.f32 	%f60, %f58, %f59;
	.loc	3 267 36
	mov.b32 	%r107, %f60;
	shfl.sync.bfly.b32	%r108, %r107, 4, 31, -1;
	mov.b32 	%f61, %r108;
	.loc	3 256 15
	add.f32 	%f62, %f60, %f61;
	.loc	3 267 36
	mov.b32 	%r109, %f62;
	shfl.sync.bfly.b32	%r110, %r109, 2, 31, -1;
	mov.b32 	%f63, %r110;
	.loc	3 256 15
	add.f32 	%f64, %f62, %f63;
	.loc	3 267 36
	mov.b32 	%r28, %f31;
	// begin inline asm
	@%p21 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	mov.b32 	%r30, %f48;
	// begin inline asm
	@%p21 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	mov.b32 	%r32, %f56;
	// begin inline asm
	@%p21 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	mov.b32 	%r34, %f64;
	// begin inline asm
	@%p21 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p25 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f65, %r35;
	shfl.sync.bfly.b32	%r111, %r35, 2, 31, -1;
	mov.b32 	%f66, %r111;
	.loc	3 256 15
	add.f32 	%f67, %f65, %f66;
	.loc	3 267 36
	mov.b32 	%r112, %f67;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f68, %r113;
	.loc	3 256 15
	add.f32 	%f69, %f67, %f68;
	.loc	3 267 36
	and.pred  	%p26, %p25, %p45;
	mov.b32 	%r38, %f69;
	// begin inline asm
	@%p26 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r114, %r47, 4;
	add.s32 	%r115, %r82, %r114;
	ld.shared.f32 	%f70, [%r115];
	ld.shared.f32 	%f71, [%r115+16];
	ld.shared.f32 	%f72, [%r115+32];
	ld.shared.f32 	%f73, [%r115+48];
$L__tmp6:
	.loc	1 53 20
	bar.sync 	0;
	add.s32 	%r116, %r82, %r79;
	st.shared.v4.f32 	[%r116], {%f70, %f71, %f72, %f73};
	bar.sync 	0;
	shl.b32 	%r117, %r48, 2;
	add.s32 	%r118, %r82, %r117;
	ld.shared.f32 	%f74, [%r118];
	mov.b32 	%r40, 1065353216;
	.loc	1 52 20
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	mov.b32 	%f75, %r39;
	.loc	1 53 20
	mul.f32 	%f76, %f74, %f75;
	.loc	1 54 31
	mad.lo.s32 	%r119, %r62, 1872, %r66;
	.loc	1 54 25
	mul.wide.s32 	%rd30, %r119, 4;
	add.s64 	%rd17, %rd24, %rd30;
	.loc	1 54 49
	bfe.u32 	%r120, %r44, 3, 2;
	shl.b32 	%r121, %r78, 2;
	or.b32  	%r122, %r121, %r120;
	setp.eq.s32 	%p46, %r122, 0;
	mov.b32 	%r42, %f76;
	and.pred  	%p27, %p46, %p20;
	// begin inline asm
	@%p27 st.global.b32 [ %rd17 + 0 ], { %r42 };
	// end inline asm
	.loc	1 54 4
	ret;
$L__tmp7:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/i2/ci2xsuz5hmbhdp6op2nnf4sykpv2zmuz6hsmprxn4ecqa27pj3gh.py"
	.file	2 "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 257
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 105
.b8 50
.b8 120
.b8 115
.b8 117
.b8 122
.b8 53
.b8 104
.b8 109
.b8 98
.b8 104
.b8 100
.b8 112
.b8 54
.b8 111
.b8 112
.b8 50
.b8 110
.b8 110
.b8 102
.b8 52
.b8 115
.b8 121
.b8 107
.b8 112
.b8 118
.b8 50
.b8 122
.b8 109
.b8 117
.b8 122
.b8 54
.b8 104
.b8 115
.b8 109
.b8 112
.b8 114
.b8 120
.b8 110
.b8 52
.b8 101
.b8 99
.b8 113
.b8 97
.b8 50
.b8 55
.b8 112
.b8 106
.b8 51
.b8 103
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 105
.b8 50
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 180
.b8 4
.b32 180
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 38
.b8 40
.b8 4
.b32 180
.b64 $L__tmp3
.b64 $L__tmp6
.b8 1
.b8 50
.b8 26
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
