; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, %5, !dbg !14
  %15 = icmp slt i32 %13, %5, !dbg !14
  %.frozen = freeze i32 %12
  %16 = sdiv i32 %.frozen, 568, !dbg !15
  %17 = mul i32 %16, 568
  %.decomposed = sub i32 %.frozen, %17
  %18 = srem i32 %13, 568, !dbg !16
  %19 = icmp slt i32 %.decomposed, 204, !dbg !17
  %20 = mul nsw i32 %16, 204, !dbg !18
  %21 = add nsw i32 %20, %.decomposed, !dbg !19
  %22 = add nsw i32 %20, %18, !dbg !19
  %23 = sext i32 %21 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = sext i32 %22 to i64, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !20
  %27 = and i1 %14, %19, !dbg !21
  %28 = and i1 %15, %19, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %27, i32 0, i1 %27) #1, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %28, i32 0, i1 %28) #1, !dbg !22
  %31 = add nsw i32 %.decomposed, -204, !dbg !23
  %32 = icmp ult i32 %31, 16, !dbg !23
  %33 = shl nsw i32 %16, 4, !dbg !24
  %34 = add nsw i32 %18, -204, !dbg !25
  %35 = add nsw i32 %33, %31, !dbg !26
  %36 = add nsw i32 %34, %33, !dbg !26
  %37 = sext i32 %35 to i64, !dbg !27
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !27
  %39 = sext i32 %36 to i64, !dbg !27
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !27
  %41 = and i1 %14, %32, !dbg !28
  %42 = and i1 %15, %32, !dbg !28
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %41, i32 0, i1 %41) #1, !dbg !29
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %42, i32 0, i1 %42) #1, !dbg !29
  %45 = add nsw i32 %.decomposed, -220, !dbg !30
  %46 = icmp ult i32 %45, 176, !dbg !30
  %47 = mul i32 %16, 1872, !dbg !31
  %48 = add i32 %47, %45, !dbg !32
  %49 = add i32 %47, %18, !dbg !33
  %50 = add i32 %49, -220, !dbg !32
  %51 = sext i32 %48 to i64, !dbg !34
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !34
  %53 = sext i32 %50 to i64, !dbg !34
  %54 = getelementptr float, ptr addrspace(1) %2, i64 %53, !dbg !34
  %55 = and i1 %14, %46, !dbg !35
  %56 = and i1 %15, %46, !dbg !35
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %55, i32 0, i1 %55) #1, !dbg !36
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %56, i32 0, i1 %56) #1, !dbg !36
  %59 = icmp sgt i32 %.decomposed, 395, !dbg !37
  %60 = add i32 %47, -396, !dbg !38
  %61 = add i32 %60, %.decomposed, !dbg !39
  %62 = add i32 %60, %18, !dbg !39
  %63 = sext i32 %61 to i64, !dbg !40
  %64 = getelementptr float, ptr addrspace(1) %3, i64 %63, !dbg !40
  %65 = sext i32 %62 to i64, !dbg !40
  %66 = getelementptr float, ptr addrspace(1) %3, i64 %65, !dbg !40
  %67 = and i1 %14, %59, !dbg !41
  %68 = and i1 %15, %59, !dbg !41
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %67, i32 0, i1 %67) #1, !dbg !42
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %68, i32 0, i1 %68) #1, !dbg !42
  %.v = select i1 %46, i32 %57, i32 %69, !dbg !43
  %.v1 = select i1 %46, i32 %58, i32 %70, !dbg !43
  %.v2 = select i1 %32, i32 %43, i32 %.v, !dbg !44
  %.v3 = select i1 %32, i32 %44, i32 %.v1, !dbg !44
  %.v4 = select i1 %19, i32 %29, i32 %.v2, !dbg !45
  %.v5 = select i1 %19, i32 %30, i32 %.v3, !dbg !45
  %71 = sext i32 %12 to i64, !dbg !46
  %72 = getelementptr float, ptr addrspace(1) %4, i64 %71, !dbg !46
  %73 = sext i32 %13 to i64, !dbg !46
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %73, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v4, ptr addrspace(1) %72, i1 %14) #1, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v5, ptr addrspace(1) %74, i1 %15) #1, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqlgpp5cpaskarye2xch272l53vinlaolekwkjuj3okjcfyxzy6b.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ql")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 23, column: 20, scope: !7)
!16 = !DILocation(line: 22, column: 18, scope: !7)
!17 = !DILocation(line: 29, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 35, scope: !7)
!19 = !DILocation(line: 30, column: 41, scope: !7)
!20 = !DILocation(line: 30, column: 30, scope: !7)
!21 = !DILocation(line: 30, column: 53, scope: !7)
!22 = !DILocation(line: 30, column: 46, scope: !7)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 35, column: 35, scope: !7)
!25 = !DILocation(line: 35, column: 51, scope: !7)
!26 = !DILocation(line: 35, column: 42, scope: !7)
!27 = !DILocation(line: 35, column: 31, scope: !7)
!28 = !DILocation(line: 35, column: 64, scope: !7)
!29 = !DILocation(line: 35, column: 57, scope: !7)
!30 = !DILocation(line: 39, column: 20, scope: !7)
!31 = !DILocation(line: 40, column: 37, scope: !7)
!32 = !DILocation(line: 40, column: 44, scope: !7)
!33 = !DILocation(line: 40, column: 53, scope: !7)
!34 = !DILocation(line: 40, column: 31, scope: !7)
!35 = !DILocation(line: 40, column: 67, scope: !7)
!36 = !DILocation(line: 40, column: 59, scope: !7)
!37 = !DILocation(line: 41, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 53, scope: !7)
!39 = !DILocation(line: 44, column: 44, scope: !7)
!40 = !DILocation(line: 44, column: 31, scope: !7)
!41 = !DILocation(line: 44, column: 67, scope: !7)
!42 = !DILocation(line: 44, column: 59, scope: !7)
!43 = !DILocation(line: 45, column: 35, scope: !7)
!44 = !DILocation(line: 46, column: 34, scope: !7)
!45 = !DILocation(line: 47, column: 33, scope: !7)
!46 = !DILocation(line: 48, column: 25, scope: !7)
!47 = !DILocation(line: 48, column: 37, scope: !7)
!48 = !DILocation(line: 48, column: 4, scope: !7)
