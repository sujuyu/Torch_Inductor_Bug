//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u32 triton__param_6,
	.param .u32 triton__param_7
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<83>;
	.reg .b32 	%r<328>;
	.reg .f32 	%f<145>;
	.reg .b64 	%rd<116>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd77, [triton__param_0];
	ld.param.u64 	%rd78, [triton__param_1];
$L__tmp0:
	.loc	1 20 29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	ld.param.u64 	%rd79, [triton__param_2];
	.loc	1 20 48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	ld.param.u64 	%rd80, [triton__param_3];
	.loc	1 20 69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	ld.param.u64 	%rd81, [triton__param_4];
	.loc	1 20 34
	mad.lo.s32 	%r149, %r3, %r2, %r1;
	ld.param.u64 	%rd82, [triton__param_5];
	.loc	1 20 75
	shl.b32 	%r150, %r149, 6;
	ld.param.u32 	%r151, [triton__param_6];
	.loc	1 21 44
	mov.u32 	%r152, %tid.x;
	and.b32  	%r153, %r152, 31;
	shl.b32 	%r154, %r152, 2;
	and.b32  	%r155, %r154, 60;
	bfe.u32 	%r156, %r152, 5, 3;
	.loc	1 21 23
	or.b32  	%r157, %r150, %r155;
	or.b32  	%r158, %r150, %r156;
	or.b32  	%r159, %r158, 8;
	or.b32  	%r160, %r158, 16;
	or.b32  	%r161, %r158, 24;
	or.b32  	%r162, %r158, 32;
	or.b32  	%r163, %r158, 40;
	or.b32  	%r164, %r158, 48;
	or.b32  	%r165, %r158, 56;
	.loc	1 22 21
	setp.lt.s32 	%p77, %r157, %r151;
	setp.lt.s32 	%p37, %r158, %r151;
	setp.lt.s32 	%p39, %r159, %r151;
	setp.lt.s32 	%p41, %r160, %r151;
	setp.lt.s32 	%p43, %r161, %r151;
	setp.lt.s32 	%p45, %r162, %r151;
	setp.lt.s32 	%p47, %r163, %r151;
	setp.lt.s32 	%p49, %r164, %r151;
	setp.lt.s32 	%p51, %r165, %r151;
	.loc	1 23 28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 23 33
	shl.b32 	%r166, %r4, 6;
	.loc	1 24 44
	bfe.u32 	%r167, %r152, 4, 4;
	shl.b32 	%r168, %r152, 1;
	and.b32  	%r169, %r168, 62;
	.loc	1 24 23
	or.b32  	%r170, %r166, %r167;
	or.b32  	%r171, %r170, 16;
	or.b32  	%r172, %r170, 32;
	or.b32  	%r173, %r170, 48;
	or.b32  	%r174, %r166, %r169;
	.loc	1 25 21
	setp.lt.s32 	%p78, %r170, 50;
	setp.lt.s32 	%p79, %r171, 50;
	setp.lt.s32 	%p80, %r172, 50;
	setp.lt.s32 	%p81, %r173, 50;
	setp.lt.s32 	%p82, %r174, 50;
	.loc	1 27 20
	shr.s32 	%r176, %r157, 31;
	shr.u32 	%r177, %r176, 25;
	add.s32 	%r178, %r157, %r177;
	shr.s32 	%r179, %r178, 7;
	bfe.s32 	%r180, %r149, 25, 1;
	shr.u32 	%r181, %r180, 25;
	add.s32 	%r182, %r158, %r181;
	shr.s32 	%r183, %r182, 7;
	add.s32 	%r184, %r159, %r181;
	shr.s32 	%r185, %r184, 7;
	add.s32 	%r186, %r160, %r181;
	shr.s32 	%r187, %r186, 7;
	add.s32 	%r188, %r161, %r181;
	shr.s32 	%r189, %r188, 7;
	add.s32 	%r190, %r162, %r181;
	shr.s32 	%r191, %r190, 7;
	add.s32 	%r192, %r163, %r181;
	shr.s32 	%r193, %r192, 7;
	add.s32 	%r194, %r164, %r181;
	shr.s32 	%r195, %r194, 7;
	add.s32 	%r196, %r165, %r181;
	shr.s32 	%r197, %r196, 7;
	and.b32  	%r198, %r178, -128;
	sub.s32 	%r199, %r157, %r198;
	.loc	1 29 20
	shr.s32 	%r201, %r158, 31;
	shr.u32 	%r202, %r201, 28;
	add.s32 	%r203, %r158, %r202;
	shr.s32 	%r204, %r203, 4;
	shr.s32 	%r206, %r159, 31;
	shr.u32 	%r207, %r206, 28;
	add.s32 	%r208, %r159, %r207;
	shr.s32 	%r209, %r208, 4;
	shr.u32 	%r210, %r180, 28;
	add.s32 	%r211, %r160, %r210;
	shr.s32 	%r212, %r211, 4;
	shr.s32 	%r214, %r161, 31;
	shr.u32 	%r215, %r214, 28;
	add.s32 	%r216, %r161, %r215;
	shr.s32 	%r217, %r216, 4;
	add.s32 	%r218, %r162, %r210;
	shr.s32 	%r219, %r218, 4;
	shr.s32 	%r221, %r163, 31;
	shr.u32 	%r222, %r221, 28;
	add.s32 	%r223, %r163, %r222;
	shr.s32 	%r224, %r223, 4;
	add.s32 	%r225, %r164, %r210;
	shr.s32 	%r226, %r225, 4;
	shr.s32 	%r228, %r165, 31;
	shr.u32 	%r229, %r228, 28;
	add.s32 	%r230, %r165, %r229;
	shr.s32 	%r231, %r230, 4;
	.loc	1 29 26
	shr.u32 	%r232, %r204, 29;
	add.s32 	%r233, %r204, %r232;
	and.b32  	%r234, %r233, -8;
	sub.s32 	%r235, %r204, %r234;
	shr.u32 	%r236, %r209, 29;
	add.s32 	%r237, %r209, %r236;
	and.b32  	%r238, %r237, -8;
	sub.s32 	%r239, %r209, %r238;
	shr.u32 	%r240, %r212, 29;
	add.s32 	%r241, %r212, %r240;
	and.b32  	%r242, %r241, -8;
	sub.s32 	%r243, %r212, %r242;
	shr.u32 	%r244, %r217, 29;
	add.s32 	%r245, %r217, %r244;
	and.b32  	%r246, %r245, -8;
	sub.s32 	%r247, %r217, %r246;
	shr.u32 	%r248, %r219, 29;
	add.s32 	%r249, %r219, %r248;
	and.b32  	%r250, %r249, -8;
	sub.s32 	%r251, %r219, %r250;
	shr.u32 	%r252, %r224, 29;
	add.s32 	%r253, %r224, %r252;
	and.b32  	%r254, %r253, -8;
	sub.s32 	%r255, %r224, %r254;
	shr.u32 	%r256, %r226, 29;
	add.s32 	%r257, %r226, %r256;
	and.b32  	%r258, %r257, -8;
	sub.s32 	%r259, %r226, %r258;
	shr.u32 	%r260, %r231, 29;
	add.s32 	%r261, %r231, %r260;
	and.b32  	%r262, %r261, -8;
	sub.s32 	%r263, %r231, %r262;
	and.b32  	%r264, %r203, -16;
	sub.s32 	%r265, %r158, %r264;
	and.b32  	%r266, %r208, -16;
	sub.s32 	%r267, %r159, %r266;
	and.b32  	%r268, %r216, -16;
	sub.s32 	%r269, %r161, %r268;
	and.b32  	%r270, %r223, -16;
	sub.s32 	%r271, %r163, %r270;
	and.b32  	%r272, %r230, -16;
	sub.s32 	%r273, %r165, %r272;
	.loc	1 32 40
	shl.b32 	%r274, %r170, 7;
	shl.b32 	%r275, %r171, 7;
	shl.b32 	%r276, %r172, 7;
	shl.b32 	%r277, %r173, 7;
	.loc	1 32 36
	mad.lo.s32 	%r278, %r179, 6400, %r199;
	.loc	1 32 47
	add.s32 	%r279, %r278, %r274;
	add.s32 	%r280, %r278, %r275;
	add.s32 	%r281, %r278, %r276;
	add.s32 	%r282, %r278, %r277;
	.loc	1 32 30
	mul.wide.s32 	%rd83, %r279, 4;
	add.s64 	%rd1, %rd77, %rd83;
	mul.wide.s32 	%rd84, %r280, 4;
	add.s64 	%rd2, %rd77, %rd84;
	mul.wide.s32 	%rd85, %r281, 4;
	add.s64 	%rd3, %rd77, %rd85;
	mul.wide.s32 	%rd86, %r282, 4;
	add.s64 	%rd4, %rd77, %rd86;
	.loc	1 32 66
	and.pred  	%p1, %p78, %p77;
	and.pred  	%p2, %p79, %p77;
	and.pred  	%p3, %p80, %p77;
	and.pred  	%p4, %p81, %p77;
	and.pred  	%p5, %p82, %p37;
	and.pred  	%p7, %p39, %p82;
	and.pred  	%p9, %p41, %p82;
	and.pred  	%p11, %p43, %p82;
	and.pred  	%p13, %p45, %p82;
	and.pred  	%p15, %p47, %p82;
	and.pred  	%p17, %p49, %p82;
	and.pred  	%p19, %p51, %p82;
	.loc	1 32 58
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd4 + 0 ];
	// end inline asm
	bfe.u32 	%r283, %r152, 4, 1;
	shl.b32 	%r284, %r156, 1;
	or.b32  	%r285, %r284, %r283;
	mad.lo.s32 	%r286, %r155, 65, %r285;
	shl.b32 	%r287, %r286, 2;
	mov.u32 	%r288, global_smem;
	add.s32 	%r289, %r288, %r287;
	st.shared.u32 	[%r289], %r5;
	st.shared.u32 	[%r289+260], %r6;
	st.shared.u32 	[%r289+520], %r7;
	st.shared.u32 	[%r289+780], %r8;
	st.shared.u32 	[%r289+64], %r9;
	st.shared.u32 	[%r289+324], %r10;
	st.shared.u32 	[%r289+584], %r11;
	st.shared.u32 	[%r289+844], %r12;
	st.shared.u32 	[%r289+128], %r13;
	st.shared.u32 	[%r289+388], %r14;
	st.shared.u32 	[%r289+648], %r15;
	st.shared.u32 	[%r289+908], %r16;
	st.shared.u32 	[%r289+192], %r17;
	st.shared.u32 	[%r289+452], %r18;
	st.shared.u32 	[%r289+712], %r19;
	st.shared.u32 	[%r289+972], %r20;
	bar.sync 	0;
	shl.b32 	%r290, %r153, 1;
	mad.lo.s32 	%r291, %r156, 65, %r290;
	shl.b32 	%r292, %r291, 2;
	add.s32 	%r293, %r288, %r292;
	ld.shared.f32 	%f1, [%r293];
	ld.shared.f32 	%f2, [%r293+4];
	ld.shared.f32 	%f3, [%r293+2080];
	ld.shared.f32 	%f4, [%r293+2084];
	ld.shared.f32 	%f5, [%r293+4160];
	ld.shared.f32 	%f6, [%r293+4164];
	ld.shared.f32 	%f7, [%r293+6240];
	ld.shared.f32 	%f8, [%r293+6244];
	ld.shared.f32 	%f9, [%r293+8320];
	ld.shared.f32 	%f10, [%r293+8324];
	ld.shared.f32 	%f11, [%r293+10400];
	ld.shared.f32 	%f12, [%r293+10404];
	ld.shared.f32 	%f13, [%r293+12480];
	ld.shared.f32 	%f14, [%r293+12484];
	ld.shared.f32 	%f15, [%r293+14560];
	ld.shared.f32 	%f16, [%r293+14564];
	.loc	1 33 38
	shl.b32 	%r294, %r174, 3;
	or.b32  	%r295, %r294, 8;
	.loc	1 33 36
	mad.lo.s32 	%r296, %r183, 400, %r235;
	.loc	1 33 45
	add.s32 	%r297, %r296, %r294;
	add.s32 	%r298, %r296, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r299, %r185, 400, %r239;
	.loc	1 33 45
	add.s32 	%r300, %r299, %r294;
	add.s32 	%r301, %r299, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r302, %r187, 400, %r243;
	.loc	1 33 45
	add.s32 	%r303, %r302, %r294;
	add.s32 	%r304, %r302, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r305, %r189, 400, %r247;
	.loc	1 33 45
	add.s32 	%r306, %r305, %r294;
	add.s32 	%r307, %r305, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r308, %r191, 400, %r251;
	.loc	1 33 45
	add.s32 	%r309, %r308, %r294;
	add.s32 	%r310, %r308, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r311, %r193, 400, %r255;
	.loc	1 33 45
	add.s32 	%r312, %r311, %r294;
	add.s32 	%r313, %r311, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r314, %r195, 400, %r259;
	.loc	1 33 45
	add.s32 	%r315, %r314, %r294;
	add.s32 	%r316, %r314, %r295;
	.loc	1 33 36
	mad.lo.s32 	%r317, %r197, 400, %r263;
	.loc	1 33 45
	add.s32 	%r318, %r317, %r294;
	add.s32 	%r319, %r317, %r295;
	.loc	1 33 30
	mul.wide.s32 	%rd87, %r297, 4;
	add.s64 	%rd5, %rd78, %rd87;
	mul.wide.s32 	%rd88, %r298, 4;
	add.s64 	%rd6, %rd78, %rd88;
	mul.wide.s32 	%rd89, %r300, 4;
	add.s64 	%rd7, %rd78, %rd89;
	mul.wide.s32 	%rd90, %r301, 4;
	add.s64 	%rd8, %rd78, %rd90;
	mul.wide.s32 	%rd91, %r303, 4;
	add.s64 	%rd9, %rd78, %rd91;
	mul.wide.s32 	%rd92, %r304, 4;
	add.s64 	%rd10, %rd78, %rd92;
	mul.wide.s32 	%rd93, %r306, 4;
	add.s64 	%rd11, %rd78, %rd93;
	mul.wide.s32 	%rd94, %r307, 4;
	add.s64 	%rd12, %rd78, %rd94;
	mul.wide.s32 	%rd95, %r309, 4;
	add.s64 	%rd13, %rd78, %rd95;
	mul.wide.s32 	%rd96, %r310, 4;
	add.s64 	%rd14, %rd78, %rd96;
	mul.wide.s32 	%rd97, %r312, 4;
	add.s64 	%rd15, %rd78, %rd97;
	mul.wide.s32 	%rd98, %r313, 4;
	add.s64 	%rd16, %rd78, %rd98;
	mul.wide.s32 	%rd99, %r315, 4;
	add.s64 	%rd17, %rd78, %rd99;
	mul.wide.s32 	%rd100, %r316, 4;
	add.s64 	%rd18, %rd78, %rd100;
	mul.wide.s32 	%rd101, %r318, 4;
	add.s64 	%rd19, %rd78, %rd101;
	mul.wide.s32 	%rd102, %r319, 4;
	add.s64 	%rd20, %rd78, %rd102;
	.loc	1 33 55
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r21 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r22 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r23 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r24 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r25 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r26 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r27 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r28 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r29 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r30 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r31 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r32 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r33 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r34 }, [ %rd18 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r35 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r36 }, [ %rd20 + 0 ];
	// end inline asm
	.loc	1 34 30
	add.s64 	%rd21, %rd79, %rd87;
	add.s64 	%rd22, %rd79, %rd88;
	add.s64 	%rd23, %rd79, %rd89;
	add.s64 	%rd24, %rd79, %rd90;
	add.s64 	%rd25, %rd79, %rd91;
	add.s64 	%rd26, %rd79, %rd92;
	add.s64 	%rd27, %rd79, %rd93;
	add.s64 	%rd28, %rd79, %rd94;
	add.s64 	%rd29, %rd79, %rd95;
	add.s64 	%rd30, %rd79, %rd96;
	add.s64 	%rd31, %rd79, %rd97;
	add.s64 	%rd32, %rd79, %rd98;
	add.s64 	%rd33, %rd79, %rd99;
	add.s64 	%rd34, %rd79, %rd100;
	add.s64 	%rd35, %rd79, %rd101;
	add.s64 	%rd36, %rd79, %rd102;
	.loc	1 34 55
	// begin inline asm
	mov.u32 %r86, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r86 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r89, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r89 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r92, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r92 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r95, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r95 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r98, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r98 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r101, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r101 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r104, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r104 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r107, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r107 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r110, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r110 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r113, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r113 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r116, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r116 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r119, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r119 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r122, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r122 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r125, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r125 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r128, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r128 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r131, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r131 }, [ %rd36 + 0 ];
	// end inline asm
	.loc	1 35 31
	mul.wide.s32 	%rd103, %r265, 4;
	add.s64 	%rd37, %rd80, %rd103;
	mul.wide.s32 	%rd104, %r267, 4;
	add.s64 	%rd39, %rd80, %rd104;
	mul.wide.s32 	%rd105, %r269, 4;
	add.s64 	%rd43, %rd80, %rd105;
	mul.wide.s32 	%rd106, %r271, 4;
	add.s64 	%rd47, %rd80, %rd106;
	mul.wide.s32 	%rd107, %r273, 4;
	add.s64 	%rd51, %rd80, %rd107;
	.loc	1 35 36
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r53 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r54 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r55 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r56 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p41 ld.global.L1::evict_last.b32 { %r57 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p41 ld.global.L1::evict_last.b32 { %r58 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p43 ld.global.L1::evict_last.b32 { %r59 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p43 ld.global.L1::evict_last.b32 { %r60 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p45 ld.global.L1::evict_last.b32 { %r61 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p45 ld.global.L1::evict_last.b32 { %r62 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p47 ld.global.L1::evict_last.b32 { %r63 }, [ %rd47 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p47 ld.global.L1::evict_last.b32 { %r64 }, [ %rd47 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p49 ld.global.L1::evict_last.b32 { %r65 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p49 ld.global.L1::evict_last.b32 { %r66 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r67, 0x0;
	@%p51 ld.global.L1::evict_last.b32 { %r67 }, [ %rd51 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p51 ld.global.L1::evict_last.b32 { %r68 }, [ %rd51 + 0 ];
	// end inline asm
	.loc	1 36 31
	add.s64 	%rd53, %rd81, %rd103;
	add.s64 	%rd55, %rd81, %rd104;
	add.s64 	%rd59, %rd81, %rd105;
	add.s64 	%rd63, %rd81, %rd106;
	add.s64 	%rd67, %rd81, %rd107;
	.loc	1 36 36
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r69 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r70 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r71, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r71 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r72 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r73, 0x0;
	@%p41 ld.global.L1::evict_last.b32 { %r73 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p41 ld.global.L1::evict_last.b32 { %r74 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r75, 0x0;
	@%p43 ld.global.L1::evict_last.b32 { %r75 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r76, 0x0;
	@%p43 ld.global.L1::evict_last.b32 { %r76 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r77, 0x0;
	@%p45 ld.global.L1::evict_last.b32 { %r77 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r78, 0x0;
	@%p45 ld.global.L1::evict_last.b32 { %r78 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r79, 0x0;
	@%p47 ld.global.L1::evict_last.b32 { %r79 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r80, 0x0;
	@%p47 ld.global.L1::evict_last.b32 { %r80 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r81, 0x0;
	@%p49 ld.global.L1::evict_last.b32 { %r81 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r82, 0x0;
	@%p49 ld.global.L1::evict_last.b32 { %r82 }, [ %rd53 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r83, 0x0;
	@%p51 ld.global.L1::evict_last.b32 { %r83 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p51 ld.global.L1::evict_last.b32 { %r84 }, [ %rd67 + 0 ];
	// end inline asm
	mov.b32 	%r87, 1098907648;
	.loc	1 39 18
	// begin inline asm
	div.full.f32 %r85, %r86, %r87;
	// end inline asm
	mov.b32 	%f17, %r85;
	// begin inline asm
	div.full.f32 %r88, %r89, %r87;
	// end inline asm
	mov.b32 	%f18, %r88;
	// begin inline asm
	div.full.f32 %r91, %r92, %r87;
	// end inline asm
	mov.b32 	%f19, %r91;
	// begin inline asm
	div.full.f32 %r94, %r95, %r87;
	// end inline asm
	mov.b32 	%f20, %r94;
	// begin inline asm
	div.full.f32 %r97, %r98, %r87;
	// end inline asm
	mov.b32 	%f21, %r97;
	// begin inline asm
	div.full.f32 %r100, %r101, %r87;
	// end inline asm
	mov.b32 	%f22, %r100;
	// begin inline asm
	div.full.f32 %r103, %r104, %r87;
	// end inline asm
	mov.b32 	%f23, %r103;
	// begin inline asm
	div.full.f32 %r106, %r107, %r87;
	// end inline asm
	mov.b32 	%f24, %r106;
	// begin inline asm
	div.full.f32 %r109, %r110, %r87;
	// end inline asm
	mov.b32 	%f25, %r109;
	// begin inline asm
	div.full.f32 %r112, %r113, %r87;
	// end inline asm
	mov.b32 	%f26, %r112;
	// begin inline asm
	div.full.f32 %r115, %r116, %r87;
	// end inline asm
	mov.b32 	%f27, %r115;
	// begin inline asm
	div.full.f32 %r118, %r119, %r87;
	// end inline asm
	mov.b32 	%f28, %r118;
	// begin inline asm
	div.full.f32 %r121, %r122, %r87;
	// end inline asm
	mov.b32 	%f29, %r121;
	// begin inline asm
	div.full.f32 %r124, %r125, %r87;
	// end inline asm
	mov.b32 	%f30, %r124;
	// begin inline asm
	div.full.f32 %r127, %r128, %r87;
	// end inline asm
	mov.b32 	%f31, %r127;
	// begin inline asm
	div.full.f32 %r130, %r131, %r87;
	// end inline asm
	mov.b32 	%f32, %r130;
	.loc	1 41 18
	add.f32 	%f33, %f17, 0f3727C5AC;
	add.f32 	%f34, %f18, 0f3727C5AC;
	add.f32 	%f35, %f19, 0f3727C5AC;
	add.f32 	%f36, %f20, 0f3727C5AC;
	add.f32 	%f37, %f21, 0f3727C5AC;
	add.f32 	%f38, %f22, 0f3727C5AC;
	add.f32 	%f39, %f23, 0f3727C5AC;
	add.f32 	%f40, %f24, 0f3727C5AC;
	add.f32 	%f41, %f25, 0f3727C5AC;
	add.f32 	%f42, %f26, 0f3727C5AC;
	add.f32 	%f43, %f27, 0f3727C5AC;
	add.f32 	%f44, %f28, 0f3727C5AC;
	add.f32 	%f45, %f29, 0f3727C5AC;
	add.f32 	%f46, %f30, 0f3727C5AC;
	add.f32 	%f47, %f31, 0f3727C5AC;
	add.f32 	%f48, %f32, 0f3727C5AC;
	.loc	1 42 27
	rsqrt.approx.ftz.f32 	%f49, %f33;
	rsqrt.approx.ftz.f32 	%f50, %f34;
	rsqrt.approx.ftz.f32 	%f51, %f35;
	rsqrt.approx.ftz.f32 	%f52, %f36;
	rsqrt.approx.ftz.f32 	%f53, %f37;
	rsqrt.approx.ftz.f32 	%f54, %f38;
	rsqrt.approx.ftz.f32 	%f55, %f39;
	rsqrt.approx.ftz.f32 	%f56, %f40;
	rsqrt.approx.ftz.f32 	%f57, %f41;
	rsqrt.approx.ftz.f32 	%f58, %f42;
	rsqrt.approx.ftz.f32 	%f59, %f43;
	rsqrt.approx.ftz.f32 	%f60, %f44;
	rsqrt.approx.ftz.f32 	%f61, %f45;
	rsqrt.approx.ftz.f32 	%f62, %f46;
	rsqrt.approx.ftz.f32 	%f63, %f47;
	rsqrt.approx.ftz.f32 	%f64, %f48;
	.loc	1 33 55
	mov.b32 	%f65, %r36;
	.loc	1 37 18
	sub.f32 	%f66, %f16, %f65;
	.loc	1 33 55
	mov.b32 	%f67, %r35;
	.loc	1 37 18
	sub.f32 	%f68, %f15, %f67;
	.loc	1 33 55
	mov.b32 	%f69, %r34;
	.loc	1 37 18
	sub.f32 	%f70, %f14, %f69;
	.loc	1 33 55
	mov.b32 	%f71, %r33;
	.loc	1 37 18
	sub.f32 	%f72, %f13, %f71;
	.loc	1 33 55
	mov.b32 	%f73, %r32;
	.loc	1 37 18
	sub.f32 	%f74, %f12, %f73;
	.loc	1 33 55
	mov.b32 	%f75, %r31;
	.loc	1 37 18
	sub.f32 	%f76, %f11, %f75;
	.loc	1 33 55
	mov.b32 	%f77, %r30;
	.loc	1 37 18
	sub.f32 	%f78, %f10, %f77;
	.loc	1 33 55
	mov.b32 	%f79, %r29;
	.loc	1 37 18
	sub.f32 	%f80, %f9, %f79;
	.loc	1 33 55
	mov.b32 	%f81, %r28;
	.loc	1 37 18
	sub.f32 	%f82, %f8, %f81;
	.loc	1 33 55
	mov.b32 	%f83, %r27;
	.loc	1 37 18
	sub.f32 	%f84, %f7, %f83;
	.loc	1 33 55
	mov.b32 	%f85, %r26;
	.loc	1 37 18
	sub.f32 	%f86, %f6, %f85;
	.loc	1 33 55
	mov.b32 	%f87, %r25;
	.loc	1 37 18
	sub.f32 	%f88, %f5, %f87;
	.loc	1 33 55
	mov.b32 	%f89, %r24;
	.loc	1 37 18
	sub.f32 	%f90, %f4, %f89;
	.loc	1 33 55
	mov.b32 	%f91, %r23;
	.loc	1 37 18
	sub.f32 	%f92, %f3, %f91;
	.loc	1 33 55
	mov.b32 	%f93, %r22;
	.loc	1 37 18
	sub.f32 	%f94, %f2, %f93;
	.loc	1 33 55
	mov.b32 	%f95, %r21;
	.loc	1 37 18
	sub.f32 	%f96, %f1, %f95;
	.loc	1 36 36
	mov.b32 	%f97, %r84;
	mov.b32 	%f98, %r82;
	mov.b32 	%f99, %r80;
	mov.b32 	%f100, %r78;
	mov.b32 	%f101, %r76;
	mov.b32 	%f102, %r74;
	mov.b32 	%f103, %r72;
	mov.b32 	%f104, %r70;
	.loc	1 35 36
	mov.b32 	%f105, %r68;
	mov.b32 	%f106, %r66;
	mov.b32 	%f107, %r64;
	mov.b32 	%f108, %r62;
	mov.b32 	%f109, %r60;
	mov.b32 	%f110, %r58;
	mov.b32 	%f111, %r56;
	mov.b32 	%f112, %r54;
	.loc	1 43 18
	mul.f32 	%f113, %f96, %f49;
	mul.f32 	%f114, %f94, %f50;
	mul.f32 	%f115, %f92, %f51;
	mul.f32 	%f116, %f90, %f52;
	mul.f32 	%f117, %f88, %f53;
	mul.f32 	%f118, %f86, %f54;
	mul.f32 	%f119, %f84, %f55;
	mul.f32 	%f120, %f82, %f56;
	mul.f32 	%f121, %f80, %f57;
	mul.f32 	%f122, %f78, %f58;
	mul.f32 	%f123, %f76, %f59;
	mul.f32 	%f124, %f74, %f60;
	mul.f32 	%f125, %f72, %f61;
	mul.f32 	%f126, %f70, %f62;
	mul.f32 	%f127, %f68, %f63;
	mul.f32 	%f128, %f66, %f64;
	.loc	1 45 20
	fma.rn.f32 	%f129, %f113, %f112, %f104;
	fma.rn.f32 	%f130, %f114, %f112, %f104;
	fma.rn.f32 	%f131, %f115, %f111, %f103;
	fma.rn.f32 	%f132, %f116, %f111, %f103;
	fma.rn.f32 	%f133, %f117, %f110, %f102;
	fma.rn.f32 	%f134, %f118, %f110, %f102;
	fma.rn.f32 	%f135, %f119, %f109, %f101;
	fma.rn.f32 	%f136, %f120, %f109, %f101;
	fma.rn.f32 	%f137, %f121, %f108, %f100;
	fma.rn.f32 	%f138, %f122, %f108, %f100;
	fma.rn.f32 	%f139, %f123, %f107, %f99;
	fma.rn.f32 	%f140, %f124, %f107, %f99;
	fma.rn.f32 	%f141, %f125, %f106, %f98;
	fma.rn.f32 	%f142, %f126, %f106, %f98;
	fma.rn.f32 	%f143, %f127, %f105, %f97;
	fma.rn.f32 	%f144, %f128, %f105, %f97;
	.loc	1 46 31
	mad.lo.s32 	%r320, %r158, 50, %r174;
	add.s32 	%r321, %r320, 400;
	add.s32 	%r322, %r320, 800;
	add.s32 	%r323, %r320, 1200;
	add.s32 	%r324, %r320, 1600;
	add.s32 	%r325, %r320, 2000;
	add.s32 	%r326, %r320, 2400;
	add.s32 	%r327, %r320, 2800;
	.loc	1 46 25
	mul.wide.s32 	%rd108, %r320, 4;
	add.s64 	%rd69, %rd82, %rd108;
	mul.wide.s32 	%rd109, %r321, 4;
	add.s64 	%rd70, %rd82, %rd109;
	mul.wide.s32 	%rd110, %r322, 4;
	add.s64 	%rd71, %rd82, %rd110;
	mul.wide.s32 	%rd111, %r323, 4;
	add.s64 	%rd72, %rd82, %rd111;
	mul.wide.s32 	%rd112, %r324, 4;
	add.s64 	%rd73, %rd82, %rd112;
	mul.wide.s32 	%rd113, %r325, 4;
	add.s64 	%rd74, %rd82, %rd113;
	mul.wide.s32 	%rd114, %r326, 4;
	add.s64 	%rd75, %rd82, %rd114;
	mul.wide.s32 	%rd115, %r327, 4;
	add.s64 	%rd76, %rd82, %rd115;
	.loc	1 46 47
	mov.b32 	%r133, %f129;
	mov.b32 	%r134, %f130;
	// begin inline asm
	@%p5 st.global.v2.b32 [ %rd69 + 0 ], { %r133, %r134 };
	// end inline asm
	mov.b32 	%r135, %f131;
	mov.b32 	%r136, %f132;
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd70 + 0 ], { %r135, %r136 };
	// end inline asm
	mov.b32 	%r137, %f133;
	mov.b32 	%r138, %f134;
	// begin inline asm
	@%p9 st.global.v2.b32 [ %rd71 + 0 ], { %r137, %r138 };
	// end inline asm
	mov.b32 	%r139, %f135;
	mov.b32 	%r140, %f136;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd72 + 0 ], { %r139, %r140 };
	// end inline asm
	mov.b32 	%r141, %f137;
	mov.b32 	%r142, %f138;
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd73 + 0 ], { %r141, %r142 };
	// end inline asm
	mov.b32 	%r143, %f139;
	mov.b32 	%r144, %f140;
	// begin inline asm
	@%p15 st.global.v2.b32 [ %rd74 + 0 ], { %r143, %r144 };
	// end inline asm
	mov.b32 	%r145, %f141;
	mov.b32 	%r146, %f142;
	// begin inline asm
	@%p17 st.global.v2.b32 [ %rd75 + 0 ], { %r145, %r146 };
	// end inline asm
	mov.b32 	%r147, %f143;
	mov.b32 	%r148, %f144;
	// begin inline asm
	@%p19 st.global.v2.b32 [ %rd76 + 0 ], { %r147, %r148 };
	// end inline asm
	.loc	1 46 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ak/cak5b7ifbyysgpn6c4plcw4cu6dwygnrwa7semwtfe7p7vo3ijno.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 176
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 97
.b8 107
.b8 53
.b8 98
.b8 55
.b8 105
.b8 102
.b8 98
.b8 121
.b8 121
.b8 115
.b8 103
.b8 112
.b8 110
.b8 54
.b8 99
.b8 52
.b8 112
.b8 108
.b8 99
.b8 119
.b8 52
.b8 99
.b8 117
.b8 54
.b8 100
.b8 119
.b8 121
.b8 103
.b8 110
.b8 114
.b8 119
.b8 97
.b8 55
.b8 115
.b8 101
.b8 109
.b8 119
.b8 116
.b8 102
.b8 101
.b8 55
.b8 112
.b8 55
.b8 118
.b8 111
.b8 51
.b8 105
.b8 106
.b8 110
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 97
.b8 107
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
