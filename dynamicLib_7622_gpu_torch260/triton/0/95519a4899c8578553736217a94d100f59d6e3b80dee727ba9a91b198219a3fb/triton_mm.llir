; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %.mask = and i32 %4, 33554431, !dbg !10
  %6 = icmp eq i32 %.mask, 0, !dbg !10
  br i1 %6, label %common.ret, label %7, !dbg !10

common.ret:                                       ; preds = %5, %793
  ret void, !dbg !11

7:                                                ; preds = %5
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %9 = add i32 %4, 31, !dbg !13
  %10 = sdiv i32 %9, 32, !dbg !14
  %.frozen = freeze i32 %8
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = shl nsw i32 %11, 3, !dbg !16
  %13 = sub nsw i32 %10, %12, !dbg !17
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 8), !dbg !18
  %15 = srem i32 %8, %14, !dbg !19
  %16 = add i32 %12, %15, !dbg !20
  %17 = mul i32 %11, 16
  %.decomposed = sub i32 %.frozen, %17
  %18 = sdiv i32 %.decomposed, %14, !dbg !21
  %19 = shl i32 %16, 5, !dbg !22
  %20 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !23
  %21 = and i32 %20, 31, !dbg !23
  %22 = lshr i32 %20, 3, !dbg !23
  %23 = and i32 %22, 31, !dbg !23
  %24 = lshr i32 %20, 4, !dbg !23
  %25 = and i32 %24, 7, !dbg !23
  %26 = lshr i32 %20, 4, !dbg !23
  %27 = and i32 %26, 8, !dbg !23
  %28 = or disjoint i32 %25, %27, !dbg !23
  %29 = or disjoint i32 %19, %23, !dbg !24
  %30 = or disjoint i32 %19, %28, !dbg !23
  %31 = shl nsw i32 %18, 6, !dbg !25
  %32 = or disjoint i32 %23, 32, !dbg !26
  %33 = shl i32 %20, 2, !dbg !26
  %34 = and i32 %33, 28, !dbg !26
  %35 = or disjoint i32 %31, %23, !dbg !27
  %36 = or disjoint i32 %31, %32, !dbg !27
  %37 = srem i32 %29, %4, !dbg !28
  %38 = srem i32 %35, 128, !dbg !29
  %39 = srem i32 %36, 128, !dbg !29
  %40 = mul i32 %37, 156, !dbg !30
  %41 = add i32 %40, %34, !dbg !31
  %42 = sext i32 %41 to i64, !dbg !32
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !32
  %44 = mul nsw i32 %38, 156, !dbg !33
  %45 = mul nsw i32 %39, 156, !dbg !33
  %46 = add nsw i32 %44, %34, !dbg !34
  %47 = add nsw i32 %45, %34, !dbg !34
  %48 = sext i32 %46 to i64, !dbg !35
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !35
  %50 = sext i32 %47 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !35
  %52 = shl nuw nsw i32 %23, 5, !dbg !36
  %53 = or disjoint i32 %52, %34, !dbg !36
  %54 = zext nneg i32 %53 to i64, !dbg !36
  %55 = getelementptr float, ptr addrspace(3) @global_smem, i64 %54, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %43, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %56 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %54, !dbg !37
  %57 = shl nuw nsw i32 %32, 5, !dbg !37
  %58 = or disjoint i32 %57, %34, !dbg !37
  %59 = zext nneg i32 %58 to i64, !dbg !37
  %60 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %59, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %56, ptr addrspace(1) %49, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %60, ptr addrspace(1) %51, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %61 = getelementptr i8, ptr addrspace(1) %43, i64 128, !dbg !38
  %62 = getelementptr i8, ptr addrspace(1) %49, i64 128, !dbg !39
  %63 = getelementptr i8, ptr addrspace(1) %51, i64 128, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %64 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %54, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %64, ptr addrspace(1) %61, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %65 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %54, !dbg !37
  %66 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %59, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %65, ptr addrspace(1) %62, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %66, ptr addrspace(1) %63, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %67 = getelementptr i8, ptr addrspace(1) %43, i64 256, !dbg !38
  %68 = getelementptr i8, ptr addrspace(1) %49, i64 256, !dbg !39
  %69 = getelementptr i8, ptr addrspace(1) %51, i64 256, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %70 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %54, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %70, ptr addrspace(1) %67, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %71 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %54, !dbg !37
  %72 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %59, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %71, ptr addrspace(1) %68, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %72, ptr addrspace(1) %69, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %73 = getelementptr i8, ptr addrspace(1) %43, i64 384, !dbg !38
  %74 = getelementptr i8, ptr addrspace(1) %49, i64 384, !dbg !39
  %75 = getelementptr i8, ptr addrspace(1) %51, i64 384, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %76 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 12288), i64 %54, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %76, ptr addrspace(1) %73, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %77 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %54, !dbg !37
  %78 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %59, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %77, ptr addrspace(1) %74, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %78, ptr addrspace(1) %75, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %79 = lshr i32 %20, 4
  %80 = shl nuw nsw i32 %21, 1
  %81 = icmp ne i32 %34, 28
  %82 = shl i32 %79, 5
  %83 = and i32 %82, 960
  %84 = zext nneg i32 %83 to i64
  %85 = shl nuw nsw i32 %21, 6
  %86 = zext nneg i32 %85 to i64
  br label %87, !dbg !40

87:                                               ; preds = %7, %87
  %88 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), %7 ], [ %790, %87 ]
  %89 = phi ptr addrspace(3) [ @global_smem, %7 ], [ %787, %87 ]
  %90 = phi i32 [ 0, %7 ], [ %784, %87 ]
  %91 = phi i32 [ 3, %7 ], [ %772, %87 ]
  %.pn1628 = phi ptr addrspace(1) [ %75, %7 ], [ %769, %87 ]
  %.pn2427 = phi ptr addrspace(1) [ %74, %7 ], [ %768, %87 ]
  %.pn826 = phi ptr addrspace(1) [ %73, %7 ], [ %767, %87 ]
  %92 = phi i32 [ 0, %7 ], [ %791, %87 ]
  %93 = phi <8 x float> [ zeroinitializer, %7 ], [ %766, %87 ]
  %94 = icmp eq i32 %92, 0, !dbg !40
  %95 = getelementptr float, ptr addrspace(3) %89, i64 %84, !dbg !36
  %96 = load float, ptr addrspace(3) %95, align 4, !dbg !36
  %97 = getelementptr i8, ptr addrspace(3) %95, i64 128, !dbg !36
  %98 = load float, ptr addrspace(3) %97, align 4, !dbg !36
  %99 = getelementptr i8, ptr addrspace(3) %95, i64 2048, !dbg !36
  %100 = load float, ptr addrspace(3) %99, align 4, !dbg !36
  %101 = getelementptr i8, ptr addrspace(3) %95, i64 2176, !dbg !36
  %102 = load float, ptr addrspace(3) %101, align 4, !dbg !36
  %103 = getelementptr i8, ptr addrspace(3) %95, i64 4, !dbg !36
  %104 = load float, ptr addrspace(3) %103, align 4, !dbg !36
  %105 = getelementptr i8, ptr addrspace(3) %95, i64 132, !dbg !36
  %106 = load float, ptr addrspace(3) %105, align 4, !dbg !36
  %107 = getelementptr i8, ptr addrspace(3) %95, i64 2052, !dbg !36
  %108 = load float, ptr addrspace(3) %107, align 4, !dbg !36
  %109 = getelementptr i8, ptr addrspace(3) %95, i64 2180, !dbg !36
  %110 = load float, ptr addrspace(3) %109, align 4, !dbg !36
  %111 = getelementptr i8, ptr addrspace(3) %95, i64 8, !dbg !36
  %112 = load float, ptr addrspace(3) %111, align 4, !dbg !36
  %113 = getelementptr i8, ptr addrspace(3) %95, i64 136, !dbg !36
  %114 = load float, ptr addrspace(3) %113, align 4, !dbg !36
  %115 = getelementptr i8, ptr addrspace(3) %95, i64 2056, !dbg !36
  %116 = load float, ptr addrspace(3) %115, align 4, !dbg !36
  %117 = getelementptr i8, ptr addrspace(3) %95, i64 2184, !dbg !36
  %118 = load float, ptr addrspace(3) %117, align 4, !dbg !36
  %119 = getelementptr i8, ptr addrspace(3) %95, i64 12, !dbg !36
  %120 = load float, ptr addrspace(3) %119, align 4, !dbg !36
  %121 = getelementptr i8, ptr addrspace(3) %95, i64 140, !dbg !36
  %122 = load float, ptr addrspace(3) %121, align 4, !dbg !36
  %123 = getelementptr i8, ptr addrspace(3) %95, i64 2060, !dbg !36
  %124 = load float, ptr addrspace(3) %123, align 4, !dbg !36
  %125 = getelementptr i8, ptr addrspace(3) %95, i64 2188, !dbg !36
  %126 = load float, ptr addrspace(3) %125, align 4, !dbg !36
  %127 = getelementptr i8, ptr addrspace(3) %95, i64 16, !dbg !36
  %128 = load float, ptr addrspace(3) %127, align 4, !dbg !36
  %129 = getelementptr i8, ptr addrspace(3) %95, i64 144, !dbg !36
  %130 = load float, ptr addrspace(3) %129, align 4, !dbg !36
  %131 = getelementptr i8, ptr addrspace(3) %95, i64 2064, !dbg !36
  %132 = load float, ptr addrspace(3) %131, align 4, !dbg !36
  %133 = getelementptr i8, ptr addrspace(3) %95, i64 2192, !dbg !36
  %134 = load float, ptr addrspace(3) %133, align 4, !dbg !36
  %135 = getelementptr i8, ptr addrspace(3) %95, i64 20, !dbg !36
  %136 = load float, ptr addrspace(3) %135, align 4, !dbg !36
  %137 = getelementptr i8, ptr addrspace(3) %95, i64 148, !dbg !36
  %138 = load float, ptr addrspace(3) %137, align 4, !dbg !36
  %139 = getelementptr i8, ptr addrspace(3) %95, i64 2068, !dbg !36
  %140 = load float, ptr addrspace(3) %139, align 4, !dbg !36
  %141 = getelementptr i8, ptr addrspace(3) %95, i64 2196, !dbg !36
  %142 = load float, ptr addrspace(3) %141, align 4, !dbg !36
  %143 = getelementptr i8, ptr addrspace(3) %95, i64 24, !dbg !36
  %144 = load float, ptr addrspace(3) %143, align 4, !dbg !36
  %145 = getelementptr i8, ptr addrspace(3) %95, i64 152, !dbg !36
  %146 = load float, ptr addrspace(3) %145, align 4, !dbg !36
  %147 = getelementptr i8, ptr addrspace(3) %95, i64 2072, !dbg !36
  %148 = load float, ptr addrspace(3) %147, align 4, !dbg !36
  %149 = getelementptr i8, ptr addrspace(3) %95, i64 2200, !dbg !36
  %150 = load float, ptr addrspace(3) %149, align 4, !dbg !36
  %151 = getelementptr i8, ptr addrspace(3) %95, i64 28, !dbg !36
  %152 = load float, ptr addrspace(3) %151, align 4, !dbg !36
  %153 = getelementptr i8, ptr addrspace(3) %95, i64 156, !dbg !36
  %154 = load float, ptr addrspace(3) %153, align 4, !dbg !36
  %155 = getelementptr i8, ptr addrspace(3) %95, i64 2076, !dbg !36
  %156 = load float, ptr addrspace(3) %155, align 4, !dbg !36
  %157 = getelementptr i8, ptr addrspace(3) %95, i64 2204, !dbg !36
  %158 = load float, ptr addrspace(3) %157, align 4, !dbg !36
  %159 = getelementptr i8, ptr addrspace(3) %95, i64 32, !dbg !36
  %160 = load float, ptr addrspace(3) %159, align 4, !dbg !36
  %161 = getelementptr i8, ptr addrspace(3) %95, i64 160, !dbg !36
  %162 = load float, ptr addrspace(3) %161, align 4, !dbg !36
  %163 = getelementptr i8, ptr addrspace(3) %95, i64 2080, !dbg !36
  %164 = load float, ptr addrspace(3) %163, align 4, !dbg !36
  %165 = getelementptr i8, ptr addrspace(3) %95, i64 2208, !dbg !36
  %166 = load float, ptr addrspace(3) %165, align 4, !dbg !36
  %167 = getelementptr i8, ptr addrspace(3) %95, i64 36, !dbg !36
  %168 = load float, ptr addrspace(3) %167, align 4, !dbg !36
  %169 = getelementptr i8, ptr addrspace(3) %95, i64 164, !dbg !36
  %170 = load float, ptr addrspace(3) %169, align 4, !dbg !36
  %171 = getelementptr i8, ptr addrspace(3) %95, i64 2084, !dbg !36
  %172 = load float, ptr addrspace(3) %171, align 4, !dbg !36
  %173 = getelementptr i8, ptr addrspace(3) %95, i64 2212, !dbg !36
  %174 = load float, ptr addrspace(3) %173, align 4, !dbg !36
  %175 = getelementptr i8, ptr addrspace(3) %95, i64 40, !dbg !36
  %176 = load float, ptr addrspace(3) %175, align 4, !dbg !36
  %177 = getelementptr i8, ptr addrspace(3) %95, i64 168, !dbg !36
  %178 = load float, ptr addrspace(3) %177, align 4, !dbg !36
  %179 = getelementptr i8, ptr addrspace(3) %95, i64 2088, !dbg !36
  %180 = load float, ptr addrspace(3) %179, align 4, !dbg !36
  %181 = getelementptr i8, ptr addrspace(3) %95, i64 2216, !dbg !36
  %182 = load float, ptr addrspace(3) %181, align 4, !dbg !36
  %183 = getelementptr i8, ptr addrspace(3) %95, i64 44, !dbg !36
  %184 = load float, ptr addrspace(3) %183, align 4, !dbg !36
  %185 = getelementptr i8, ptr addrspace(3) %95, i64 172, !dbg !36
  %186 = load float, ptr addrspace(3) %185, align 4, !dbg !36
  %187 = getelementptr i8, ptr addrspace(3) %95, i64 2092, !dbg !36
  %188 = load float, ptr addrspace(3) %187, align 4, !dbg !36
  %189 = getelementptr i8, ptr addrspace(3) %95, i64 2220, !dbg !36
  %190 = load float, ptr addrspace(3) %189, align 4, !dbg !36
  %191 = getelementptr i8, ptr addrspace(3) %95, i64 48, !dbg !36
  %192 = load float, ptr addrspace(3) %191, align 4, !dbg !36
  %193 = getelementptr i8, ptr addrspace(3) %95, i64 176, !dbg !36
  %194 = load float, ptr addrspace(3) %193, align 4, !dbg !36
  %195 = getelementptr i8, ptr addrspace(3) %95, i64 2096, !dbg !36
  %196 = load float, ptr addrspace(3) %195, align 4, !dbg !36
  %197 = getelementptr i8, ptr addrspace(3) %95, i64 2224, !dbg !36
  %198 = load float, ptr addrspace(3) %197, align 4, !dbg !36
  %199 = getelementptr i8, ptr addrspace(3) %95, i64 52, !dbg !36
  %200 = load float, ptr addrspace(3) %199, align 4, !dbg !36
  %201 = getelementptr i8, ptr addrspace(3) %95, i64 180, !dbg !36
  %202 = load float, ptr addrspace(3) %201, align 4, !dbg !36
  %203 = getelementptr i8, ptr addrspace(3) %95, i64 2100, !dbg !36
  %204 = load float, ptr addrspace(3) %203, align 4, !dbg !36
  %205 = getelementptr i8, ptr addrspace(3) %95, i64 2228, !dbg !36
  %206 = load float, ptr addrspace(3) %205, align 4, !dbg !36
  %207 = getelementptr i8, ptr addrspace(3) %95, i64 56, !dbg !36
  %208 = load float, ptr addrspace(3) %207, align 4, !dbg !36
  %209 = getelementptr i8, ptr addrspace(3) %95, i64 184, !dbg !36
  %210 = load float, ptr addrspace(3) %209, align 4, !dbg !36
  %211 = getelementptr i8, ptr addrspace(3) %95, i64 2104, !dbg !36
  %212 = load float, ptr addrspace(3) %211, align 4, !dbg !36
  %213 = getelementptr i8, ptr addrspace(3) %95, i64 2232, !dbg !36
  %214 = load float, ptr addrspace(3) %213, align 4, !dbg !36
  %215 = getelementptr i8, ptr addrspace(3) %95, i64 60, !dbg !36
  %216 = load float, ptr addrspace(3) %215, align 4, !dbg !36
  %217 = getelementptr i8, ptr addrspace(3) %95, i64 188, !dbg !36
  %218 = load float, ptr addrspace(3) %217, align 4, !dbg !36
  %219 = getelementptr i8, ptr addrspace(3) %95, i64 2108, !dbg !36
  %220 = load float, ptr addrspace(3) %219, align 4, !dbg !36
  %221 = getelementptr i8, ptr addrspace(3) %95, i64 2236, !dbg !36
  %222 = load float, ptr addrspace(3) %221, align 4, !dbg !36
  %223 = getelementptr i8, ptr addrspace(3) %95, i64 64, !dbg !36
  %224 = load float, ptr addrspace(3) %223, align 4, !dbg !36
  %225 = getelementptr i8, ptr addrspace(3) %95, i64 192, !dbg !36
  %226 = load float, ptr addrspace(3) %225, align 4, !dbg !36
  %227 = getelementptr i8, ptr addrspace(3) %95, i64 2112, !dbg !36
  %228 = load float, ptr addrspace(3) %227, align 4, !dbg !36
  %229 = getelementptr i8, ptr addrspace(3) %95, i64 2240, !dbg !36
  %230 = load float, ptr addrspace(3) %229, align 4, !dbg !36
  %231 = getelementptr i8, ptr addrspace(3) %95, i64 68, !dbg !36
  %232 = load float, ptr addrspace(3) %231, align 4, !dbg !36
  %233 = getelementptr i8, ptr addrspace(3) %95, i64 196, !dbg !36
  %234 = load float, ptr addrspace(3) %233, align 4, !dbg !36
  %235 = getelementptr i8, ptr addrspace(3) %95, i64 2116, !dbg !36
  %236 = load float, ptr addrspace(3) %235, align 4, !dbg !36
  %237 = getelementptr i8, ptr addrspace(3) %95, i64 2244, !dbg !36
  %238 = load float, ptr addrspace(3) %237, align 4, !dbg !36
  %239 = getelementptr i8, ptr addrspace(3) %95, i64 72, !dbg !36
  %240 = load float, ptr addrspace(3) %239, align 4, !dbg !36
  %241 = getelementptr i8, ptr addrspace(3) %95, i64 200, !dbg !36
  %242 = load float, ptr addrspace(3) %241, align 4, !dbg !36
  %243 = getelementptr i8, ptr addrspace(3) %95, i64 2120, !dbg !36
  %244 = load float, ptr addrspace(3) %243, align 4, !dbg !36
  %245 = getelementptr i8, ptr addrspace(3) %95, i64 2248, !dbg !36
  %246 = load float, ptr addrspace(3) %245, align 4, !dbg !36
  %247 = getelementptr i8, ptr addrspace(3) %95, i64 76, !dbg !36
  %248 = load float, ptr addrspace(3) %247, align 4, !dbg !36
  %249 = getelementptr i8, ptr addrspace(3) %95, i64 204, !dbg !36
  %250 = load float, ptr addrspace(3) %249, align 4, !dbg !36
  %251 = getelementptr i8, ptr addrspace(3) %95, i64 2124, !dbg !36
  %252 = load float, ptr addrspace(3) %251, align 4, !dbg !36
  %253 = getelementptr i8, ptr addrspace(3) %95, i64 2252, !dbg !36
  %254 = load float, ptr addrspace(3) %253, align 4, !dbg !36
  %255 = getelementptr i8, ptr addrspace(3) %95, i64 80, !dbg !36
  %256 = load float, ptr addrspace(3) %255, align 4, !dbg !36
  %257 = getelementptr i8, ptr addrspace(3) %95, i64 208, !dbg !36
  %258 = load float, ptr addrspace(3) %257, align 4, !dbg !36
  %259 = getelementptr i8, ptr addrspace(3) %95, i64 2128, !dbg !36
  %260 = load float, ptr addrspace(3) %259, align 4, !dbg !36
  %261 = getelementptr i8, ptr addrspace(3) %95, i64 2256, !dbg !36
  %262 = load float, ptr addrspace(3) %261, align 4, !dbg !36
  %263 = getelementptr i8, ptr addrspace(3) %95, i64 84, !dbg !36
  %264 = load float, ptr addrspace(3) %263, align 4, !dbg !36
  %265 = getelementptr i8, ptr addrspace(3) %95, i64 212, !dbg !36
  %266 = load float, ptr addrspace(3) %265, align 4, !dbg !36
  %267 = getelementptr i8, ptr addrspace(3) %95, i64 2132, !dbg !36
  %268 = load float, ptr addrspace(3) %267, align 4, !dbg !36
  %269 = getelementptr i8, ptr addrspace(3) %95, i64 2260, !dbg !36
  %270 = load float, ptr addrspace(3) %269, align 4, !dbg !36
  %271 = getelementptr i8, ptr addrspace(3) %95, i64 88, !dbg !36
  %272 = load float, ptr addrspace(3) %271, align 4, !dbg !36
  %273 = getelementptr i8, ptr addrspace(3) %95, i64 216, !dbg !36
  %274 = load float, ptr addrspace(3) %273, align 4, !dbg !36
  %275 = getelementptr i8, ptr addrspace(3) %95, i64 2136, !dbg !36
  %276 = load float, ptr addrspace(3) %275, align 4, !dbg !36
  %277 = getelementptr i8, ptr addrspace(3) %95, i64 2264, !dbg !36
  %278 = load float, ptr addrspace(3) %277, align 4, !dbg !36
  %279 = getelementptr i8, ptr addrspace(3) %95, i64 92, !dbg !36
  %280 = load float, ptr addrspace(3) %279, align 4, !dbg !36
  %281 = getelementptr i8, ptr addrspace(3) %95, i64 220, !dbg !36
  %282 = load float, ptr addrspace(3) %281, align 4, !dbg !36
  %283 = getelementptr i8, ptr addrspace(3) %95, i64 2140, !dbg !36
  %284 = load float, ptr addrspace(3) %283, align 4, !dbg !36
  %285 = getelementptr i8, ptr addrspace(3) %95, i64 2268, !dbg !36
  %286 = load float, ptr addrspace(3) %285, align 4, !dbg !36
  %287 = getelementptr i8, ptr addrspace(3) %95, i64 96, !dbg !36
  %288 = load float, ptr addrspace(3) %287, align 4, !dbg !36
  %289 = getelementptr i8, ptr addrspace(3) %95, i64 224, !dbg !36
  %290 = load float, ptr addrspace(3) %289, align 4, !dbg !36
  %291 = getelementptr i8, ptr addrspace(3) %95, i64 2144, !dbg !36
  %292 = load float, ptr addrspace(3) %291, align 4, !dbg !36
  %293 = getelementptr i8, ptr addrspace(3) %95, i64 2272, !dbg !36
  %294 = load float, ptr addrspace(3) %293, align 4, !dbg !36
  %295 = getelementptr i8, ptr addrspace(3) %95, i64 100, !dbg !36
  %296 = load float, ptr addrspace(3) %295, align 4, !dbg !36
  %297 = getelementptr i8, ptr addrspace(3) %95, i64 228, !dbg !36
  %298 = load float, ptr addrspace(3) %297, align 4, !dbg !36
  %299 = getelementptr i8, ptr addrspace(3) %95, i64 2148, !dbg !36
  %300 = load float, ptr addrspace(3) %299, align 4, !dbg !36
  %301 = getelementptr i8, ptr addrspace(3) %95, i64 2276, !dbg !36
  %302 = load float, ptr addrspace(3) %301, align 4, !dbg !36
  %303 = getelementptr i8, ptr addrspace(3) %95, i64 104, !dbg !36
  %304 = load float, ptr addrspace(3) %303, align 4, !dbg !36
  %305 = getelementptr i8, ptr addrspace(3) %95, i64 232, !dbg !36
  %306 = load float, ptr addrspace(3) %305, align 4, !dbg !36
  %307 = getelementptr i8, ptr addrspace(3) %95, i64 2152, !dbg !36
  %308 = load float, ptr addrspace(3) %307, align 4, !dbg !36
  %309 = getelementptr i8, ptr addrspace(3) %95, i64 2280, !dbg !36
  %310 = load float, ptr addrspace(3) %309, align 4, !dbg !36
  %311 = getelementptr i8, ptr addrspace(3) %95, i64 108, !dbg !36
  %312 = load float, ptr addrspace(3) %311, align 4, !dbg !36
  %313 = getelementptr i8, ptr addrspace(3) %95, i64 236, !dbg !36
  %314 = load float, ptr addrspace(3) %313, align 4, !dbg !36
  %315 = getelementptr i8, ptr addrspace(3) %95, i64 2156, !dbg !36
  %316 = load float, ptr addrspace(3) %315, align 4, !dbg !36
  %317 = getelementptr i8, ptr addrspace(3) %95, i64 2284, !dbg !36
  %318 = load float, ptr addrspace(3) %317, align 4, !dbg !36
  %319 = getelementptr i8, ptr addrspace(3) %95, i64 112, !dbg !36
  %320 = load float, ptr addrspace(3) %319, align 4, !dbg !36
  %321 = getelementptr i8, ptr addrspace(3) %95, i64 240, !dbg !36
  %322 = load float, ptr addrspace(3) %321, align 4, !dbg !36
  %323 = getelementptr i8, ptr addrspace(3) %95, i64 2160, !dbg !36
  %324 = load float, ptr addrspace(3) %323, align 4, !dbg !36
  %325 = getelementptr i8, ptr addrspace(3) %95, i64 2288, !dbg !36
  %326 = load float, ptr addrspace(3) %325, align 4, !dbg !36
  %327 = getelementptr i8, ptr addrspace(3) %95, i64 116, !dbg !36
  %328 = load float, ptr addrspace(3) %327, align 4, !dbg !36
  %329 = getelementptr i8, ptr addrspace(3) %95, i64 244, !dbg !36
  %330 = load float, ptr addrspace(3) %329, align 4, !dbg !36
  %331 = getelementptr i8, ptr addrspace(3) %95, i64 2164, !dbg !36
  %332 = load float, ptr addrspace(3) %331, align 4, !dbg !36
  %333 = getelementptr i8, ptr addrspace(3) %95, i64 2292, !dbg !36
  %334 = load float, ptr addrspace(3) %333, align 4, !dbg !36
  %335 = getelementptr i8, ptr addrspace(3) %95, i64 120, !dbg !36
  %336 = load float, ptr addrspace(3) %335, align 4, !dbg !36
  %337 = getelementptr i8, ptr addrspace(3) %95, i64 248, !dbg !36
  %338 = load float, ptr addrspace(3) %337, align 4, !dbg !36
  %339 = getelementptr i8, ptr addrspace(3) %95, i64 2168, !dbg !36
  %340 = load float, ptr addrspace(3) %339, align 4, !dbg !36
  %341 = getelementptr i8, ptr addrspace(3) %95, i64 2296, !dbg !36
  %342 = load float, ptr addrspace(3) %341, align 4, !dbg !36
  %343 = getelementptr i8, ptr addrspace(3) %95, i64 124, !dbg !36
  %344 = load float, ptr addrspace(3) %343, align 4, !dbg !36
  %345 = getelementptr i8, ptr addrspace(3) %95, i64 252, !dbg !36
  %346 = load float, ptr addrspace(3) %345, align 4, !dbg !36
  %347 = getelementptr i8, ptr addrspace(3) %95, i64 2172, !dbg !36
  %348 = load float, ptr addrspace(3) %347, align 4, !dbg !36
  %349 = getelementptr i8, ptr addrspace(3) %95, i64 2300, !dbg !36
  %350 = load float, ptr addrspace(3) %349, align 4, !dbg !36
  %351 = getelementptr float, ptr addrspace(3) %88, i64 %86, !dbg !37
  %352 = load float, ptr addrspace(3) %351, align 4, !dbg !37
  %353 = getelementptr i8, ptr addrspace(3) %351, i64 128, !dbg !37
  %354 = load float, ptr addrspace(3) %353, align 4, !dbg !37
  %355 = getelementptr i8, ptr addrspace(3) %351, i64 4, !dbg !37
  %356 = load float, ptr addrspace(3) %355, align 4, !dbg !37
  %357 = getelementptr i8, ptr addrspace(3) %351, i64 132, !dbg !37
  %358 = load float, ptr addrspace(3) %357, align 4, !dbg !37
  %359 = getelementptr i8, ptr addrspace(3) %351, i64 8, !dbg !37
  %360 = load float, ptr addrspace(3) %359, align 4, !dbg !37
  %361 = getelementptr i8, ptr addrspace(3) %351, i64 136, !dbg !37
  %362 = load float, ptr addrspace(3) %361, align 4, !dbg !37
  %363 = getelementptr i8, ptr addrspace(3) %351, i64 12, !dbg !37
  %364 = load float, ptr addrspace(3) %363, align 4, !dbg !37
  %365 = getelementptr i8, ptr addrspace(3) %351, i64 140, !dbg !37
  %366 = load float, ptr addrspace(3) %365, align 4, !dbg !37
  %367 = getelementptr i8, ptr addrspace(3) %351, i64 16, !dbg !37
  %368 = load float, ptr addrspace(3) %367, align 4, !dbg !37
  %369 = getelementptr i8, ptr addrspace(3) %351, i64 144, !dbg !37
  %370 = load float, ptr addrspace(3) %369, align 4, !dbg !37
  %371 = getelementptr i8, ptr addrspace(3) %351, i64 20, !dbg !37
  %372 = load float, ptr addrspace(3) %371, align 4, !dbg !37
  %373 = getelementptr i8, ptr addrspace(3) %351, i64 148, !dbg !37
  %374 = load float, ptr addrspace(3) %373, align 4, !dbg !37
  %375 = getelementptr i8, ptr addrspace(3) %351, i64 24, !dbg !37
  %376 = load float, ptr addrspace(3) %375, align 4, !dbg !37
  %377 = getelementptr i8, ptr addrspace(3) %351, i64 152, !dbg !37
  %378 = load float, ptr addrspace(3) %377, align 4, !dbg !37
  %379 = getelementptr i8, ptr addrspace(3) %351, i64 28, !dbg !37
  %380 = load float, ptr addrspace(3) %379, align 4, !dbg !37
  %381 = getelementptr i8, ptr addrspace(3) %351, i64 156, !dbg !37
  %382 = load float, ptr addrspace(3) %381, align 4, !dbg !37
  %383 = getelementptr i8, ptr addrspace(3) %351, i64 32, !dbg !37
  %384 = load float, ptr addrspace(3) %383, align 4, !dbg !37
  %385 = getelementptr i8, ptr addrspace(3) %351, i64 160, !dbg !37
  %386 = load float, ptr addrspace(3) %385, align 4, !dbg !37
  %387 = getelementptr i8, ptr addrspace(3) %351, i64 36, !dbg !37
  %388 = load float, ptr addrspace(3) %387, align 4, !dbg !37
  %389 = getelementptr i8, ptr addrspace(3) %351, i64 164, !dbg !37
  %390 = load float, ptr addrspace(3) %389, align 4, !dbg !37
  %391 = getelementptr i8, ptr addrspace(3) %351, i64 40, !dbg !37
  %392 = load float, ptr addrspace(3) %391, align 4, !dbg !37
  %393 = getelementptr i8, ptr addrspace(3) %351, i64 168, !dbg !37
  %394 = load float, ptr addrspace(3) %393, align 4, !dbg !37
  %395 = getelementptr i8, ptr addrspace(3) %351, i64 44, !dbg !37
  %396 = load float, ptr addrspace(3) %395, align 4, !dbg !37
  %397 = getelementptr i8, ptr addrspace(3) %351, i64 172, !dbg !37
  %398 = load float, ptr addrspace(3) %397, align 4, !dbg !37
  %399 = getelementptr i8, ptr addrspace(3) %351, i64 48, !dbg !37
  %400 = load float, ptr addrspace(3) %399, align 4, !dbg !37
  %401 = getelementptr i8, ptr addrspace(3) %351, i64 176, !dbg !37
  %402 = load float, ptr addrspace(3) %401, align 4, !dbg !37
  %403 = getelementptr i8, ptr addrspace(3) %351, i64 52, !dbg !37
  %404 = load float, ptr addrspace(3) %403, align 4, !dbg !37
  %405 = getelementptr i8, ptr addrspace(3) %351, i64 180, !dbg !37
  %406 = load float, ptr addrspace(3) %405, align 4, !dbg !37
  %407 = getelementptr i8, ptr addrspace(3) %351, i64 56, !dbg !37
  %408 = load float, ptr addrspace(3) %407, align 4, !dbg !37
  %409 = getelementptr i8, ptr addrspace(3) %351, i64 184, !dbg !37
  %410 = load float, ptr addrspace(3) %409, align 4, !dbg !37
  %411 = getelementptr i8, ptr addrspace(3) %351, i64 60, !dbg !37
  %412 = load float, ptr addrspace(3) %411, align 4, !dbg !37
  %413 = getelementptr i8, ptr addrspace(3) %351, i64 188, !dbg !37
  %414 = load float, ptr addrspace(3) %413, align 4, !dbg !37
  %415 = getelementptr i8, ptr addrspace(3) %351, i64 64, !dbg !37
  %416 = load float, ptr addrspace(3) %415, align 4, !dbg !37
  %417 = getelementptr i8, ptr addrspace(3) %351, i64 192, !dbg !37
  %418 = load float, ptr addrspace(3) %417, align 4, !dbg !37
  %419 = getelementptr i8, ptr addrspace(3) %351, i64 68, !dbg !37
  %420 = load float, ptr addrspace(3) %419, align 4, !dbg !37
  %421 = getelementptr i8, ptr addrspace(3) %351, i64 196, !dbg !37
  %422 = load float, ptr addrspace(3) %421, align 4, !dbg !37
  %423 = getelementptr i8, ptr addrspace(3) %351, i64 72, !dbg !37
  %424 = load float, ptr addrspace(3) %423, align 4, !dbg !37
  %425 = getelementptr i8, ptr addrspace(3) %351, i64 200, !dbg !37
  %426 = load float, ptr addrspace(3) %425, align 4, !dbg !37
  %427 = getelementptr i8, ptr addrspace(3) %351, i64 76, !dbg !37
  %428 = load float, ptr addrspace(3) %427, align 4, !dbg !37
  %429 = getelementptr i8, ptr addrspace(3) %351, i64 204, !dbg !37
  %430 = load float, ptr addrspace(3) %429, align 4, !dbg !37
  %431 = getelementptr i8, ptr addrspace(3) %351, i64 80, !dbg !37
  %432 = load float, ptr addrspace(3) %431, align 4, !dbg !37
  %433 = getelementptr i8, ptr addrspace(3) %351, i64 208, !dbg !37
  %434 = load float, ptr addrspace(3) %433, align 4, !dbg !37
  %435 = getelementptr i8, ptr addrspace(3) %351, i64 84, !dbg !37
  %436 = load float, ptr addrspace(3) %435, align 4, !dbg !37
  %437 = getelementptr i8, ptr addrspace(3) %351, i64 212, !dbg !37
  %438 = load float, ptr addrspace(3) %437, align 4, !dbg !37
  %439 = getelementptr i8, ptr addrspace(3) %351, i64 88, !dbg !37
  %440 = load float, ptr addrspace(3) %439, align 4, !dbg !37
  %441 = getelementptr i8, ptr addrspace(3) %351, i64 216, !dbg !37
  %442 = load float, ptr addrspace(3) %441, align 4, !dbg !37
  %443 = getelementptr i8, ptr addrspace(3) %351, i64 92, !dbg !37
  %444 = load float, ptr addrspace(3) %443, align 4, !dbg !37
  %445 = getelementptr i8, ptr addrspace(3) %351, i64 220, !dbg !37
  %446 = load float, ptr addrspace(3) %445, align 4, !dbg !37
  %447 = getelementptr i8, ptr addrspace(3) %351, i64 96, !dbg !37
  %448 = load float, ptr addrspace(3) %447, align 4, !dbg !37
  %449 = getelementptr i8, ptr addrspace(3) %351, i64 224, !dbg !37
  %450 = load float, ptr addrspace(3) %449, align 4, !dbg !37
  %451 = getelementptr i8, ptr addrspace(3) %351, i64 100, !dbg !37
  %452 = load float, ptr addrspace(3) %451, align 4, !dbg !37
  %453 = getelementptr i8, ptr addrspace(3) %351, i64 228, !dbg !37
  %454 = load float, ptr addrspace(3) %453, align 4, !dbg !37
  %455 = getelementptr i8, ptr addrspace(3) %351, i64 104, !dbg !37
  %456 = load float, ptr addrspace(3) %455, align 4, !dbg !37
  %457 = getelementptr i8, ptr addrspace(3) %351, i64 232, !dbg !37
  %458 = load float, ptr addrspace(3) %457, align 4, !dbg !37
  %459 = getelementptr i8, ptr addrspace(3) %351, i64 108, !dbg !37
  %460 = load float, ptr addrspace(3) %459, align 4, !dbg !37
  %461 = getelementptr i8, ptr addrspace(3) %351, i64 236, !dbg !37
  %462 = load float, ptr addrspace(3) %461, align 4, !dbg !37
  %463 = getelementptr i8, ptr addrspace(3) %351, i64 112, !dbg !37
  %464 = load float, ptr addrspace(3) %463, align 4, !dbg !37
  %465 = getelementptr i8, ptr addrspace(3) %351, i64 240, !dbg !37
  %466 = load float, ptr addrspace(3) %465, align 4, !dbg !37
  %467 = getelementptr i8, ptr addrspace(3) %351, i64 116, !dbg !37
  %468 = load float, ptr addrspace(3) %467, align 4, !dbg !37
  %469 = getelementptr i8, ptr addrspace(3) %351, i64 244, !dbg !37
  %470 = load float, ptr addrspace(3) %469, align 4, !dbg !37
  %471 = getelementptr i8, ptr addrspace(3) %351, i64 120, !dbg !37
  %472 = load float, ptr addrspace(3) %471, align 4, !dbg !37
  %473 = getelementptr i8, ptr addrspace(3) %351, i64 248, !dbg !37
  %474 = load float, ptr addrspace(3) %473, align 4, !dbg !37
  %475 = getelementptr i8, ptr addrspace(3) %351, i64 124, !dbg !37
  %476 = load float, ptr addrspace(3) %475, align 4, !dbg !37
  %477 = getelementptr i8, ptr addrspace(3) %351, i64 252, !dbg !37
  %478 = load float, ptr addrspace(3) %477, align 4, !dbg !37
  %479 = insertelement <8 x float> poison, float %96, i64 0, !dbg !41
  %480 = insertelement <8 x float> %479, float %98, i64 1, !dbg !41
  %481 = insertelement <8 x float> %480, float %100, i64 2, !dbg !41
  %482 = insertelement <8 x float> %481, float %102, i64 3, !dbg !41
  %483 = shufflevector <8 x float> %482, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %484 = insertelement <8 x float> poison, float %352, i64 0, !dbg !41
  %485 = insertelement <8 x float> %484, float %354, i64 1, !dbg !41
  %486 = shufflevector <8 x float> %485, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %487 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %483, <8 x float> %486, <8 x float> %93), !dbg !41
  %488 = insertelement <8 x float> poison, float %104, i64 0, !dbg !41
  %489 = insertelement <8 x float> %488, float %106, i64 1, !dbg !41
  %490 = insertelement <8 x float> %489, float %108, i64 2, !dbg !41
  %491 = insertelement <8 x float> %490, float %110, i64 3, !dbg !41
  %492 = shufflevector <8 x float> %491, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %493 = insertelement <8 x float> poison, float %356, i64 0, !dbg !41
  %494 = insertelement <8 x float> %493, float %358, i64 1, !dbg !41
  %495 = shufflevector <8 x float> %494, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %496 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %492, <8 x float> %495, <8 x float> %487), !dbg !41
  %497 = insertelement <8 x float> poison, float %112, i64 0, !dbg !41
  %498 = insertelement <8 x float> %497, float %114, i64 1, !dbg !41
  %499 = insertelement <8 x float> %498, float %116, i64 2, !dbg !41
  %500 = insertelement <8 x float> %499, float %118, i64 3, !dbg !41
  %501 = shufflevector <8 x float> %500, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %502 = insertelement <8 x float> poison, float %360, i64 0, !dbg !41
  %503 = insertelement <8 x float> %502, float %362, i64 1, !dbg !41
  %504 = shufflevector <8 x float> %503, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %505 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %501, <8 x float> %504, <8 x float> %496), !dbg !41
  %506 = insertelement <8 x float> poison, float %120, i64 0, !dbg !41
  %507 = insertelement <8 x float> %506, float %122, i64 1, !dbg !41
  %508 = insertelement <8 x float> %507, float %124, i64 2, !dbg !41
  %509 = insertelement <8 x float> %508, float %126, i64 3, !dbg !41
  %510 = shufflevector <8 x float> %509, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %511 = insertelement <8 x float> poison, float %364, i64 0, !dbg !41
  %512 = insertelement <8 x float> %511, float %366, i64 1, !dbg !41
  %513 = shufflevector <8 x float> %512, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %514 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %510, <8 x float> %513, <8 x float> %505), !dbg !41
  %515 = insertelement <8 x float> poison, float %128, i64 0, !dbg !41
  %516 = insertelement <8 x float> %515, float %130, i64 1, !dbg !41
  %517 = insertelement <8 x float> %516, float %132, i64 2, !dbg !41
  %518 = insertelement <8 x float> %517, float %134, i64 3, !dbg !41
  %519 = shufflevector <8 x float> %518, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %520 = insertelement <8 x float> poison, float %368, i64 0, !dbg !41
  %521 = insertelement <8 x float> %520, float %370, i64 1, !dbg !41
  %522 = shufflevector <8 x float> %521, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %523 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %519, <8 x float> %522, <8 x float> %514), !dbg !41
  %524 = insertelement <8 x float> poison, float %136, i64 0, !dbg !41
  %525 = insertelement <8 x float> %524, float %138, i64 1, !dbg !41
  %526 = insertelement <8 x float> %525, float %140, i64 2, !dbg !41
  %527 = insertelement <8 x float> %526, float %142, i64 3, !dbg !41
  %528 = shufflevector <8 x float> %527, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %529 = insertelement <8 x float> poison, float %372, i64 0, !dbg !41
  %530 = insertelement <8 x float> %529, float %374, i64 1, !dbg !41
  %531 = shufflevector <8 x float> %530, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %532 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %528, <8 x float> %531, <8 x float> %523), !dbg !41
  %533 = insertelement <8 x float> poison, float %144, i64 0, !dbg !41
  %534 = insertelement <8 x float> %533, float %146, i64 1, !dbg !41
  %535 = insertelement <8 x float> %534, float %148, i64 2, !dbg !41
  %536 = insertelement <8 x float> %535, float %150, i64 3, !dbg !41
  %537 = shufflevector <8 x float> %536, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %538 = insertelement <8 x float> poison, float %376, i64 0, !dbg !41
  %539 = insertelement <8 x float> %538, float %378, i64 1, !dbg !41
  %540 = shufflevector <8 x float> %539, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %541 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %537, <8 x float> %540, <8 x float> %532), !dbg !41
  %542 = insertelement <8 x float> poison, float %152, i64 0, !dbg !41
  %543 = insertelement <8 x float> %542, float %154, i64 1, !dbg !41
  %544 = insertelement <8 x float> %543, float %156, i64 2, !dbg !41
  %545 = insertelement <8 x float> %544, float %158, i64 3, !dbg !41
  %546 = shufflevector <8 x float> %545, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %547 = insertelement <8 x float> poison, float %380, i64 0, !dbg !41
  %548 = insertelement <8 x float> %547, float %382, i64 1, !dbg !41
  %549 = shufflevector <8 x float> %548, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %550 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %546, <8 x float> %549, <8 x float> %541), !dbg !41
  %551 = insertelement <8 x float> poison, float %160, i64 0, !dbg !41
  %552 = insertelement <8 x float> %551, float %162, i64 1, !dbg !41
  %553 = insertelement <8 x float> %552, float %164, i64 2, !dbg !41
  %554 = insertelement <8 x float> %553, float %166, i64 3, !dbg !41
  %555 = shufflevector <8 x float> %554, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %556 = insertelement <8 x float> poison, float %384, i64 0, !dbg !41
  %557 = insertelement <8 x float> %556, float %386, i64 1, !dbg !41
  %558 = shufflevector <8 x float> %557, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %559 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %555, <8 x float> %558, <8 x float> %550), !dbg !41
  %560 = insertelement <8 x float> poison, float %168, i64 0, !dbg !41
  %561 = insertelement <8 x float> %560, float %170, i64 1, !dbg !41
  %562 = insertelement <8 x float> %561, float %172, i64 2, !dbg !41
  %563 = insertelement <8 x float> %562, float %174, i64 3, !dbg !41
  %564 = shufflevector <8 x float> %563, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %565 = insertelement <8 x float> poison, float %388, i64 0, !dbg !41
  %566 = insertelement <8 x float> %565, float %390, i64 1, !dbg !41
  %567 = shufflevector <8 x float> %566, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %568 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %564, <8 x float> %567, <8 x float> %559), !dbg !41
  %569 = insertelement <8 x float> poison, float %176, i64 0, !dbg !41
  %570 = insertelement <8 x float> %569, float %178, i64 1, !dbg !41
  %571 = insertelement <8 x float> %570, float %180, i64 2, !dbg !41
  %572 = insertelement <8 x float> %571, float %182, i64 3, !dbg !41
  %573 = shufflevector <8 x float> %572, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %574 = insertelement <8 x float> poison, float %392, i64 0, !dbg !41
  %575 = insertelement <8 x float> %574, float %394, i64 1, !dbg !41
  %576 = shufflevector <8 x float> %575, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %577 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %573, <8 x float> %576, <8 x float> %568), !dbg !41
  %578 = insertelement <8 x float> poison, float %184, i64 0, !dbg !41
  %579 = insertelement <8 x float> %578, float %186, i64 1, !dbg !41
  %580 = insertelement <8 x float> %579, float %188, i64 2, !dbg !41
  %581 = insertelement <8 x float> %580, float %190, i64 3, !dbg !41
  %582 = shufflevector <8 x float> %581, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %583 = insertelement <8 x float> poison, float %396, i64 0, !dbg !41
  %584 = insertelement <8 x float> %583, float %398, i64 1, !dbg !41
  %585 = shufflevector <8 x float> %584, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %586 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %582, <8 x float> %585, <8 x float> %577), !dbg !41
  %587 = insertelement <8 x float> poison, float %192, i64 0, !dbg !41
  %588 = insertelement <8 x float> %587, float %194, i64 1, !dbg !41
  %589 = insertelement <8 x float> %588, float %196, i64 2, !dbg !41
  %590 = insertelement <8 x float> %589, float %198, i64 3, !dbg !41
  %591 = shufflevector <8 x float> %590, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %592 = insertelement <8 x float> poison, float %400, i64 0, !dbg !41
  %593 = insertelement <8 x float> %592, float %402, i64 1, !dbg !41
  %594 = shufflevector <8 x float> %593, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %595 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %591, <8 x float> %594, <8 x float> %586), !dbg !41
  %596 = insertelement <8 x float> poison, float %200, i64 0, !dbg !41
  %597 = insertelement <8 x float> %596, float %202, i64 1, !dbg !41
  %598 = insertelement <8 x float> %597, float %204, i64 2, !dbg !41
  %599 = insertelement <8 x float> %598, float %206, i64 3, !dbg !41
  %600 = shufflevector <8 x float> %599, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %601 = insertelement <8 x float> poison, float %404, i64 0, !dbg !41
  %602 = insertelement <8 x float> %601, float %406, i64 1, !dbg !41
  %603 = shufflevector <8 x float> %602, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %604 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %600, <8 x float> %603, <8 x float> %595), !dbg !41
  %605 = insertelement <8 x float> poison, float %208, i64 0, !dbg !41
  %606 = insertelement <8 x float> %605, float %210, i64 1, !dbg !41
  %607 = insertelement <8 x float> %606, float %212, i64 2, !dbg !41
  %608 = insertelement <8 x float> %607, float %214, i64 3, !dbg !41
  %609 = shufflevector <8 x float> %608, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %610 = insertelement <8 x float> poison, float %408, i64 0, !dbg !41
  %611 = insertelement <8 x float> %610, float %410, i64 1, !dbg !41
  %612 = shufflevector <8 x float> %611, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %613 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %609, <8 x float> %612, <8 x float> %604), !dbg !41
  %614 = insertelement <8 x float> poison, float %216, i64 0, !dbg !41
  %615 = insertelement <8 x float> %614, float %218, i64 1, !dbg !41
  %616 = insertelement <8 x float> %615, float %220, i64 2, !dbg !41
  %617 = insertelement <8 x float> %616, float %222, i64 3, !dbg !41
  %618 = shufflevector <8 x float> %617, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %619 = insertelement <8 x float> poison, float %412, i64 0, !dbg !41
  %620 = insertelement <8 x float> %619, float %414, i64 1, !dbg !41
  %621 = shufflevector <8 x float> %620, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %622 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %618, <8 x float> %621, <8 x float> %613), !dbg !41
  %623 = insertelement <8 x float> poison, float %224, i64 0, !dbg !41
  %624 = insertelement <8 x float> %623, float %226, i64 1, !dbg !41
  %625 = insertelement <8 x float> %624, float %228, i64 2, !dbg !41
  %626 = insertelement <8 x float> %625, float %230, i64 3, !dbg !41
  %627 = shufflevector <8 x float> %626, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %628 = insertelement <8 x float> poison, float %416, i64 0, !dbg !41
  %629 = insertelement <8 x float> %628, float %418, i64 1, !dbg !41
  %630 = shufflevector <8 x float> %629, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %631 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %627, <8 x float> %630, <8 x float> %622), !dbg !41
  %632 = insertelement <8 x float> poison, float %232, i64 0, !dbg !41
  %633 = insertelement <8 x float> %632, float %234, i64 1, !dbg !41
  %634 = insertelement <8 x float> %633, float %236, i64 2, !dbg !41
  %635 = insertelement <8 x float> %634, float %238, i64 3, !dbg !41
  %636 = shufflevector <8 x float> %635, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %637 = insertelement <8 x float> poison, float %420, i64 0, !dbg !41
  %638 = insertelement <8 x float> %637, float %422, i64 1, !dbg !41
  %639 = shufflevector <8 x float> %638, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %640 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %636, <8 x float> %639, <8 x float> %631), !dbg !41
  %641 = insertelement <8 x float> poison, float %240, i64 0, !dbg !41
  %642 = insertelement <8 x float> %641, float %242, i64 1, !dbg !41
  %643 = insertelement <8 x float> %642, float %244, i64 2, !dbg !41
  %644 = insertelement <8 x float> %643, float %246, i64 3, !dbg !41
  %645 = shufflevector <8 x float> %644, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %646 = insertelement <8 x float> poison, float %424, i64 0, !dbg !41
  %647 = insertelement <8 x float> %646, float %426, i64 1, !dbg !41
  %648 = shufflevector <8 x float> %647, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %649 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %645, <8 x float> %648, <8 x float> %640), !dbg !41
  %650 = insertelement <8 x float> poison, float %248, i64 0, !dbg !41
  %651 = insertelement <8 x float> %650, float %250, i64 1, !dbg !41
  %652 = insertelement <8 x float> %651, float %252, i64 2, !dbg !41
  %653 = insertelement <8 x float> %652, float %254, i64 3, !dbg !41
  %654 = shufflevector <8 x float> %653, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %655 = insertelement <8 x float> poison, float %428, i64 0, !dbg !41
  %656 = insertelement <8 x float> %655, float %430, i64 1, !dbg !41
  %657 = shufflevector <8 x float> %656, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %658 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %654, <8 x float> %657, <8 x float> %649), !dbg !41
  %659 = insertelement <8 x float> poison, float %256, i64 0, !dbg !41
  %660 = insertelement <8 x float> %659, float %258, i64 1, !dbg !41
  %661 = insertelement <8 x float> %660, float %260, i64 2, !dbg !41
  %662 = insertelement <8 x float> %661, float %262, i64 3, !dbg !41
  %663 = shufflevector <8 x float> %662, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %664 = insertelement <8 x float> poison, float %432, i64 0, !dbg !41
  %665 = insertelement <8 x float> %664, float %434, i64 1, !dbg !41
  %666 = shufflevector <8 x float> %665, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %667 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %663, <8 x float> %666, <8 x float> %658), !dbg !41
  %668 = insertelement <8 x float> poison, float %264, i64 0, !dbg !41
  %669 = insertelement <8 x float> %668, float %266, i64 1, !dbg !41
  %670 = insertelement <8 x float> %669, float %268, i64 2, !dbg !41
  %671 = insertelement <8 x float> %670, float %270, i64 3, !dbg !41
  %672 = shufflevector <8 x float> %671, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %673 = insertelement <8 x float> poison, float %436, i64 0, !dbg !41
  %674 = insertelement <8 x float> %673, float %438, i64 1, !dbg !41
  %675 = shufflevector <8 x float> %674, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %676 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %672, <8 x float> %675, <8 x float> %667), !dbg !41
  %677 = insertelement <8 x float> poison, float %272, i64 0, !dbg !41
  %678 = insertelement <8 x float> %677, float %274, i64 1, !dbg !41
  %679 = insertelement <8 x float> %678, float %276, i64 2, !dbg !41
  %680 = insertelement <8 x float> %679, float %278, i64 3, !dbg !41
  %681 = shufflevector <8 x float> %680, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %682 = insertelement <8 x float> poison, float %440, i64 0, !dbg !41
  %683 = insertelement <8 x float> %682, float %442, i64 1, !dbg !41
  %684 = shufflevector <8 x float> %683, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %685 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %681, <8 x float> %684, <8 x float> %676), !dbg !41
  %686 = insertelement <8 x float> poison, float %280, i64 0, !dbg !41
  %687 = insertelement <8 x float> %686, float %282, i64 1, !dbg !41
  %688 = insertelement <8 x float> %687, float %284, i64 2, !dbg !41
  %689 = insertelement <8 x float> %688, float %286, i64 3, !dbg !41
  %690 = shufflevector <8 x float> %689, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %691 = insertelement <8 x float> poison, float %444, i64 0, !dbg !41
  %692 = insertelement <8 x float> %691, float %446, i64 1, !dbg !41
  %693 = shufflevector <8 x float> %692, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %694 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %690, <8 x float> %693, <8 x float> %685), !dbg !41
  %695 = insertelement <8 x float> poison, float %288, i64 0, !dbg !41
  %696 = insertelement <8 x float> %695, float %290, i64 1, !dbg !41
  %697 = insertelement <8 x float> %696, float %292, i64 2, !dbg !41
  %698 = insertelement <8 x float> %697, float %294, i64 3, !dbg !41
  %699 = shufflevector <8 x float> %698, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %700 = insertelement <8 x float> poison, float %448, i64 0, !dbg !41
  %701 = insertelement <8 x float> %700, float %450, i64 1, !dbg !41
  %702 = shufflevector <8 x float> %701, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %703 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %699, <8 x float> %702, <8 x float> %694), !dbg !41
  %704 = insertelement <8 x float> poison, float %296, i64 0, !dbg !41
  %705 = insertelement <8 x float> %704, float %298, i64 1, !dbg !41
  %706 = insertelement <8 x float> %705, float %300, i64 2, !dbg !41
  %707 = insertelement <8 x float> %706, float %302, i64 3, !dbg !41
  %708 = shufflevector <8 x float> %707, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %709 = insertelement <8 x float> poison, float %452, i64 0, !dbg !41
  %710 = insertelement <8 x float> %709, float %454, i64 1, !dbg !41
  %711 = shufflevector <8 x float> %710, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %712 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %708, <8 x float> %711, <8 x float> %703), !dbg !41
  %713 = insertelement <8 x float> poison, float %304, i64 0, !dbg !41
  %714 = insertelement <8 x float> %713, float %306, i64 1, !dbg !41
  %715 = insertelement <8 x float> %714, float %308, i64 2, !dbg !41
  %716 = insertelement <8 x float> %715, float %310, i64 3, !dbg !41
  %717 = shufflevector <8 x float> %716, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %718 = insertelement <8 x float> poison, float %456, i64 0, !dbg !41
  %719 = insertelement <8 x float> %718, float %458, i64 1, !dbg !41
  %720 = shufflevector <8 x float> %719, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %721 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %717, <8 x float> %720, <8 x float> %712), !dbg !41
  %722 = insertelement <8 x float> poison, float %312, i64 0, !dbg !41
  %723 = insertelement <8 x float> %722, float %314, i64 1, !dbg !41
  %724 = insertelement <8 x float> %723, float %316, i64 2, !dbg !41
  %725 = insertelement <8 x float> %724, float %318, i64 3, !dbg !41
  %726 = shufflevector <8 x float> %725, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %727 = insertelement <8 x float> poison, float %460, i64 0, !dbg !41
  %728 = insertelement <8 x float> %727, float %462, i64 1, !dbg !41
  %729 = shufflevector <8 x float> %728, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %730 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %726, <8 x float> %729, <8 x float> %721), !dbg !41
  %731 = insertelement <8 x float> poison, float %320, i64 0, !dbg !41
  %732 = insertelement <8 x float> %731, float %322, i64 1, !dbg !41
  %733 = insertelement <8 x float> %732, float %324, i64 2, !dbg !41
  %734 = insertelement <8 x float> %733, float %326, i64 3, !dbg !41
  %735 = shufflevector <8 x float> %734, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %736 = insertelement <8 x float> poison, float %464, i64 0, !dbg !41
  %737 = insertelement <8 x float> %736, float %466, i64 1, !dbg !41
  %738 = shufflevector <8 x float> %737, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %739 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %735, <8 x float> %738, <8 x float> %730), !dbg !41
  %740 = insertelement <8 x float> poison, float %328, i64 0, !dbg !41
  %741 = insertelement <8 x float> %740, float %330, i64 1, !dbg !41
  %742 = insertelement <8 x float> %741, float %332, i64 2, !dbg !41
  %743 = insertelement <8 x float> %742, float %334, i64 3, !dbg !41
  %744 = shufflevector <8 x float> %743, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %745 = insertelement <8 x float> poison, float %468, i64 0, !dbg !41
  %746 = insertelement <8 x float> %745, float %470, i64 1, !dbg !41
  %747 = shufflevector <8 x float> %746, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %748 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %744, <8 x float> %747, <8 x float> %739), !dbg !41
  %749 = insertelement <8 x float> poison, float %336, i64 0, !dbg !41
  %750 = insertelement <8 x float> %749, float %338, i64 1, !dbg !41
  %751 = insertelement <8 x float> %750, float %340, i64 2, !dbg !41
  %752 = insertelement <8 x float> %751, float %342, i64 3, !dbg !41
  %753 = shufflevector <8 x float> %752, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %754 = insertelement <8 x float> poison, float %472, i64 0, !dbg !41
  %755 = insertelement <8 x float> %754, float %474, i64 1, !dbg !41
  %756 = shufflevector <8 x float> %755, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %757 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %753, <8 x float> %756, <8 x float> %748), !dbg !41
  %758 = insertelement <8 x float> poison, float %344, i64 0, !dbg !41
  %759 = insertelement <8 x float> %758, float %346, i64 1, !dbg !41
  %760 = insertelement <8 x float> %759, float %348, i64 2, !dbg !41
  %761 = insertelement <8 x float> %760, float %350, i64 3, !dbg !41
  %762 = shufflevector <8 x float> %761, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %763 = insertelement <8 x float> poison, float %476, i64 0, !dbg !41
  %764 = insertelement <8 x float> %763, float %478, i64 1, !dbg !41
  %765 = shufflevector <8 x float> %764, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %766 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %762, <8 x float> %765, <8 x float> %757), !dbg !41
  %767 = getelementptr i8, ptr addrspace(1) %.pn826, i64 128, !dbg !38
  %768 = getelementptr i8, ptr addrspace(1) %.pn2427, i64 128, !dbg !39
  %769 = getelementptr i8, ptr addrspace(1) %.pn1628, i64 128, !dbg !39
  %770 = add i32 %91, 1, !dbg !40
  %771 = icmp slt i32 %770, 4, !dbg !40
  %772 = select i1 %771, i32 %770, i32 0, !dbg !40
  %773 = shl i32 %772, 10, !dbg !36
  %774 = sext i32 %773 to i64, !dbg !36
  %775 = and i1 %94, %81, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %gep = getelementptr float, ptr addrspace(3) %55, i64 %774, !dbg !36
  %776 = select i1 %775, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %767, i32 %776, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %777 = shl i32 %772, 11, !dbg !37
  %778 = sext i32 %777 to i64, !dbg !37
  %779 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %778, !dbg !37
  %780 = getelementptr float, ptr addrspace(3) %779, i64 %54, !dbg !37
  %781 = getelementptr float, ptr addrspace(3) %779, i64 %59, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %780, ptr addrspace(1) %768, i32 %776, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %781, ptr addrspace(1) %769, i32 %776, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %782 = add i32 %90, 1, !dbg !40
  %783 = icmp slt i32 %782, 4, !dbg !40
  %784 = select i1 %783, i32 %782, i32 0, !dbg !40
  %785 = shl i32 %784, 10, !dbg !36
  %786 = sext i32 %785 to i64, !dbg !36
  %787 = getelementptr float, ptr addrspace(3) @global_smem, i64 %786, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %788 = shl i32 %784, 11, !dbg !37
  %789 = sext i32 %788 to i64, !dbg !37
  %790 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %789, !dbg !37
  %791 = add nuw nsw i32 %92, 32, !dbg !40
  %792 = icmp ult i32 %92, 124, !dbg !40
  br i1 %792, label %87, label %793, !dbg !40

793:                                              ; preds = %87
  %794 = or disjoint i32 %30, 16, !dbg !24
  %795 = and i32 %33, 60, !dbg !26
  %796 = or disjoint i32 %795, %31, !dbg !27
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %797 = and i32 %79, 14, !dbg !40
  %798 = mul nuw nsw i32 %797, 68, !dbg !40
  %799 = add nuw nsw i32 %798, %80, !dbg !40
  %800 = zext nneg i32 %799 to i64, !dbg !40
  %801 = getelementptr float, ptr addrspace(3) @global_smem, i64 %800, !dbg !40
  %802 = shufflevector <8 x float> %766, <8 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !40
  store <2 x float> %802, ptr addrspace(3) %801, align 8, !dbg !40
  %803 = getelementptr i8, ptr addrspace(3) %801, i64 272, !dbg !40
  %804 = shufflevector <8 x float> %766, <8 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !40
  store <2 x float> %804, ptr addrspace(3) %803, align 8, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %805 = lshr i32 %21, 4, !dbg !40
  %806 = or disjoint i32 %797, %805, !dbg !40
  %807 = and i32 %33, 60, !dbg !40
  %808 = mul nuw nsw i32 %806, 68, !dbg !40
  %809 = add nuw nsw i32 %808, %807, !dbg !40
  %810 = zext nneg i32 %809 to i64, !dbg !40
  %811 = getelementptr float, ptr addrspace(3) @global_smem, i64 %810, !dbg !40
  %812 = load float, ptr addrspace(3) %811, align 16, !dbg !40
  %813 = getelementptr inbounds i8, ptr addrspace(3) %811, i64 4, !dbg !40
  %814 = load float, ptr addrspace(3) %813, align 4, !dbg !40
  %815 = getelementptr inbounds i8, ptr addrspace(3) %811, i64 8, !dbg !40
  %816 = load float, ptr addrspace(3) %815, align 8, !dbg !40
  %817 = getelementptr inbounds i8, ptr addrspace(3) %811, i64 12, !dbg !40
  %818 = load float, ptr addrspace(3) %817, align 4, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %819 = shufflevector <8 x float> %766, <8 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !40
  store <2 x float> %819, ptr addrspace(3) %801, align 8, !dbg !40
  %820 = shufflevector <8 x float> %766, <8 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !40
  store <2 x float> %820, ptr addrspace(3) %803, align 8, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %821 = load float, ptr addrspace(3) %811, align 16, !dbg !40
  %822 = load float, ptr addrspace(3) %813, align 4, !dbg !40
  %823 = load float, ptr addrspace(3) %815, align 8, !dbg !40
  %824 = load float, ptr addrspace(3) %817, align 4, !dbg !40
  %825 = icmp slt i32 %30, %4, !dbg !42
  %826 = icmp slt i32 %794, %4, !dbg !42
  %827 = icmp slt i32 %796, 128, !dbg !43
  %828 = and i1 %827, %825, !dbg !44
  %829 = and i1 %826, %827, !dbg !44
  %830 = shl i32 %30, 7, !dbg !45
  %831 = shl i32 %794, 7, !dbg !45
  %832 = add i32 %830, %796, !dbg !46
  %833 = add i32 %796, %831, !dbg !46
  %834 = sext i32 %796 to i64, !dbg !47
  %835 = getelementptr float, ptr addrspace(1) %0, i64 %834, !dbg !47
  %836 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %835, i1 %828) #3, !dbg !48
  %837 = extractvalue { i32, i32, i32, i32 } %836, 0, !dbg !48
  %838 = extractvalue { i32, i32, i32, i32 } %836, 1, !dbg !48
  %839 = extractvalue { i32, i32, i32, i32 } %836, 2, !dbg !48
  %840 = extractvalue { i32, i32, i32, i32 } %836, 3, !dbg !48
  %841 = bitcast i32 %837 to float, !dbg !48
  %842 = bitcast i32 %838 to float, !dbg !48
  %843 = bitcast i32 %839 to float, !dbg !48
  %844 = bitcast i32 %840 to float, !dbg !48
  %845 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %835, i1 %829) #3, !dbg !48
  %846 = extractvalue { i32, i32, i32, i32 } %845, 0, !dbg !48
  %847 = extractvalue { i32, i32, i32, i32 } %845, 1, !dbg !48
  %848 = extractvalue { i32, i32, i32, i32 } %845, 2, !dbg !48
  %849 = extractvalue { i32, i32, i32, i32 } %845, 3, !dbg !48
  %850 = bitcast i32 %846 to float, !dbg !48
  %851 = bitcast i32 %847 to float, !dbg !48
  %852 = bitcast i32 %848 to float, !dbg !48
  %853 = bitcast i32 %849 to float, !dbg !48
  %854 = fadd float %812, %841, !dbg !49
  %855 = fadd float %814, %842, !dbg !49
  %856 = fadd float %816, %843, !dbg !49
  %857 = fadd float %818, %844, !dbg !49
  %858 = fadd float %821, %850, !dbg !49
  %859 = fadd float %822, %851, !dbg !49
  %860 = fadd float %823, %852, !dbg !49
  %861 = fadd float %824, %853, !dbg !49
  %862 = sext i32 %832 to i64, !dbg !50
  %863 = getelementptr float, ptr addrspace(1) %3, i64 %862, !dbg !50
  %864 = sext i32 %833 to i64, !dbg !50
  %865 = getelementptr float, ptr addrspace(1) %3, i64 %864, !dbg !50
  %866 = bitcast float %854 to i32, !dbg !51
  %867 = bitcast float %855 to i32, !dbg !51
  %868 = bitcast float %856 to i32, !dbg !51
  %869 = bitcast float %857 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %866, i32 %867, i32 %868, i32 %869, ptr addrspace(1) %863, i1 %828) #3, !dbg !51
  %870 = bitcast float %858 to i32, !dbg !51
  %871 = bitcast float %859 to i32, !dbg !51
  %872 = bitcast float %860 to i32, !dbg !51
  %873 = bitcast float %861 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %870, i32 %871, i32 %872, i32 %873, ptr addrspace(1) %865, i1 %829) #3, !dbg !51
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cda6sznpspw3s2topc5gy5p27sc3cjpckbpvgxnbpi77davui7ue.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/da")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 16, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 42, column: 24, scope: !7)
!13 = !DILocation(line: 43, column: 28, scope: !7)
!14 = !DILocation(line: 43, column: 34, scope: !7)
!15 = !DILocation(line: 48, column: 22, scope: !7)
!16 = !DILocation(line: 49, column: 41, scope: !7)
!17 = !DILocation(line: 49, column: 30, scope: !7)
!18 = !DILocation(line: 49, column: 50, scope: !7)
!19 = !DILocation(line: 50, column: 40, scope: !7)
!20 = !DILocation(line: 50, column: 34, scope: !7)
!21 = !DILocation(line: 51, column: 30, scope: !7)
!22 = !DILocation(line: 53, column: 17, scope: !7)
!23 = !DILocation(line: 53, column: 40, scope: !7)
!24 = !DILocation(line: 53, column: 27, scope: !7)
!25 = !DILocation(line: 54, column: 17, scope: !7)
!26 = !DILocation(line: 54, column: 40, scope: !7)
!27 = !DILocation(line: 54, column: 27, scope: !7)
!28 = !DILocation(line: 56, column: 52, scope: !7)
!29 = !DILocation(line: 60, column: 52, scope: !7)
!30 = !DILocation(line: 64, column: 28, scope: !7)
!31 = !DILocation(line: 64, column: 40, scope: !7)
!32 = !DILocation(line: 64, column: 13, scope: !7)
!33 = !DILocation(line: 65, column: 54, scope: !7)
!34 = !DILocation(line: 65, column: 39, scope: !7)
!35 = !DILocation(line: 65, column: 13, scope: !7)
!36 = !DILocation(line: 73, column: 24, scope: !7)
!37 = !DILocation(line: 74, column: 24, scope: !7)
!38 = !DILocation(line: 78, column: 13, scope: !7)
!39 = !DILocation(line: 79, column: 13, scope: !7)
!40 = !DILocation(line: 68, column: 25, scope: !7)
!41 = !DILocation(line: 77, column: 25, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 30, scope: !7)
!48 = !DILocation(line: 90, column: 66, scope: !7)
!49 = !DILocation(line: 91, column: 17, scope: !7)
!50 = !DILocation(line: 92, column: 25, scope: !7)
!51 = !DILocation(line: 92, column: 68, scope: !7)
