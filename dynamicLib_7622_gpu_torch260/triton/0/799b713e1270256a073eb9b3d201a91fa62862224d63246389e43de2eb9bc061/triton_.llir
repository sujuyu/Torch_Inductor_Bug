; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 5, !dbg !12
  %9 = and i32 %8, 3, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 4, !dbg !13
  %12 = icmp slt i32 %10, %2, !dbg !14
  %13 = icmp slt i32 %11, %2, !dbg !14
  %14 = shl i32 %7, 1, !dbg !15
  %15 = and i32 %14, 62, !dbg !15
  %16 = icmp ult i32 %15, 50, !dbg !16
  %17 = mul i32 %10, 50, !dbg !17
  %18 = mul i32 %11, 50, !dbg !17
  %19 = add i32 %17, %15, !dbg !18
  %20 = add i32 %18, %15, !dbg !18
  %21 = sext i32 %19 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = sext i32 %20 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !19
  %25 = and i1 %16, %12, !dbg !20
  %26 = and i1 %16, %13, !dbg !20
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %22, i1 %25, i32 0, i1 %25, i32 0, i1 %25) #2, !dbg !21
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !21
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !21
  %30 = bitcast i32 %28 to float, !dbg !21
  %31 = bitcast i32 %29 to float, !dbg !21
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %24, i1 %26, i32 0, i1 %26, i32 0, i1 %26) #2, !dbg !21
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !21
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = select i1 %25, float %30, float 0xFFF0000000000000, !dbg !22
  %38 = select i1 %25, float %31, float 0xFFF0000000000000, !dbg !22
  %39 = select i1 %26, float %35, float 0xFFF0000000000000, !dbg !22
  %40 = select i1 %26, float %36, float 0xFFF0000000000000, !dbg !22
  %41 = fcmp ogt float %37, %38, !dbg !23
  %42 = fcmp uno float %37, 0.000000e+00, !dbg !28
  %43 = or i1 %41, %42, !dbg !29
  %44 = select i1 %43, float %37, float %38, !dbg !30
  %45 = fcmp ogt float %39, %40, !dbg !23
  %46 = fcmp uno float %39, 0.000000e+00, !dbg !28
  %47 = or i1 %45, %46, !dbg !29
  %48 = select i1 %47, float %39, float %40, !dbg !30
  %49 = bitcast float %44 to i32, !dbg !31
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 16, i32 31), !dbg !31
  %51 = bitcast i32 %50 to float, !dbg !31
  %52 = fcmp ogt float %44, %51, !dbg !23
  %53 = fcmp uno float %44, 0.000000e+00, !dbg !28
  %54 = or i1 %52, %53, !dbg !29
  %55 = select i1 %54, float %44, float %51, !dbg !30
  %56 = bitcast float %55 to i32, !dbg !31
  %57 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %56, i32 8, i32 31), !dbg !31
  %58 = bitcast i32 %57 to float, !dbg !31
  %59 = fcmp ogt float %55, %58, !dbg !23
  %60 = fcmp uno float %55, 0.000000e+00, !dbg !28
  %61 = or i1 %59, %60, !dbg !29
  %62 = select i1 %61, float %55, float %58, !dbg !30
  %63 = bitcast float %62 to i32, !dbg !31
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 4, i32 31), !dbg !31
  %65 = bitcast i32 %64 to float, !dbg !31
  %66 = fcmp ogt float %62, %65, !dbg !23
  %67 = fcmp uno float %62, 0.000000e+00, !dbg !28
  %68 = or i1 %66, %67, !dbg !29
  %69 = select i1 %68, float %62, float %65, !dbg !30
  %70 = bitcast float %69 to i32, !dbg !31
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 2, i32 31), !dbg !31
  %72 = bitcast i32 %71 to float, !dbg !31
  %73 = fcmp ogt float %69, %72, !dbg !23
  %74 = fcmp uno float %69, 0.000000e+00, !dbg !28
  %75 = or i1 %73, %74, !dbg !29
  %76 = select i1 %75, float %69, float %72, !dbg !30
  %77 = bitcast float %76 to i32, !dbg !31
  %78 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %77, i32 1, i32 31), !dbg !31
  %79 = bitcast i32 %78 to float, !dbg !31
  %80 = fcmp ogt float %76, %79, !dbg !23
  %81 = fcmp uno float %76, 0.000000e+00, !dbg !28
  %82 = or i1 %80, %81, !dbg !29
  %83 = select i1 %82, float %76, float %79, !dbg !30
  %84 = bitcast float %48 to i32, !dbg !31
  %85 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %84, i32 16, i32 31), !dbg !31
  %86 = bitcast i32 %85 to float, !dbg !31
  %87 = fcmp ogt float %48, %86, !dbg !23
  %88 = fcmp uno float %48, 0.000000e+00, !dbg !28
  %89 = or i1 %88, %87, !dbg !29
  %90 = select i1 %89, float %48, float %86, !dbg !30
  %91 = bitcast float %90 to i32, !dbg !31
  %92 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %91, i32 8, i32 31), !dbg !31
  %93 = bitcast i32 %92 to float, !dbg !31
  %94 = fcmp ogt float %90, %93, !dbg !23
  %95 = fcmp uno float %90, 0.000000e+00, !dbg !28
  %96 = or i1 %94, %95, !dbg !29
  %97 = select i1 %96, float %90, float %93, !dbg !30
  %98 = bitcast float %97 to i32, !dbg !31
  %99 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %98, i32 4, i32 31), !dbg !31
  %100 = bitcast i32 %99 to float, !dbg !31
  %101 = fcmp ogt float %97, %100, !dbg !23
  %102 = fcmp uno float %97, 0.000000e+00, !dbg !28
  %103 = or i1 %101, %102, !dbg !29
  %104 = select i1 %103, float %97, float %100, !dbg !30
  %105 = bitcast float %104 to i32, !dbg !31
  %106 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %105, i32 2, i32 31), !dbg !31
  %107 = bitcast i32 %106 to float, !dbg !31
  %108 = fcmp ogt float %104, %107, !dbg !23
  %109 = fcmp uno float %104, 0.000000e+00, !dbg !28
  %110 = or i1 %108, %109, !dbg !29
  %111 = select i1 %110, float %104, float %107, !dbg !30
  %112 = bitcast float %111 to i32, !dbg !31
  %113 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %112, i32 1, i32 31), !dbg !31
  %114 = bitcast i32 %113 to float, !dbg !31
  %115 = fcmp ogt float %111, %114, !dbg !23
  %116 = fcmp uno float %111, 0.000000e+00, !dbg !28
  %117 = or i1 %115, %116, !dbg !29
  %118 = select i1 %117, float %111, float %114, !dbg !30
  %119 = fsub float %30, %83, !dbg !32
  %120 = fsub float %31, %83, !dbg !32
  %121 = fsub float %35, %118, !dbg !32
  %122 = fsub float %36, %118, !dbg !32
  %123 = fmul float %119, 2.500000e-01, !dbg !33
  %124 = fmul float %120, 2.500000e-01, !dbg !33
  %125 = fmul float %121, 2.500000e-01, !dbg !33
  %126 = fmul float %122, 2.500000e-01, !dbg !33
  %127 = fmul float %123, 0x3FF7154760000000, !dbg !34
  %128 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %127) #2, !dbg !34
  %129 = fmul float %124, 0x3FF7154760000000, !dbg !34
  %130 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %129) #2, !dbg !34
  %131 = fmul float %125, 0x3FF7154760000000, !dbg !34
  %132 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %131) #2, !dbg !34
  %133 = fmul float %126, 0x3FF7154760000000, !dbg !34
  %134 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %133) #2, !dbg !34
  %135 = fadd float %128, %130, !dbg !35
  %136 = select i1 %25, float %135, float 0.000000e+00, !dbg !35
  %137 = fadd float %132, %134, !dbg !35
  %138 = select i1 %26, float %137, float 0.000000e+00, !dbg !35
  %139 = bitcast float %136 to i32, !dbg !40
  %140 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %139, i32 16, i32 31), !dbg !40
  %141 = bitcast i32 %140 to float, !dbg !40
  %142 = fadd float %136, %141, !dbg !35
  %143 = bitcast float %142 to i32, !dbg !40
  %144 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %143, i32 8, i32 31), !dbg !40
  %145 = bitcast i32 %144 to float, !dbg !40
  %146 = fadd float %142, %145, !dbg !35
  %147 = bitcast float %146 to i32, !dbg !40
  %148 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %147, i32 4, i32 31), !dbg !40
  %149 = bitcast i32 %148 to float, !dbg !40
  %150 = fadd float %146, %149, !dbg !35
  %151 = bitcast float %150 to i32, !dbg !40
  %152 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %151, i32 2, i32 31), !dbg !40
  %153 = bitcast i32 %152 to float, !dbg !40
  %154 = fadd float %150, %153, !dbg !35
  %155 = bitcast float %154 to i32, !dbg !40
  %156 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %155, i32 1, i32 31), !dbg !40
  %157 = bitcast i32 %156 to float, !dbg !40
  %158 = fadd float %154, %157, !dbg !35
  %159 = bitcast float %138 to i32, !dbg !40
  %160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %159, i32 16, i32 31), !dbg !40
  %161 = bitcast i32 %160 to float, !dbg !40
  %162 = fadd float %138, %161, !dbg !35
  %163 = bitcast float %162 to i32, !dbg !40
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 8, i32 31), !dbg !40
  %165 = bitcast i32 %164 to float, !dbg !40
  %166 = fadd float %162, %165, !dbg !35
  %167 = bitcast float %166 to i32, !dbg !40
  %168 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %167, i32 4, i32 31), !dbg !40
  %169 = bitcast i32 %168 to float, !dbg !40
  %170 = fadd float %166, %169, !dbg !35
  %171 = bitcast float %170 to i32, !dbg !40
  %172 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 2, i32 31), !dbg !40
  %173 = bitcast i32 %172 to float, !dbg !40
  %174 = fadd float %170, %173, !dbg !35
  %175 = bitcast float %174 to i32, !dbg !40
  %176 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %175, i32 1, i32 31), !dbg !40
  %177 = bitcast i32 %176 to float, !dbg !40
  %178 = fadd float %174, %177, !dbg !35
  %179 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %128, float %158) #2, !dbg !41
  %180 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %130, float %158) #2, !dbg !41
  %181 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %132, float %178) #2, !dbg !41
  %182 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %134, float %178) #2, !dbg !41
  %183 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !42
  %184 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !42
  %185 = bitcast float %179 to i32, !dbg !43
  %186 = bitcast float %180 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %185, i32 %186, ptr addrspace(1) %183, i1 %25) #2, !dbg !43
  %187 = bitcast float %181 to i32, !dbg !43
  %188 = bitcast float %182 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %187, i32 %188, ptr addrspace(1) %184, i1 %26) #2, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cji6genlqlzfsvy7mazgz5dxtagx7gskl2ny2a5wxmn3a4b7nbin.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ji")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 44, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 29, column: 39, scope: !7)
!18 = !DILocation(line: 29, column: 36, scope: !7)
!19 = !DILocation(line: 29, column: 30, scope: !7)
!20 = !DILocation(line: 29, column: 53, scope: !7)
!21 = !DILocation(line: 29, column: 45, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 82, column: 15, scope: !24, inlinedAt: !27)
!24 = distinct !DILexicalBlockFile(scope: !26, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime")
!26 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!27 = !DILocation(line: 34, column: 37, scope: !7)
!28 = !DILocation(line: 84, column: 21, scope: !24, inlinedAt: !27)
!29 = !DILocation(line: 84, column: 16, scope: !24, inlinedAt: !27)
!30 = !DILocation(line: 85, column: 29, scope: !24, inlinedAt: !27)
!31 = !DILocation(line: 95, column: 29, scope: !26, inlinedAt: !27)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 24, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !39)
!36 = distinct !DILexicalBlockFile(scope: !38, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language")
!38 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!39 = !DILocation(line: 41, column: 26, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !39)
!41 = !DILocation(line: 42, column: 20, scope: !7)
!42 = !DILocation(line: 43, column: 25, scope: !7)
!43 = !DILocation(line: 43, column: 47, scope: !7)
!44 = !DILocation(line: 43, column: 4, scope: !7)
