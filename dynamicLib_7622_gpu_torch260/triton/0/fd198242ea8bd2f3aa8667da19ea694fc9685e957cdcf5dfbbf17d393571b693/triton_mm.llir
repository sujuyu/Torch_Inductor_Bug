; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = mul i32 %4, 50, !dbg !10
  %7 = mul i32 %4, 6400, !dbg !11
  %8 = icmp eq i32 %7, 0, !dbg !12
  br i1 %8, label %common.ret, label %9, !dbg !12

common.ret:                                       ; preds = %5, %786
  ret void, !dbg !11

9:                                                ; preds = %5
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !13
  %11 = add i32 %6, 63, !dbg !14
  %12 = sdiv i32 %11, 64, !dbg !15
  %.frozen = freeze i32 %10
  %13 = sdiv i32 %.frozen, 32, !dbg !16
  %14 = shl nsw i32 %13, 3, !dbg !17
  %15 = sub nsw i32 %12, %14, !dbg !18
  %16 = tail call i32 @llvm.smin.i32(i32 %15, i32 8), !dbg !19
  %17 = srem i32 %10, %16, !dbg !20
  %18 = add nsw i32 %14, %17, !dbg !21
  %19 = mul i32 %13, 32
  %.decomposed = sub i32 %.frozen, %19
  %20 = sdiv i32 %.decomposed, %16, !dbg !22
  %21 = shl i32 %18, 6, !dbg !23
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !24
  %23 = lshr i32 %22, 3, !dbg !24
  %24 = and i32 %23, 31, !dbg !24
  %25 = or disjoint i32 %24, 32, !dbg !24
  %26 = or disjoint i32 %21, %24, !dbg !25
  %27 = or disjoint i32 %21, %25, !dbg !25
  %28 = shl nsw i32 %20, 5, !dbg !26
  %29 = shl i32 %22, 2, !dbg !27
  %30 = and i32 %29, 28, !dbg !27
  %31 = or disjoint i32 %28, %24, !dbg !28
  %32 = srem i32 %26, %6, !dbg !29
  %33 = srem i32 %27, %6, !dbg !29
  %34 = srem i32 %31, 128, !dbg !30
  %35 = mul i32 %32, 172, !dbg !31
  %36 = mul i32 %33, 172, !dbg !31
  %37 = add i32 %35, %30, !dbg !32
  %38 = add i32 %36, %30, !dbg !32
  %39 = sext i32 %37 to i64, !dbg !33
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !33
  %41 = sext i32 %38 to i64, !dbg !33
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !33
  %43 = mul nsw i32 %34, 172, !dbg !34
  %44 = add nsw i32 %43, %30, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !36
  %47 = shl nuw nsw i32 %24, 5, !dbg !37
  %48 = or disjoint i32 %47, %30, !dbg !37
  %49 = zext nneg i32 %48 to i64, !dbg !37
  %50 = getelementptr float, ptr addrspace(3) @global_smem, i64 %49, !dbg !37
  %51 = shl nuw nsw i32 %25, 5, !dbg !37
  %52 = or disjoint i32 %51, %30, !dbg !37
  %53 = zext nneg i32 %52 to i64, !dbg !37
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %50, ptr addrspace(1) %40, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %54, ptr addrspace(1) %42, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %55 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %49, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %46, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %56 = getelementptr i8, ptr addrspace(1) %40, i64 128, !dbg !39
  %57 = getelementptr i8, ptr addrspace(1) %42, i64 128, !dbg !39
  %58 = getelementptr i8, ptr addrspace(1) %46, i64 128, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %59 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %49, !dbg !37
  %60 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %53, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %59, ptr addrspace(1) %56, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %60, ptr addrspace(1) %57, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %61 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 36864), i64 %49, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %61, ptr addrspace(1) %58, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %62 = getelementptr i8, ptr addrspace(1) %40, i64 256, !dbg !39
  %63 = getelementptr i8, ptr addrspace(1) %42, i64 256, !dbg !39
  %64 = getelementptr i8, ptr addrspace(1) %46, i64 256, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %65 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %49, !dbg !37
  %66 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %53, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %65, ptr addrspace(1) %62, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %66, ptr addrspace(1) %63, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %67 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %49, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %67, ptr addrspace(1) %64, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %68 = getelementptr i8, ptr addrspace(1) %40, i64 384, !dbg !39
  %69 = getelementptr i8, ptr addrspace(1) %42, i64 384, !dbg !39
  %70 = getelementptr i8, ptr addrspace(1) %46, i64 384, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %71 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %49, !dbg !37
  %72 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %53, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %71, ptr addrspace(1) %68, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %72, ptr addrspace(1) %69, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %73 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 45056), i64 %49, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %73, ptr addrspace(1) %70, i32 16, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %74 = shl i32 %22, 1
  %75 = and i32 %74, 30
  %invariant.op = sub nuw nsw i32 44, %30, !dbg !41
  %invariant.umin = tail call i32 @llvm.umin.i32(i32 %invariant.op, i32 44), !dbg !41
  %76 = shl i32 %23, 5
  %77 = and i32 %76, 1984
  %78 = zext nneg i32 %77 to i64
  %79 = shl nuw nsw i32 %75, 5
  %80 = zext nneg i32 %79 to i64
  br label %81, !dbg !41

81:                                               ; preds = %9, %81
  %82 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), %9 ], [ %783, %81 ]
  %83 = phi ptr addrspace(3) [ @global_smem, %9 ], [ %780, %81 ]
  %84 = phi i32 [ 0, %9 ], [ %777, %81 ]
  %85 = phi i32 [ 3, %9 ], [ %765, %81 ]
  %.pn2326 = phi ptr addrspace(1) [ %70, %9 ], [ %762, %81 ]
  %.pn725 = phi ptr addrspace(1) [ %69, %9 ], [ %761, %81 ]
  %.pn1524 = phi ptr addrspace(1) [ %68, %9 ], [ %760, %81 ]
  %86 = phi i32 [ 0, %9 ], [ %784, %81 ]
  %87 = phi <8 x float> [ zeroinitializer, %9 ], [ %759, %81 ]
  %88 = getelementptr float, ptr addrspace(3) %83, i64 %78, !dbg !37
  %89 = load float, ptr addrspace(3) %88, align 4, !dbg !37
  %90 = getelementptr i8, ptr addrspace(3) %88, i64 128, !dbg !37
  %91 = load float, ptr addrspace(3) %90, align 4, !dbg !37
  %92 = getelementptr i8, ptr addrspace(3) %88, i64 4096, !dbg !37
  %93 = load float, ptr addrspace(3) %92, align 4, !dbg !37
  %94 = getelementptr i8, ptr addrspace(3) %88, i64 4224, !dbg !37
  %95 = load float, ptr addrspace(3) %94, align 4, !dbg !37
  %96 = getelementptr i8, ptr addrspace(3) %88, i64 4, !dbg !37
  %97 = load float, ptr addrspace(3) %96, align 4, !dbg !37
  %98 = getelementptr i8, ptr addrspace(3) %88, i64 132, !dbg !37
  %99 = load float, ptr addrspace(3) %98, align 4, !dbg !37
  %100 = getelementptr i8, ptr addrspace(3) %88, i64 4100, !dbg !37
  %101 = load float, ptr addrspace(3) %100, align 4, !dbg !37
  %102 = getelementptr i8, ptr addrspace(3) %88, i64 4228, !dbg !37
  %103 = load float, ptr addrspace(3) %102, align 4, !dbg !37
  %104 = getelementptr i8, ptr addrspace(3) %88, i64 8, !dbg !37
  %105 = load float, ptr addrspace(3) %104, align 4, !dbg !37
  %106 = getelementptr i8, ptr addrspace(3) %88, i64 136, !dbg !37
  %107 = load float, ptr addrspace(3) %106, align 4, !dbg !37
  %108 = getelementptr i8, ptr addrspace(3) %88, i64 4104, !dbg !37
  %109 = load float, ptr addrspace(3) %108, align 4, !dbg !37
  %110 = getelementptr i8, ptr addrspace(3) %88, i64 4232, !dbg !37
  %111 = load float, ptr addrspace(3) %110, align 4, !dbg !37
  %112 = getelementptr i8, ptr addrspace(3) %88, i64 12, !dbg !37
  %113 = load float, ptr addrspace(3) %112, align 4, !dbg !37
  %114 = getelementptr i8, ptr addrspace(3) %88, i64 140, !dbg !37
  %115 = load float, ptr addrspace(3) %114, align 4, !dbg !37
  %116 = getelementptr i8, ptr addrspace(3) %88, i64 4108, !dbg !37
  %117 = load float, ptr addrspace(3) %116, align 4, !dbg !37
  %118 = getelementptr i8, ptr addrspace(3) %88, i64 4236, !dbg !37
  %119 = load float, ptr addrspace(3) %118, align 4, !dbg !37
  %120 = getelementptr i8, ptr addrspace(3) %88, i64 16, !dbg !37
  %121 = load float, ptr addrspace(3) %120, align 4, !dbg !37
  %122 = getelementptr i8, ptr addrspace(3) %88, i64 144, !dbg !37
  %123 = load float, ptr addrspace(3) %122, align 4, !dbg !37
  %124 = getelementptr i8, ptr addrspace(3) %88, i64 4112, !dbg !37
  %125 = load float, ptr addrspace(3) %124, align 4, !dbg !37
  %126 = getelementptr i8, ptr addrspace(3) %88, i64 4240, !dbg !37
  %127 = load float, ptr addrspace(3) %126, align 4, !dbg !37
  %128 = getelementptr i8, ptr addrspace(3) %88, i64 20, !dbg !37
  %129 = load float, ptr addrspace(3) %128, align 4, !dbg !37
  %130 = getelementptr i8, ptr addrspace(3) %88, i64 148, !dbg !37
  %131 = load float, ptr addrspace(3) %130, align 4, !dbg !37
  %132 = getelementptr i8, ptr addrspace(3) %88, i64 4116, !dbg !37
  %133 = load float, ptr addrspace(3) %132, align 4, !dbg !37
  %134 = getelementptr i8, ptr addrspace(3) %88, i64 4244, !dbg !37
  %135 = load float, ptr addrspace(3) %134, align 4, !dbg !37
  %136 = getelementptr i8, ptr addrspace(3) %88, i64 24, !dbg !37
  %137 = load float, ptr addrspace(3) %136, align 4, !dbg !37
  %138 = getelementptr i8, ptr addrspace(3) %88, i64 152, !dbg !37
  %139 = load float, ptr addrspace(3) %138, align 4, !dbg !37
  %140 = getelementptr i8, ptr addrspace(3) %88, i64 4120, !dbg !37
  %141 = load float, ptr addrspace(3) %140, align 4, !dbg !37
  %142 = getelementptr i8, ptr addrspace(3) %88, i64 4248, !dbg !37
  %143 = load float, ptr addrspace(3) %142, align 4, !dbg !37
  %144 = getelementptr i8, ptr addrspace(3) %88, i64 28, !dbg !37
  %145 = load float, ptr addrspace(3) %144, align 4, !dbg !37
  %146 = getelementptr i8, ptr addrspace(3) %88, i64 156, !dbg !37
  %147 = load float, ptr addrspace(3) %146, align 4, !dbg !37
  %148 = getelementptr i8, ptr addrspace(3) %88, i64 4124, !dbg !37
  %149 = load float, ptr addrspace(3) %148, align 4, !dbg !37
  %150 = getelementptr i8, ptr addrspace(3) %88, i64 4252, !dbg !37
  %151 = load float, ptr addrspace(3) %150, align 4, !dbg !37
  %152 = getelementptr i8, ptr addrspace(3) %88, i64 32, !dbg !37
  %153 = load float, ptr addrspace(3) %152, align 4, !dbg !37
  %154 = getelementptr i8, ptr addrspace(3) %88, i64 160, !dbg !37
  %155 = load float, ptr addrspace(3) %154, align 4, !dbg !37
  %156 = getelementptr i8, ptr addrspace(3) %88, i64 4128, !dbg !37
  %157 = load float, ptr addrspace(3) %156, align 4, !dbg !37
  %158 = getelementptr i8, ptr addrspace(3) %88, i64 4256, !dbg !37
  %159 = load float, ptr addrspace(3) %158, align 4, !dbg !37
  %160 = getelementptr i8, ptr addrspace(3) %88, i64 36, !dbg !37
  %161 = load float, ptr addrspace(3) %160, align 4, !dbg !37
  %162 = getelementptr i8, ptr addrspace(3) %88, i64 164, !dbg !37
  %163 = load float, ptr addrspace(3) %162, align 4, !dbg !37
  %164 = getelementptr i8, ptr addrspace(3) %88, i64 4132, !dbg !37
  %165 = load float, ptr addrspace(3) %164, align 4, !dbg !37
  %166 = getelementptr i8, ptr addrspace(3) %88, i64 4260, !dbg !37
  %167 = load float, ptr addrspace(3) %166, align 4, !dbg !37
  %168 = getelementptr i8, ptr addrspace(3) %88, i64 40, !dbg !37
  %169 = load float, ptr addrspace(3) %168, align 4, !dbg !37
  %170 = getelementptr i8, ptr addrspace(3) %88, i64 168, !dbg !37
  %171 = load float, ptr addrspace(3) %170, align 4, !dbg !37
  %172 = getelementptr i8, ptr addrspace(3) %88, i64 4136, !dbg !37
  %173 = load float, ptr addrspace(3) %172, align 4, !dbg !37
  %174 = getelementptr i8, ptr addrspace(3) %88, i64 4264, !dbg !37
  %175 = load float, ptr addrspace(3) %174, align 4, !dbg !37
  %176 = getelementptr i8, ptr addrspace(3) %88, i64 44, !dbg !37
  %177 = load float, ptr addrspace(3) %176, align 4, !dbg !37
  %178 = getelementptr i8, ptr addrspace(3) %88, i64 172, !dbg !37
  %179 = load float, ptr addrspace(3) %178, align 4, !dbg !37
  %180 = getelementptr i8, ptr addrspace(3) %88, i64 4140, !dbg !37
  %181 = load float, ptr addrspace(3) %180, align 4, !dbg !37
  %182 = getelementptr i8, ptr addrspace(3) %88, i64 4268, !dbg !37
  %183 = load float, ptr addrspace(3) %182, align 4, !dbg !37
  %184 = getelementptr i8, ptr addrspace(3) %88, i64 48, !dbg !37
  %185 = load float, ptr addrspace(3) %184, align 4, !dbg !37
  %186 = getelementptr i8, ptr addrspace(3) %88, i64 176, !dbg !37
  %187 = load float, ptr addrspace(3) %186, align 4, !dbg !37
  %188 = getelementptr i8, ptr addrspace(3) %88, i64 4144, !dbg !37
  %189 = load float, ptr addrspace(3) %188, align 4, !dbg !37
  %190 = getelementptr i8, ptr addrspace(3) %88, i64 4272, !dbg !37
  %191 = load float, ptr addrspace(3) %190, align 4, !dbg !37
  %192 = getelementptr i8, ptr addrspace(3) %88, i64 52, !dbg !37
  %193 = load float, ptr addrspace(3) %192, align 4, !dbg !37
  %194 = getelementptr i8, ptr addrspace(3) %88, i64 180, !dbg !37
  %195 = load float, ptr addrspace(3) %194, align 4, !dbg !37
  %196 = getelementptr i8, ptr addrspace(3) %88, i64 4148, !dbg !37
  %197 = load float, ptr addrspace(3) %196, align 4, !dbg !37
  %198 = getelementptr i8, ptr addrspace(3) %88, i64 4276, !dbg !37
  %199 = load float, ptr addrspace(3) %198, align 4, !dbg !37
  %200 = getelementptr i8, ptr addrspace(3) %88, i64 56, !dbg !37
  %201 = load float, ptr addrspace(3) %200, align 4, !dbg !37
  %202 = getelementptr i8, ptr addrspace(3) %88, i64 184, !dbg !37
  %203 = load float, ptr addrspace(3) %202, align 4, !dbg !37
  %204 = getelementptr i8, ptr addrspace(3) %88, i64 4152, !dbg !37
  %205 = load float, ptr addrspace(3) %204, align 4, !dbg !37
  %206 = getelementptr i8, ptr addrspace(3) %88, i64 4280, !dbg !37
  %207 = load float, ptr addrspace(3) %206, align 4, !dbg !37
  %208 = getelementptr i8, ptr addrspace(3) %88, i64 60, !dbg !37
  %209 = load float, ptr addrspace(3) %208, align 4, !dbg !37
  %210 = getelementptr i8, ptr addrspace(3) %88, i64 188, !dbg !37
  %211 = load float, ptr addrspace(3) %210, align 4, !dbg !37
  %212 = getelementptr i8, ptr addrspace(3) %88, i64 4156, !dbg !37
  %213 = load float, ptr addrspace(3) %212, align 4, !dbg !37
  %214 = getelementptr i8, ptr addrspace(3) %88, i64 4284, !dbg !37
  %215 = load float, ptr addrspace(3) %214, align 4, !dbg !37
  %216 = getelementptr i8, ptr addrspace(3) %88, i64 64, !dbg !37
  %217 = load float, ptr addrspace(3) %216, align 4, !dbg !37
  %218 = getelementptr i8, ptr addrspace(3) %88, i64 192, !dbg !37
  %219 = load float, ptr addrspace(3) %218, align 4, !dbg !37
  %220 = getelementptr i8, ptr addrspace(3) %88, i64 4160, !dbg !37
  %221 = load float, ptr addrspace(3) %220, align 4, !dbg !37
  %222 = getelementptr i8, ptr addrspace(3) %88, i64 4288, !dbg !37
  %223 = load float, ptr addrspace(3) %222, align 4, !dbg !37
  %224 = getelementptr i8, ptr addrspace(3) %88, i64 68, !dbg !37
  %225 = load float, ptr addrspace(3) %224, align 4, !dbg !37
  %226 = getelementptr i8, ptr addrspace(3) %88, i64 196, !dbg !37
  %227 = load float, ptr addrspace(3) %226, align 4, !dbg !37
  %228 = getelementptr i8, ptr addrspace(3) %88, i64 4164, !dbg !37
  %229 = load float, ptr addrspace(3) %228, align 4, !dbg !37
  %230 = getelementptr i8, ptr addrspace(3) %88, i64 4292, !dbg !37
  %231 = load float, ptr addrspace(3) %230, align 4, !dbg !37
  %232 = getelementptr i8, ptr addrspace(3) %88, i64 72, !dbg !37
  %233 = load float, ptr addrspace(3) %232, align 4, !dbg !37
  %234 = getelementptr i8, ptr addrspace(3) %88, i64 200, !dbg !37
  %235 = load float, ptr addrspace(3) %234, align 4, !dbg !37
  %236 = getelementptr i8, ptr addrspace(3) %88, i64 4168, !dbg !37
  %237 = load float, ptr addrspace(3) %236, align 4, !dbg !37
  %238 = getelementptr i8, ptr addrspace(3) %88, i64 4296, !dbg !37
  %239 = load float, ptr addrspace(3) %238, align 4, !dbg !37
  %240 = getelementptr i8, ptr addrspace(3) %88, i64 76, !dbg !37
  %241 = load float, ptr addrspace(3) %240, align 4, !dbg !37
  %242 = getelementptr i8, ptr addrspace(3) %88, i64 204, !dbg !37
  %243 = load float, ptr addrspace(3) %242, align 4, !dbg !37
  %244 = getelementptr i8, ptr addrspace(3) %88, i64 4172, !dbg !37
  %245 = load float, ptr addrspace(3) %244, align 4, !dbg !37
  %246 = getelementptr i8, ptr addrspace(3) %88, i64 4300, !dbg !37
  %247 = load float, ptr addrspace(3) %246, align 4, !dbg !37
  %248 = getelementptr i8, ptr addrspace(3) %88, i64 80, !dbg !37
  %249 = load float, ptr addrspace(3) %248, align 4, !dbg !37
  %250 = getelementptr i8, ptr addrspace(3) %88, i64 208, !dbg !37
  %251 = load float, ptr addrspace(3) %250, align 4, !dbg !37
  %252 = getelementptr i8, ptr addrspace(3) %88, i64 4176, !dbg !37
  %253 = load float, ptr addrspace(3) %252, align 4, !dbg !37
  %254 = getelementptr i8, ptr addrspace(3) %88, i64 4304, !dbg !37
  %255 = load float, ptr addrspace(3) %254, align 4, !dbg !37
  %256 = getelementptr i8, ptr addrspace(3) %88, i64 84, !dbg !37
  %257 = load float, ptr addrspace(3) %256, align 4, !dbg !37
  %258 = getelementptr i8, ptr addrspace(3) %88, i64 212, !dbg !37
  %259 = load float, ptr addrspace(3) %258, align 4, !dbg !37
  %260 = getelementptr i8, ptr addrspace(3) %88, i64 4180, !dbg !37
  %261 = load float, ptr addrspace(3) %260, align 4, !dbg !37
  %262 = getelementptr i8, ptr addrspace(3) %88, i64 4308, !dbg !37
  %263 = load float, ptr addrspace(3) %262, align 4, !dbg !37
  %264 = getelementptr i8, ptr addrspace(3) %88, i64 88, !dbg !37
  %265 = load float, ptr addrspace(3) %264, align 4, !dbg !37
  %266 = getelementptr i8, ptr addrspace(3) %88, i64 216, !dbg !37
  %267 = load float, ptr addrspace(3) %266, align 4, !dbg !37
  %268 = getelementptr i8, ptr addrspace(3) %88, i64 4184, !dbg !37
  %269 = load float, ptr addrspace(3) %268, align 4, !dbg !37
  %270 = getelementptr i8, ptr addrspace(3) %88, i64 4312, !dbg !37
  %271 = load float, ptr addrspace(3) %270, align 4, !dbg !37
  %272 = getelementptr i8, ptr addrspace(3) %88, i64 92, !dbg !37
  %273 = load float, ptr addrspace(3) %272, align 4, !dbg !37
  %274 = getelementptr i8, ptr addrspace(3) %88, i64 220, !dbg !37
  %275 = load float, ptr addrspace(3) %274, align 4, !dbg !37
  %276 = getelementptr i8, ptr addrspace(3) %88, i64 4188, !dbg !37
  %277 = load float, ptr addrspace(3) %276, align 4, !dbg !37
  %278 = getelementptr i8, ptr addrspace(3) %88, i64 4316, !dbg !37
  %279 = load float, ptr addrspace(3) %278, align 4, !dbg !37
  %280 = getelementptr i8, ptr addrspace(3) %88, i64 96, !dbg !37
  %281 = load float, ptr addrspace(3) %280, align 4, !dbg !37
  %282 = getelementptr i8, ptr addrspace(3) %88, i64 224, !dbg !37
  %283 = load float, ptr addrspace(3) %282, align 4, !dbg !37
  %284 = getelementptr i8, ptr addrspace(3) %88, i64 4192, !dbg !37
  %285 = load float, ptr addrspace(3) %284, align 4, !dbg !37
  %286 = getelementptr i8, ptr addrspace(3) %88, i64 4320, !dbg !37
  %287 = load float, ptr addrspace(3) %286, align 4, !dbg !37
  %288 = getelementptr i8, ptr addrspace(3) %88, i64 100, !dbg !37
  %289 = load float, ptr addrspace(3) %288, align 4, !dbg !37
  %290 = getelementptr i8, ptr addrspace(3) %88, i64 228, !dbg !37
  %291 = load float, ptr addrspace(3) %290, align 4, !dbg !37
  %292 = getelementptr i8, ptr addrspace(3) %88, i64 4196, !dbg !37
  %293 = load float, ptr addrspace(3) %292, align 4, !dbg !37
  %294 = getelementptr i8, ptr addrspace(3) %88, i64 4324, !dbg !37
  %295 = load float, ptr addrspace(3) %294, align 4, !dbg !37
  %296 = getelementptr i8, ptr addrspace(3) %88, i64 104, !dbg !37
  %297 = load float, ptr addrspace(3) %296, align 4, !dbg !37
  %298 = getelementptr i8, ptr addrspace(3) %88, i64 232, !dbg !37
  %299 = load float, ptr addrspace(3) %298, align 4, !dbg !37
  %300 = getelementptr i8, ptr addrspace(3) %88, i64 4200, !dbg !37
  %301 = load float, ptr addrspace(3) %300, align 4, !dbg !37
  %302 = getelementptr i8, ptr addrspace(3) %88, i64 4328, !dbg !37
  %303 = load float, ptr addrspace(3) %302, align 4, !dbg !37
  %304 = getelementptr i8, ptr addrspace(3) %88, i64 108, !dbg !37
  %305 = load float, ptr addrspace(3) %304, align 4, !dbg !37
  %306 = getelementptr i8, ptr addrspace(3) %88, i64 236, !dbg !37
  %307 = load float, ptr addrspace(3) %306, align 4, !dbg !37
  %308 = getelementptr i8, ptr addrspace(3) %88, i64 4204, !dbg !37
  %309 = load float, ptr addrspace(3) %308, align 4, !dbg !37
  %310 = getelementptr i8, ptr addrspace(3) %88, i64 4332, !dbg !37
  %311 = load float, ptr addrspace(3) %310, align 4, !dbg !37
  %312 = getelementptr i8, ptr addrspace(3) %88, i64 112, !dbg !37
  %313 = load float, ptr addrspace(3) %312, align 4, !dbg !37
  %314 = getelementptr i8, ptr addrspace(3) %88, i64 240, !dbg !37
  %315 = load float, ptr addrspace(3) %314, align 4, !dbg !37
  %316 = getelementptr i8, ptr addrspace(3) %88, i64 4208, !dbg !37
  %317 = load float, ptr addrspace(3) %316, align 4, !dbg !37
  %318 = getelementptr i8, ptr addrspace(3) %88, i64 4336, !dbg !37
  %319 = load float, ptr addrspace(3) %318, align 4, !dbg !37
  %320 = getelementptr i8, ptr addrspace(3) %88, i64 116, !dbg !37
  %321 = load float, ptr addrspace(3) %320, align 4, !dbg !37
  %322 = getelementptr i8, ptr addrspace(3) %88, i64 244, !dbg !37
  %323 = load float, ptr addrspace(3) %322, align 4, !dbg !37
  %324 = getelementptr i8, ptr addrspace(3) %88, i64 4212, !dbg !37
  %325 = load float, ptr addrspace(3) %324, align 4, !dbg !37
  %326 = getelementptr i8, ptr addrspace(3) %88, i64 4340, !dbg !37
  %327 = load float, ptr addrspace(3) %326, align 4, !dbg !37
  %328 = getelementptr i8, ptr addrspace(3) %88, i64 120, !dbg !37
  %329 = load float, ptr addrspace(3) %328, align 4, !dbg !37
  %330 = getelementptr i8, ptr addrspace(3) %88, i64 248, !dbg !37
  %331 = load float, ptr addrspace(3) %330, align 4, !dbg !37
  %332 = getelementptr i8, ptr addrspace(3) %88, i64 4216, !dbg !37
  %333 = load float, ptr addrspace(3) %332, align 4, !dbg !37
  %334 = getelementptr i8, ptr addrspace(3) %88, i64 4344, !dbg !37
  %335 = load float, ptr addrspace(3) %334, align 4, !dbg !37
  %336 = getelementptr i8, ptr addrspace(3) %88, i64 124, !dbg !37
  %337 = load float, ptr addrspace(3) %336, align 4, !dbg !37
  %338 = getelementptr i8, ptr addrspace(3) %88, i64 252, !dbg !37
  %339 = load float, ptr addrspace(3) %338, align 4, !dbg !37
  %340 = getelementptr i8, ptr addrspace(3) %88, i64 4220, !dbg !37
  %341 = load float, ptr addrspace(3) %340, align 4, !dbg !37
  %342 = getelementptr i8, ptr addrspace(3) %88, i64 4348, !dbg !37
  %343 = load float, ptr addrspace(3) %342, align 4, !dbg !37
  %344 = getelementptr float, ptr addrspace(3) %82, i64 %80, !dbg !38
  %345 = load float, ptr addrspace(3) %344, align 4, !dbg !38
  %346 = getelementptr i8, ptr addrspace(3) %344, i64 128, !dbg !38
  %347 = load float, ptr addrspace(3) %346, align 4, !dbg !38
  %348 = getelementptr i8, ptr addrspace(3) %344, i64 4, !dbg !38
  %349 = load float, ptr addrspace(3) %348, align 4, !dbg !38
  %350 = getelementptr i8, ptr addrspace(3) %344, i64 132, !dbg !38
  %351 = load float, ptr addrspace(3) %350, align 4, !dbg !38
  %352 = getelementptr i8, ptr addrspace(3) %344, i64 8, !dbg !38
  %353 = load float, ptr addrspace(3) %352, align 4, !dbg !38
  %354 = getelementptr i8, ptr addrspace(3) %344, i64 136, !dbg !38
  %355 = load float, ptr addrspace(3) %354, align 4, !dbg !38
  %356 = getelementptr i8, ptr addrspace(3) %344, i64 12, !dbg !38
  %357 = load float, ptr addrspace(3) %356, align 4, !dbg !38
  %358 = getelementptr i8, ptr addrspace(3) %344, i64 140, !dbg !38
  %359 = load float, ptr addrspace(3) %358, align 4, !dbg !38
  %360 = getelementptr i8, ptr addrspace(3) %344, i64 16, !dbg !38
  %361 = load float, ptr addrspace(3) %360, align 4, !dbg !38
  %362 = getelementptr i8, ptr addrspace(3) %344, i64 144, !dbg !38
  %363 = load float, ptr addrspace(3) %362, align 4, !dbg !38
  %364 = getelementptr i8, ptr addrspace(3) %344, i64 20, !dbg !38
  %365 = load float, ptr addrspace(3) %364, align 4, !dbg !38
  %366 = getelementptr i8, ptr addrspace(3) %344, i64 148, !dbg !38
  %367 = load float, ptr addrspace(3) %366, align 4, !dbg !38
  %368 = getelementptr i8, ptr addrspace(3) %344, i64 24, !dbg !38
  %369 = load float, ptr addrspace(3) %368, align 4, !dbg !38
  %370 = getelementptr i8, ptr addrspace(3) %344, i64 152, !dbg !38
  %371 = load float, ptr addrspace(3) %370, align 4, !dbg !38
  %372 = getelementptr i8, ptr addrspace(3) %344, i64 28, !dbg !38
  %373 = load float, ptr addrspace(3) %372, align 4, !dbg !38
  %374 = getelementptr i8, ptr addrspace(3) %344, i64 156, !dbg !38
  %375 = load float, ptr addrspace(3) %374, align 4, !dbg !38
  %376 = getelementptr i8, ptr addrspace(3) %344, i64 32, !dbg !38
  %377 = load float, ptr addrspace(3) %376, align 4, !dbg !38
  %378 = getelementptr i8, ptr addrspace(3) %344, i64 160, !dbg !38
  %379 = load float, ptr addrspace(3) %378, align 4, !dbg !38
  %380 = getelementptr i8, ptr addrspace(3) %344, i64 36, !dbg !38
  %381 = load float, ptr addrspace(3) %380, align 4, !dbg !38
  %382 = getelementptr i8, ptr addrspace(3) %344, i64 164, !dbg !38
  %383 = load float, ptr addrspace(3) %382, align 4, !dbg !38
  %384 = getelementptr i8, ptr addrspace(3) %344, i64 40, !dbg !38
  %385 = load float, ptr addrspace(3) %384, align 4, !dbg !38
  %386 = getelementptr i8, ptr addrspace(3) %344, i64 168, !dbg !38
  %387 = load float, ptr addrspace(3) %386, align 4, !dbg !38
  %388 = getelementptr i8, ptr addrspace(3) %344, i64 44, !dbg !38
  %389 = load float, ptr addrspace(3) %388, align 4, !dbg !38
  %390 = getelementptr i8, ptr addrspace(3) %344, i64 172, !dbg !38
  %391 = load float, ptr addrspace(3) %390, align 4, !dbg !38
  %392 = getelementptr i8, ptr addrspace(3) %344, i64 48, !dbg !38
  %393 = load float, ptr addrspace(3) %392, align 4, !dbg !38
  %394 = getelementptr i8, ptr addrspace(3) %344, i64 176, !dbg !38
  %395 = load float, ptr addrspace(3) %394, align 4, !dbg !38
  %396 = getelementptr i8, ptr addrspace(3) %344, i64 52, !dbg !38
  %397 = load float, ptr addrspace(3) %396, align 4, !dbg !38
  %398 = getelementptr i8, ptr addrspace(3) %344, i64 180, !dbg !38
  %399 = load float, ptr addrspace(3) %398, align 4, !dbg !38
  %400 = getelementptr i8, ptr addrspace(3) %344, i64 56, !dbg !38
  %401 = load float, ptr addrspace(3) %400, align 4, !dbg !38
  %402 = getelementptr i8, ptr addrspace(3) %344, i64 184, !dbg !38
  %403 = load float, ptr addrspace(3) %402, align 4, !dbg !38
  %404 = getelementptr i8, ptr addrspace(3) %344, i64 60, !dbg !38
  %405 = load float, ptr addrspace(3) %404, align 4, !dbg !38
  %406 = getelementptr i8, ptr addrspace(3) %344, i64 188, !dbg !38
  %407 = load float, ptr addrspace(3) %406, align 4, !dbg !38
  %408 = getelementptr i8, ptr addrspace(3) %344, i64 64, !dbg !38
  %409 = load float, ptr addrspace(3) %408, align 4, !dbg !38
  %410 = getelementptr i8, ptr addrspace(3) %344, i64 192, !dbg !38
  %411 = load float, ptr addrspace(3) %410, align 4, !dbg !38
  %412 = getelementptr i8, ptr addrspace(3) %344, i64 68, !dbg !38
  %413 = load float, ptr addrspace(3) %412, align 4, !dbg !38
  %414 = getelementptr i8, ptr addrspace(3) %344, i64 196, !dbg !38
  %415 = load float, ptr addrspace(3) %414, align 4, !dbg !38
  %416 = getelementptr i8, ptr addrspace(3) %344, i64 72, !dbg !38
  %417 = load float, ptr addrspace(3) %416, align 4, !dbg !38
  %418 = getelementptr i8, ptr addrspace(3) %344, i64 200, !dbg !38
  %419 = load float, ptr addrspace(3) %418, align 4, !dbg !38
  %420 = getelementptr i8, ptr addrspace(3) %344, i64 76, !dbg !38
  %421 = load float, ptr addrspace(3) %420, align 4, !dbg !38
  %422 = getelementptr i8, ptr addrspace(3) %344, i64 204, !dbg !38
  %423 = load float, ptr addrspace(3) %422, align 4, !dbg !38
  %424 = getelementptr i8, ptr addrspace(3) %344, i64 80, !dbg !38
  %425 = load float, ptr addrspace(3) %424, align 4, !dbg !38
  %426 = getelementptr i8, ptr addrspace(3) %344, i64 208, !dbg !38
  %427 = load float, ptr addrspace(3) %426, align 4, !dbg !38
  %428 = getelementptr i8, ptr addrspace(3) %344, i64 84, !dbg !38
  %429 = load float, ptr addrspace(3) %428, align 4, !dbg !38
  %430 = getelementptr i8, ptr addrspace(3) %344, i64 212, !dbg !38
  %431 = load float, ptr addrspace(3) %430, align 4, !dbg !38
  %432 = getelementptr i8, ptr addrspace(3) %344, i64 88, !dbg !38
  %433 = load float, ptr addrspace(3) %432, align 4, !dbg !38
  %434 = getelementptr i8, ptr addrspace(3) %344, i64 216, !dbg !38
  %435 = load float, ptr addrspace(3) %434, align 4, !dbg !38
  %436 = getelementptr i8, ptr addrspace(3) %344, i64 92, !dbg !38
  %437 = load float, ptr addrspace(3) %436, align 4, !dbg !38
  %438 = getelementptr i8, ptr addrspace(3) %344, i64 220, !dbg !38
  %439 = load float, ptr addrspace(3) %438, align 4, !dbg !38
  %440 = getelementptr i8, ptr addrspace(3) %344, i64 96, !dbg !38
  %441 = load float, ptr addrspace(3) %440, align 4, !dbg !38
  %442 = getelementptr i8, ptr addrspace(3) %344, i64 224, !dbg !38
  %443 = load float, ptr addrspace(3) %442, align 4, !dbg !38
  %444 = getelementptr i8, ptr addrspace(3) %344, i64 100, !dbg !38
  %445 = load float, ptr addrspace(3) %444, align 4, !dbg !38
  %446 = getelementptr i8, ptr addrspace(3) %344, i64 228, !dbg !38
  %447 = load float, ptr addrspace(3) %446, align 4, !dbg !38
  %448 = getelementptr i8, ptr addrspace(3) %344, i64 104, !dbg !38
  %449 = load float, ptr addrspace(3) %448, align 4, !dbg !38
  %450 = getelementptr i8, ptr addrspace(3) %344, i64 232, !dbg !38
  %451 = load float, ptr addrspace(3) %450, align 4, !dbg !38
  %452 = getelementptr i8, ptr addrspace(3) %344, i64 108, !dbg !38
  %453 = load float, ptr addrspace(3) %452, align 4, !dbg !38
  %454 = getelementptr i8, ptr addrspace(3) %344, i64 236, !dbg !38
  %455 = load float, ptr addrspace(3) %454, align 4, !dbg !38
  %456 = getelementptr i8, ptr addrspace(3) %344, i64 112, !dbg !38
  %457 = load float, ptr addrspace(3) %456, align 4, !dbg !38
  %458 = getelementptr i8, ptr addrspace(3) %344, i64 240, !dbg !38
  %459 = load float, ptr addrspace(3) %458, align 4, !dbg !38
  %460 = getelementptr i8, ptr addrspace(3) %344, i64 116, !dbg !38
  %461 = load float, ptr addrspace(3) %460, align 4, !dbg !38
  %462 = getelementptr i8, ptr addrspace(3) %344, i64 244, !dbg !38
  %463 = load float, ptr addrspace(3) %462, align 4, !dbg !38
  %464 = getelementptr i8, ptr addrspace(3) %344, i64 120, !dbg !38
  %465 = load float, ptr addrspace(3) %464, align 4, !dbg !38
  %466 = getelementptr i8, ptr addrspace(3) %344, i64 248, !dbg !38
  %467 = load float, ptr addrspace(3) %466, align 4, !dbg !38
  %468 = getelementptr i8, ptr addrspace(3) %344, i64 124, !dbg !38
  %469 = load float, ptr addrspace(3) %468, align 4, !dbg !38
  %470 = getelementptr i8, ptr addrspace(3) %344, i64 252, !dbg !38
  %471 = load float, ptr addrspace(3) %470, align 4, !dbg !38
  %472 = insertelement <8 x float> poison, float %89, i64 0, !dbg !42
  %473 = insertelement <8 x float> %472, float %91, i64 1, !dbg !42
  %474 = insertelement <8 x float> %473, float %93, i64 2, !dbg !42
  %475 = insertelement <8 x float> %474, float %95, i64 3, !dbg !42
  %476 = shufflevector <8 x float> %475, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %477 = insertelement <8 x float> poison, float %345, i64 0, !dbg !42
  %478 = insertelement <8 x float> %477, float %347, i64 1, !dbg !42
  %479 = shufflevector <8 x float> %478, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %480 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %476, <8 x float> %479, <8 x float> %87), !dbg !42
  %481 = insertelement <8 x float> poison, float %97, i64 0, !dbg !42
  %482 = insertelement <8 x float> %481, float %99, i64 1, !dbg !42
  %483 = insertelement <8 x float> %482, float %101, i64 2, !dbg !42
  %484 = insertelement <8 x float> %483, float %103, i64 3, !dbg !42
  %485 = shufflevector <8 x float> %484, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %486 = insertelement <8 x float> poison, float %349, i64 0, !dbg !42
  %487 = insertelement <8 x float> %486, float %351, i64 1, !dbg !42
  %488 = shufflevector <8 x float> %487, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %489 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %485, <8 x float> %488, <8 x float> %480), !dbg !42
  %490 = insertelement <8 x float> poison, float %105, i64 0, !dbg !42
  %491 = insertelement <8 x float> %490, float %107, i64 1, !dbg !42
  %492 = insertelement <8 x float> %491, float %109, i64 2, !dbg !42
  %493 = insertelement <8 x float> %492, float %111, i64 3, !dbg !42
  %494 = shufflevector <8 x float> %493, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %495 = insertelement <8 x float> poison, float %353, i64 0, !dbg !42
  %496 = insertelement <8 x float> %495, float %355, i64 1, !dbg !42
  %497 = shufflevector <8 x float> %496, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %498 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %494, <8 x float> %497, <8 x float> %489), !dbg !42
  %499 = insertelement <8 x float> poison, float %113, i64 0, !dbg !42
  %500 = insertelement <8 x float> %499, float %115, i64 1, !dbg !42
  %501 = insertelement <8 x float> %500, float %117, i64 2, !dbg !42
  %502 = insertelement <8 x float> %501, float %119, i64 3, !dbg !42
  %503 = shufflevector <8 x float> %502, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %504 = insertelement <8 x float> poison, float %357, i64 0, !dbg !42
  %505 = insertelement <8 x float> %504, float %359, i64 1, !dbg !42
  %506 = shufflevector <8 x float> %505, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %507 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %503, <8 x float> %506, <8 x float> %498), !dbg !42
  %508 = insertelement <8 x float> poison, float %121, i64 0, !dbg !42
  %509 = insertelement <8 x float> %508, float %123, i64 1, !dbg !42
  %510 = insertelement <8 x float> %509, float %125, i64 2, !dbg !42
  %511 = insertelement <8 x float> %510, float %127, i64 3, !dbg !42
  %512 = shufflevector <8 x float> %511, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %513 = insertelement <8 x float> poison, float %361, i64 0, !dbg !42
  %514 = insertelement <8 x float> %513, float %363, i64 1, !dbg !42
  %515 = shufflevector <8 x float> %514, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %516 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %512, <8 x float> %515, <8 x float> %507), !dbg !42
  %517 = insertelement <8 x float> poison, float %129, i64 0, !dbg !42
  %518 = insertelement <8 x float> %517, float %131, i64 1, !dbg !42
  %519 = insertelement <8 x float> %518, float %133, i64 2, !dbg !42
  %520 = insertelement <8 x float> %519, float %135, i64 3, !dbg !42
  %521 = shufflevector <8 x float> %520, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %522 = insertelement <8 x float> poison, float %365, i64 0, !dbg !42
  %523 = insertelement <8 x float> %522, float %367, i64 1, !dbg !42
  %524 = shufflevector <8 x float> %523, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %525 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %521, <8 x float> %524, <8 x float> %516), !dbg !42
  %526 = insertelement <8 x float> poison, float %137, i64 0, !dbg !42
  %527 = insertelement <8 x float> %526, float %139, i64 1, !dbg !42
  %528 = insertelement <8 x float> %527, float %141, i64 2, !dbg !42
  %529 = insertelement <8 x float> %528, float %143, i64 3, !dbg !42
  %530 = shufflevector <8 x float> %529, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %531 = insertelement <8 x float> poison, float %369, i64 0, !dbg !42
  %532 = insertelement <8 x float> %531, float %371, i64 1, !dbg !42
  %533 = shufflevector <8 x float> %532, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %534 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %530, <8 x float> %533, <8 x float> %525), !dbg !42
  %535 = insertelement <8 x float> poison, float %145, i64 0, !dbg !42
  %536 = insertelement <8 x float> %535, float %147, i64 1, !dbg !42
  %537 = insertelement <8 x float> %536, float %149, i64 2, !dbg !42
  %538 = insertelement <8 x float> %537, float %151, i64 3, !dbg !42
  %539 = shufflevector <8 x float> %538, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %540 = insertelement <8 x float> poison, float %373, i64 0, !dbg !42
  %541 = insertelement <8 x float> %540, float %375, i64 1, !dbg !42
  %542 = shufflevector <8 x float> %541, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %543 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %539, <8 x float> %542, <8 x float> %534), !dbg !42
  %544 = insertelement <8 x float> poison, float %153, i64 0, !dbg !42
  %545 = insertelement <8 x float> %544, float %155, i64 1, !dbg !42
  %546 = insertelement <8 x float> %545, float %157, i64 2, !dbg !42
  %547 = insertelement <8 x float> %546, float %159, i64 3, !dbg !42
  %548 = shufflevector <8 x float> %547, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %549 = insertelement <8 x float> poison, float %377, i64 0, !dbg !42
  %550 = insertelement <8 x float> %549, float %379, i64 1, !dbg !42
  %551 = shufflevector <8 x float> %550, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %552 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %548, <8 x float> %551, <8 x float> %543), !dbg !42
  %553 = insertelement <8 x float> poison, float %161, i64 0, !dbg !42
  %554 = insertelement <8 x float> %553, float %163, i64 1, !dbg !42
  %555 = insertelement <8 x float> %554, float %165, i64 2, !dbg !42
  %556 = insertelement <8 x float> %555, float %167, i64 3, !dbg !42
  %557 = shufflevector <8 x float> %556, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %558 = insertelement <8 x float> poison, float %381, i64 0, !dbg !42
  %559 = insertelement <8 x float> %558, float %383, i64 1, !dbg !42
  %560 = shufflevector <8 x float> %559, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %561 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %557, <8 x float> %560, <8 x float> %552), !dbg !42
  %562 = insertelement <8 x float> poison, float %169, i64 0, !dbg !42
  %563 = insertelement <8 x float> %562, float %171, i64 1, !dbg !42
  %564 = insertelement <8 x float> %563, float %173, i64 2, !dbg !42
  %565 = insertelement <8 x float> %564, float %175, i64 3, !dbg !42
  %566 = shufflevector <8 x float> %565, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %567 = insertelement <8 x float> poison, float %385, i64 0, !dbg !42
  %568 = insertelement <8 x float> %567, float %387, i64 1, !dbg !42
  %569 = shufflevector <8 x float> %568, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %570 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %566, <8 x float> %569, <8 x float> %561), !dbg !42
  %571 = insertelement <8 x float> poison, float %177, i64 0, !dbg !42
  %572 = insertelement <8 x float> %571, float %179, i64 1, !dbg !42
  %573 = insertelement <8 x float> %572, float %181, i64 2, !dbg !42
  %574 = insertelement <8 x float> %573, float %183, i64 3, !dbg !42
  %575 = shufflevector <8 x float> %574, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %576 = insertelement <8 x float> poison, float %389, i64 0, !dbg !42
  %577 = insertelement <8 x float> %576, float %391, i64 1, !dbg !42
  %578 = shufflevector <8 x float> %577, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %579 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %575, <8 x float> %578, <8 x float> %570), !dbg !42
  %580 = insertelement <8 x float> poison, float %185, i64 0, !dbg !42
  %581 = insertelement <8 x float> %580, float %187, i64 1, !dbg !42
  %582 = insertelement <8 x float> %581, float %189, i64 2, !dbg !42
  %583 = insertelement <8 x float> %582, float %191, i64 3, !dbg !42
  %584 = shufflevector <8 x float> %583, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %585 = insertelement <8 x float> poison, float %393, i64 0, !dbg !42
  %586 = insertelement <8 x float> %585, float %395, i64 1, !dbg !42
  %587 = shufflevector <8 x float> %586, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %588 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %584, <8 x float> %587, <8 x float> %579), !dbg !42
  %589 = insertelement <8 x float> poison, float %193, i64 0, !dbg !42
  %590 = insertelement <8 x float> %589, float %195, i64 1, !dbg !42
  %591 = insertelement <8 x float> %590, float %197, i64 2, !dbg !42
  %592 = insertelement <8 x float> %591, float %199, i64 3, !dbg !42
  %593 = shufflevector <8 x float> %592, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %594 = insertelement <8 x float> poison, float %397, i64 0, !dbg !42
  %595 = insertelement <8 x float> %594, float %399, i64 1, !dbg !42
  %596 = shufflevector <8 x float> %595, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %597 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %593, <8 x float> %596, <8 x float> %588), !dbg !42
  %598 = insertelement <8 x float> poison, float %201, i64 0, !dbg !42
  %599 = insertelement <8 x float> %598, float %203, i64 1, !dbg !42
  %600 = insertelement <8 x float> %599, float %205, i64 2, !dbg !42
  %601 = insertelement <8 x float> %600, float %207, i64 3, !dbg !42
  %602 = shufflevector <8 x float> %601, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %603 = insertelement <8 x float> poison, float %401, i64 0, !dbg !42
  %604 = insertelement <8 x float> %603, float %403, i64 1, !dbg !42
  %605 = shufflevector <8 x float> %604, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %606 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %602, <8 x float> %605, <8 x float> %597), !dbg !42
  %607 = insertelement <8 x float> poison, float %209, i64 0, !dbg !42
  %608 = insertelement <8 x float> %607, float %211, i64 1, !dbg !42
  %609 = insertelement <8 x float> %608, float %213, i64 2, !dbg !42
  %610 = insertelement <8 x float> %609, float %215, i64 3, !dbg !42
  %611 = shufflevector <8 x float> %610, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %612 = insertelement <8 x float> poison, float %405, i64 0, !dbg !42
  %613 = insertelement <8 x float> %612, float %407, i64 1, !dbg !42
  %614 = shufflevector <8 x float> %613, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %615 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %611, <8 x float> %614, <8 x float> %606), !dbg !42
  %616 = insertelement <8 x float> poison, float %217, i64 0, !dbg !42
  %617 = insertelement <8 x float> %616, float %219, i64 1, !dbg !42
  %618 = insertelement <8 x float> %617, float %221, i64 2, !dbg !42
  %619 = insertelement <8 x float> %618, float %223, i64 3, !dbg !42
  %620 = shufflevector <8 x float> %619, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %621 = insertelement <8 x float> poison, float %409, i64 0, !dbg !42
  %622 = insertelement <8 x float> %621, float %411, i64 1, !dbg !42
  %623 = shufflevector <8 x float> %622, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %624 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %620, <8 x float> %623, <8 x float> %615), !dbg !42
  %625 = insertelement <8 x float> poison, float %225, i64 0, !dbg !42
  %626 = insertelement <8 x float> %625, float %227, i64 1, !dbg !42
  %627 = insertelement <8 x float> %626, float %229, i64 2, !dbg !42
  %628 = insertelement <8 x float> %627, float %231, i64 3, !dbg !42
  %629 = shufflevector <8 x float> %628, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %630 = insertelement <8 x float> poison, float %413, i64 0, !dbg !42
  %631 = insertelement <8 x float> %630, float %415, i64 1, !dbg !42
  %632 = shufflevector <8 x float> %631, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %633 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %629, <8 x float> %632, <8 x float> %624), !dbg !42
  %634 = insertelement <8 x float> poison, float %233, i64 0, !dbg !42
  %635 = insertelement <8 x float> %634, float %235, i64 1, !dbg !42
  %636 = insertelement <8 x float> %635, float %237, i64 2, !dbg !42
  %637 = insertelement <8 x float> %636, float %239, i64 3, !dbg !42
  %638 = shufflevector <8 x float> %637, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %639 = insertelement <8 x float> poison, float %417, i64 0, !dbg !42
  %640 = insertelement <8 x float> %639, float %419, i64 1, !dbg !42
  %641 = shufflevector <8 x float> %640, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %642 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %638, <8 x float> %641, <8 x float> %633), !dbg !42
  %643 = insertelement <8 x float> poison, float %241, i64 0, !dbg !42
  %644 = insertelement <8 x float> %643, float %243, i64 1, !dbg !42
  %645 = insertelement <8 x float> %644, float %245, i64 2, !dbg !42
  %646 = insertelement <8 x float> %645, float %247, i64 3, !dbg !42
  %647 = shufflevector <8 x float> %646, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %648 = insertelement <8 x float> poison, float %421, i64 0, !dbg !42
  %649 = insertelement <8 x float> %648, float %423, i64 1, !dbg !42
  %650 = shufflevector <8 x float> %649, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %651 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %647, <8 x float> %650, <8 x float> %642), !dbg !42
  %652 = insertelement <8 x float> poison, float %249, i64 0, !dbg !42
  %653 = insertelement <8 x float> %652, float %251, i64 1, !dbg !42
  %654 = insertelement <8 x float> %653, float %253, i64 2, !dbg !42
  %655 = insertelement <8 x float> %654, float %255, i64 3, !dbg !42
  %656 = shufflevector <8 x float> %655, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %657 = insertelement <8 x float> poison, float %425, i64 0, !dbg !42
  %658 = insertelement <8 x float> %657, float %427, i64 1, !dbg !42
  %659 = shufflevector <8 x float> %658, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %660 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %656, <8 x float> %659, <8 x float> %651), !dbg !42
  %661 = insertelement <8 x float> poison, float %257, i64 0, !dbg !42
  %662 = insertelement <8 x float> %661, float %259, i64 1, !dbg !42
  %663 = insertelement <8 x float> %662, float %261, i64 2, !dbg !42
  %664 = insertelement <8 x float> %663, float %263, i64 3, !dbg !42
  %665 = shufflevector <8 x float> %664, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %666 = insertelement <8 x float> poison, float %429, i64 0, !dbg !42
  %667 = insertelement <8 x float> %666, float %431, i64 1, !dbg !42
  %668 = shufflevector <8 x float> %667, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %669 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %665, <8 x float> %668, <8 x float> %660), !dbg !42
  %670 = insertelement <8 x float> poison, float %265, i64 0, !dbg !42
  %671 = insertelement <8 x float> %670, float %267, i64 1, !dbg !42
  %672 = insertelement <8 x float> %671, float %269, i64 2, !dbg !42
  %673 = insertelement <8 x float> %672, float %271, i64 3, !dbg !42
  %674 = shufflevector <8 x float> %673, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %675 = insertelement <8 x float> poison, float %433, i64 0, !dbg !42
  %676 = insertelement <8 x float> %675, float %435, i64 1, !dbg !42
  %677 = shufflevector <8 x float> %676, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %678 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %674, <8 x float> %677, <8 x float> %669), !dbg !42
  %679 = insertelement <8 x float> poison, float %273, i64 0, !dbg !42
  %680 = insertelement <8 x float> %679, float %275, i64 1, !dbg !42
  %681 = insertelement <8 x float> %680, float %277, i64 2, !dbg !42
  %682 = insertelement <8 x float> %681, float %279, i64 3, !dbg !42
  %683 = shufflevector <8 x float> %682, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %684 = insertelement <8 x float> poison, float %437, i64 0, !dbg !42
  %685 = insertelement <8 x float> %684, float %439, i64 1, !dbg !42
  %686 = shufflevector <8 x float> %685, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %687 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %683, <8 x float> %686, <8 x float> %678), !dbg !42
  %688 = insertelement <8 x float> poison, float %281, i64 0, !dbg !42
  %689 = insertelement <8 x float> %688, float %283, i64 1, !dbg !42
  %690 = insertelement <8 x float> %689, float %285, i64 2, !dbg !42
  %691 = insertelement <8 x float> %690, float %287, i64 3, !dbg !42
  %692 = shufflevector <8 x float> %691, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %693 = insertelement <8 x float> poison, float %441, i64 0, !dbg !42
  %694 = insertelement <8 x float> %693, float %443, i64 1, !dbg !42
  %695 = shufflevector <8 x float> %694, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %696 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %692, <8 x float> %695, <8 x float> %687), !dbg !42
  %697 = insertelement <8 x float> poison, float %289, i64 0, !dbg !42
  %698 = insertelement <8 x float> %697, float %291, i64 1, !dbg !42
  %699 = insertelement <8 x float> %698, float %293, i64 2, !dbg !42
  %700 = insertelement <8 x float> %699, float %295, i64 3, !dbg !42
  %701 = shufflevector <8 x float> %700, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %702 = insertelement <8 x float> poison, float %445, i64 0, !dbg !42
  %703 = insertelement <8 x float> %702, float %447, i64 1, !dbg !42
  %704 = shufflevector <8 x float> %703, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %705 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %701, <8 x float> %704, <8 x float> %696), !dbg !42
  %706 = insertelement <8 x float> poison, float %297, i64 0, !dbg !42
  %707 = insertelement <8 x float> %706, float %299, i64 1, !dbg !42
  %708 = insertelement <8 x float> %707, float %301, i64 2, !dbg !42
  %709 = insertelement <8 x float> %708, float %303, i64 3, !dbg !42
  %710 = shufflevector <8 x float> %709, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %711 = insertelement <8 x float> poison, float %449, i64 0, !dbg !42
  %712 = insertelement <8 x float> %711, float %451, i64 1, !dbg !42
  %713 = shufflevector <8 x float> %712, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %714 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %710, <8 x float> %713, <8 x float> %705), !dbg !42
  %715 = insertelement <8 x float> poison, float %305, i64 0, !dbg !42
  %716 = insertelement <8 x float> %715, float %307, i64 1, !dbg !42
  %717 = insertelement <8 x float> %716, float %309, i64 2, !dbg !42
  %718 = insertelement <8 x float> %717, float %311, i64 3, !dbg !42
  %719 = shufflevector <8 x float> %718, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %720 = insertelement <8 x float> poison, float %453, i64 0, !dbg !42
  %721 = insertelement <8 x float> %720, float %455, i64 1, !dbg !42
  %722 = shufflevector <8 x float> %721, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %723 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %719, <8 x float> %722, <8 x float> %714), !dbg !42
  %724 = insertelement <8 x float> poison, float %313, i64 0, !dbg !42
  %725 = insertelement <8 x float> %724, float %315, i64 1, !dbg !42
  %726 = insertelement <8 x float> %725, float %317, i64 2, !dbg !42
  %727 = insertelement <8 x float> %726, float %319, i64 3, !dbg !42
  %728 = shufflevector <8 x float> %727, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %729 = insertelement <8 x float> poison, float %457, i64 0, !dbg !42
  %730 = insertelement <8 x float> %729, float %459, i64 1, !dbg !42
  %731 = shufflevector <8 x float> %730, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %732 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %728, <8 x float> %731, <8 x float> %723), !dbg !42
  %733 = insertelement <8 x float> poison, float %321, i64 0, !dbg !42
  %734 = insertelement <8 x float> %733, float %323, i64 1, !dbg !42
  %735 = insertelement <8 x float> %734, float %325, i64 2, !dbg !42
  %736 = insertelement <8 x float> %735, float %327, i64 3, !dbg !42
  %737 = shufflevector <8 x float> %736, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %738 = insertelement <8 x float> poison, float %461, i64 0, !dbg !42
  %739 = insertelement <8 x float> %738, float %463, i64 1, !dbg !42
  %740 = shufflevector <8 x float> %739, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %741 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %737, <8 x float> %740, <8 x float> %732), !dbg !42
  %742 = insertelement <8 x float> poison, float %329, i64 0, !dbg !42
  %743 = insertelement <8 x float> %742, float %331, i64 1, !dbg !42
  %744 = insertelement <8 x float> %743, float %333, i64 2, !dbg !42
  %745 = insertelement <8 x float> %744, float %335, i64 3, !dbg !42
  %746 = shufflevector <8 x float> %745, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %747 = insertelement <8 x float> poison, float %465, i64 0, !dbg !42
  %748 = insertelement <8 x float> %747, float %467, i64 1, !dbg !42
  %749 = shufflevector <8 x float> %748, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %750 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %746, <8 x float> %749, <8 x float> %741), !dbg !42
  %751 = insertelement <8 x float> poison, float %337, i64 0, !dbg !42
  %752 = insertelement <8 x float> %751, float %339, i64 1, !dbg !42
  %753 = insertelement <8 x float> %752, float %341, i64 2, !dbg !42
  %754 = insertelement <8 x float> %753, float %343, i64 3, !dbg !42
  %755 = shufflevector <8 x float> %754, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !42
  %756 = insertelement <8 x float> poison, float %469, i64 0, !dbg !42
  %757 = insertelement <8 x float> %756, float %471, i64 1, !dbg !42
  %758 = shufflevector <8 x float> %757, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !42
  %759 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %755, <8 x float> %758, <8 x float> %750), !dbg !42
  %760 = getelementptr i8, ptr addrspace(1) %.pn1524, i64 128, !dbg !39
  %761 = getelementptr i8, ptr addrspace(1) %.pn725, i64 128, !dbg !39
  %762 = getelementptr i8, ptr addrspace(1) %.pn2326, i64 128, !dbg !40
  %763 = add i32 %85, 1, !dbg !41
  %764 = icmp slt i32 %763, 4, !dbg !41
  %765 = select i1 %764, i32 %763, i32 0, !dbg !41
  %766 = shl i32 %765, 11, !dbg !37
  %767 = sext i32 %766 to i64, !dbg !37
  %768 = getelementptr float, ptr addrspace(3) @global_smem, i64 %767, !dbg !37
  %769 = icmp ult i32 %86, %invariant.umin, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %770 = getelementptr float, ptr addrspace(3) %768, i64 %49, !dbg !37
  %771 = getelementptr float, ptr addrspace(3) %768, i64 %53, !dbg !37
  %772 = select i1 %769, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %770, ptr addrspace(1) %760, i32 %772, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %771, ptr addrspace(1) %761, i32 %772, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %773 = shl i32 %765, 10, !dbg !38
  %774 = sext i32 %773 to i64, !dbg !38
  %gep = getelementptr float, ptr addrspace(3) %55, i64 %774, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %762, i32 %772, i1 true) #3, !dbg !38
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !38
  %775 = add i32 %84, 1, !dbg !41
  %776 = icmp slt i32 %775, 4, !dbg !41
  %777 = select i1 %776, i32 %775, i32 0, !dbg !41
  %778 = shl i32 %777, 11, !dbg !37
  %779 = sext i32 %778 to i64, !dbg !37
  %780 = getelementptr float, ptr addrspace(3) @global_smem, i64 %779, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %781 = shl i32 %777, 10, !dbg !38
  %782 = sext i32 %781 to i64, !dbg !38
  %783 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %782, !dbg !38
  %784 = add nuw nsw i32 %86, 32, !dbg !41
  %785 = icmp ult i32 %86, 140, !dbg !41
  br i1 %785, label %81, label %786, !dbg !41

786:                                              ; preds = %81
  %787 = or disjoint i32 %28, %30, !dbg !28
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %788 = and i32 %23, 30, !dbg !41
  %789 = mul nuw nsw i32 %788, 36, !dbg !41
  %790 = add nuw nsw i32 %789, %75, !dbg !41
  %791 = zext nneg i32 %790 to i64, !dbg !41
  %792 = getelementptr float, ptr addrspace(3) @global_smem, i64 %791, !dbg !41
  %793 = shufflevector <8 x float> %759, <8 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !41
  store <2 x float> %793, ptr addrspace(3) %792, align 8, !dbg !41
  %794 = getelementptr i8, ptr addrspace(3) %792, i64 144, !dbg !41
  %795 = shufflevector <8 x float> %759, <8 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !41
  store <2 x float> %795, ptr addrspace(3) %794, align 8, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %796 = and i32 %23, 31, !dbg !41
  %797 = mul nuw nsw i32 %796, 36, !dbg !41
  %798 = add nuw nsw i32 %797, %30, !dbg !41
  %799 = zext nneg i32 %798 to i64, !dbg !41
  %800 = getelementptr float, ptr addrspace(3) @global_smem, i64 %799, !dbg !41
  %801 = load float, ptr addrspace(3) %800, align 16, !dbg !41
  %802 = getelementptr inbounds i8, ptr addrspace(3) %800, i64 4, !dbg !41
  %803 = load float, ptr addrspace(3) %802, align 4, !dbg !41
  %804 = getelementptr inbounds i8, ptr addrspace(3) %800, i64 8, !dbg !41
  %805 = load float, ptr addrspace(3) %804, align 8, !dbg !41
  %806 = getelementptr inbounds i8, ptr addrspace(3) %800, i64 12, !dbg !41
  %807 = load float, ptr addrspace(3) %806, align 4, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %808 = shufflevector <8 x float> %759, <8 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !41
  store <2 x float> %808, ptr addrspace(3) %792, align 8, !dbg !41
  %809 = shufflevector <8 x float> %759, <8 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !41
  store <2 x float> %809, ptr addrspace(3) %794, align 8, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %810 = load float, ptr addrspace(3) %800, align 16, !dbg !41
  %811 = load float, ptr addrspace(3) %802, align 4, !dbg !41
  %812 = load float, ptr addrspace(3) %804, align 8, !dbg !41
  %813 = load float, ptr addrspace(3) %806, align 4, !dbg !41
  %814 = icmp slt i32 %26, %6, !dbg !43
  %815 = icmp slt i32 %27, %6, !dbg !43
  %816 = icmp slt i32 %787, 128, !dbg !44
  %817 = and i1 %816, %814, !dbg !45
  %818 = and i1 %816, %815, !dbg !45
  %819 = shl i32 %26, 7, !dbg !46
  %820 = shl i32 %27, 7, !dbg !46
  %821 = add i32 %819, %787, !dbg !47
  %822 = add i32 %820, %787, !dbg !47
  %823 = sext i32 %787 to i64, !dbg !48
  %824 = getelementptr float, ptr addrspace(1) %0, i64 %823, !dbg !48
  %825 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %824, i1 %817) #3, !dbg !49
  %826 = extractvalue { i32, i32, i32, i32 } %825, 0, !dbg !49
  %827 = extractvalue { i32, i32, i32, i32 } %825, 1, !dbg !49
  %828 = extractvalue { i32, i32, i32, i32 } %825, 2, !dbg !49
  %829 = extractvalue { i32, i32, i32, i32 } %825, 3, !dbg !49
  %830 = bitcast i32 %826 to float, !dbg !49
  %831 = bitcast i32 %827 to float, !dbg !49
  %832 = bitcast i32 %828 to float, !dbg !49
  %833 = bitcast i32 %829 to float, !dbg !49
  %834 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %824, i1 %818) #3, !dbg !49
  %835 = extractvalue { i32, i32, i32, i32 } %834, 0, !dbg !49
  %836 = extractvalue { i32, i32, i32, i32 } %834, 1, !dbg !49
  %837 = extractvalue { i32, i32, i32, i32 } %834, 2, !dbg !49
  %838 = extractvalue { i32, i32, i32, i32 } %834, 3, !dbg !49
  %839 = bitcast i32 %835 to float, !dbg !49
  %840 = bitcast i32 %836 to float, !dbg !49
  %841 = bitcast i32 %837 to float, !dbg !49
  %842 = bitcast i32 %838 to float, !dbg !49
  %843 = fadd float %801, %830, !dbg !50
  %844 = fadd float %803, %831, !dbg !50
  %845 = fadd float %805, %832, !dbg !50
  %846 = fadd float %807, %833, !dbg !50
  %847 = fadd float %810, %839, !dbg !50
  %848 = fadd float %811, %840, !dbg !50
  %849 = fadd float %812, %841, !dbg !50
  %850 = fadd float %813, %842, !dbg !50
  %851 = sext i32 %821 to i64, !dbg !51
  %852 = getelementptr float, ptr addrspace(1) %3, i64 %851, !dbg !51
  %853 = sext i32 %822 to i64, !dbg !51
  %854 = getelementptr float, ptr addrspace(1) %3, i64 %853, !dbg !51
  %855 = bitcast float %843 to i32, !dbg !52
  %856 = bitcast float %844 to i32, !dbg !52
  %857 = bitcast float %845 to i32, !dbg !52
  %858 = bitcast float %846 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %855, i32 %856, i32 %857, i32 %858, ptr addrspace(1) %852, i1 %817) #3, !dbg !52
  %859 = bitcast float %847 to i32, !dbg !52
  %860 = bitcast float %848 to i32, !dbg !52
  %861 = bitcast float %849 to i32, !dbg !52
  %862 = bitcast float %850 to i32, !dbg !52
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %859, i32 %860, i32 %861, i32 %862, ptr addrspace(1) %854, i1 %818) #3, !dbg !52
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxlzsgqz3vtepyb3p4znjz5yfzlwxetlfb5mkex4cpoqskoikd2e.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/xl")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 30, column: 11, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 33, column: 16, scope: !7)
!13 = !DILocation(line: 42, column: 24, scope: !7)
!14 = !DILocation(line: 43, column: 28, scope: !7)
!15 = !DILocation(line: 43, column: 34, scope: !7)
!16 = !DILocation(line: 48, column: 22, scope: !7)
!17 = !DILocation(line: 49, column: 41, scope: !7)
!18 = !DILocation(line: 49, column: 30, scope: !7)
!19 = !DILocation(line: 49, column: 50, scope: !7)
!20 = !DILocation(line: 50, column: 40, scope: !7)
!21 = !DILocation(line: 50, column: 34, scope: !7)
!22 = !DILocation(line: 51, column: 30, scope: !7)
!23 = !DILocation(line: 53, column: 17, scope: !7)
!24 = !DILocation(line: 53, column: 40, scope: !7)
!25 = !DILocation(line: 53, column: 27, scope: !7)
!26 = !DILocation(line: 54, column: 17, scope: !7)
!27 = !DILocation(line: 54, column: 40, scope: !7)
!28 = !DILocation(line: 54, column: 27, scope: !7)
!29 = !DILocation(line: 56, column: 52, scope: !7)
!30 = !DILocation(line: 60, column: 52, scope: !7)
!31 = !DILocation(line: 64, column: 28, scope: !7)
!32 = !DILocation(line: 64, column: 40, scope: !7)
!33 = !DILocation(line: 64, column: 13, scope: !7)
!34 = !DILocation(line: 65, column: 54, scope: !7)
!35 = !DILocation(line: 65, column: 39, scope: !7)
!36 = !DILocation(line: 65, column: 13, scope: !7)
!37 = !DILocation(line: 73, column: 24, scope: !7)
!38 = !DILocation(line: 74, column: 24, scope: !7)
!39 = !DILocation(line: 78, column: 13, scope: !7)
!40 = !DILocation(line: 79, column: 13, scope: !7)
!41 = !DILocation(line: 68, column: 25, scope: !7)
!42 = !DILocation(line: 77, column: 25, scope: !7)
!43 = !DILocation(line: 86, column: 20, scope: !7)
!44 = !DILocation(line: 86, column: 34, scope: !7)
!45 = !DILocation(line: 86, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 26, scope: !7)
!47 = !DILocation(line: 89, column: 22, scope: !7)
!48 = !DILocation(line: 90, column: 30, scope: !7)
!49 = !DILocation(line: 90, column: 66, scope: !7)
!50 = !DILocation(line: 91, column: 17, scope: !7)
!51 = !DILocation(line: 92, column: 25, scope: !7)
!52 = !DILocation(line: 92, column: 68, scope: !7)
