#blocked = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [4, 8], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [4, 4], threadsPerWarp = [1, 32], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked3 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [8, 1], order = [1, 0]}>
#loc = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0)
#shared = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [1, 0], hasLeadingOffset = false}>
#shared1 = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [0, 1], hasLeadingOffset = false}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:86", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_mm(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0), %arg4: i32 loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":18:0)) attributes {noinline = false} {
    %c60_i32 = arith.constant 60 : i32 loc(#loc1)
    %cst = arith.constant dense<92> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<92> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<124> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<124> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<156> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<156> : tensor<1x32xi32, #blocked1> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<64x128xf32, #blocked2> loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c156_i32 = arith.constant 156 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<32x128xf32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<64x32xf32, #blocked1> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<128> : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_9 = arith.constant dense<156> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<156> : tensor<1x128xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<32> : tensor<32x128xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<32> : tensor<64x32xi32, #blocked1> loc(#loc1)
    %cst_13 = arith.constant dense<128> : tensor<64x1xi32, #blocked3> loc(#loc1)
    %cst_14 = arith.constant dense<128> : tensor<1x128xi32, #blocked3> loc(#loc1)
    %0 = arith.muli %arg4, %c128_i32 : i32 loc(#loc2)
    %1 = arith.cmpi eq, %0, %c0_i32 : i32 loc(#loc3)
    cf.cond_br %1, ^bb1, ^bb2 loc(#loc3)
  ^bb1:  // pred: ^bb0
    tt.return loc(#loc4)
  ^bb2:  // pred: ^bb0
    %2 = tt.get_program_id x : i32 loc(#loc5)
    %3 = arith.addi %arg4, %c63_i32 : i32 loc(#loc6)
    %4 = arith.divsi %3, %c64_i32 : i32 loc(#loc7)
    %5 = arith.divsi %2, %c8_i32 : i32 loc(#loc8)
    %6 = arith.muli %5, %c8_i32 : i32 loc(#loc9)
    %7 = arith.subi %4, %6 : i32 loc(#loc10)
    %8 = arith.minsi %7, %c8_i32 : i32 loc(#loc11)
    %9 = arith.remsi %2, %8 : i32 loc(#loc12)
    %10 = arith.addi %6, %9 : i32 loc(#loc13)
    %11 = arith.remsi %2, %c8_i32 : i32 loc(#loc14)
    %12 = arith.divsi %11, %8 : i32 loc(#loc15)
    %13 = arith.muli %10, %c64_i32 : i32 loc(#loc16)
    %14 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc17)
    %15 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc17)
    %16 = tt.splat %13 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc18)
    %17 = tt.splat %13 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc18)
    %18 = arith.addi %16, %14 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc18)
    %19 = arith.addi %17, %15 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc18)
    %20 = arith.muli %12, %c128_i32 : i32 loc(#loc19)
    %21 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc20)
    %22 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc20)
    %23 = tt.splat %20 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc21)
    %24 = tt.splat %20 : i32 -> tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc21)
    %25 = arith.addi %23, %21 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc21)
    %26 = arith.addi %24, %22 : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc21)
    %27 = tt.splat %arg4 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %28 = arith.remsi %18, %27 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %29 = arith.remsi %25, %cst_8 {tt.contiguity = dense<128> : tensor<1xi32>, tt.divisibility = dense<128> : tensor<1xi32>} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc23)
    %30 = tt.expand_dims %28 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc24)
    %31 = arith.muli %30, %cst_9 : tensor<64x1xi32, #blocked1> loc(#loc25)
    %32 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc26)
    %33 = tt.expand_dims %32 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x32xi32, #blocked1> loc(#loc26)
    %34 = tt.broadcast %31 : tensor<64x1xi32, #blocked1> -> tensor<64x32xi32, #blocked1> loc(#loc27)
    %35 = tt.broadcast %33 : tensor<1x32xi32, #blocked1> -> tensor<64x32xi32, #blocked1> loc(#loc27)
    %36 = arith.addi %34, %35 : tensor<64x32xi32, #blocked1> loc(#loc27)
    %37 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x32x!tt.ptr<f32>, #blocked1> loc(#loc28)
    %38 = tt.addptr %37, %36 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc28)
    %39 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc29)
    %40 = tt.expand_dims %39 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc29)
    %41 = tt.expand_dims %29 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi32, #blocked> loc(#loc30)
    %42 = arith.muli %41, %cst_10 : tensor<1x128xi32, #blocked> loc(#loc31)
    %43 = tt.broadcast %40 : tensor<32x1xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc32)
    %44 = tt.broadcast %42 : tensor<1x128xi32, #blocked> -> tensor<32x128xi32, #blocked> loc(#loc32)
    %45 = arith.addi %43, %44 : tensor<32x128xi32, #blocked> loc(#loc32)
    %46 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x128x!tt.ptr<f32>, #blocked> loc(#loc33)
    %47 = tt.addptr %46, %45 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc33)
    %48 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc34)
    %49 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x32x128xf32, #shared1, mutable> loc(#loc35)
    %50 = arith.cmpi slt, %33, %cst_4 : tensor<1x32xi32, #blocked1> loc(#loc36)
    %51 = tt.broadcast %50 : tensor<1x32xi1, #blocked1> -> tensor<64x32xi1, #blocked1> loc(#loc34)
    %52 = triton_gpu.memdesc_subview %48[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc34)
    %53 = triton_gpu.async_copy_global_to_local %38, %52 mask %51 other %cst_7 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc34)
    %54 = triton_gpu.async_commit_group %53 loc(#loc34)
    %55 = arith.cmpi slt, %40, %cst_3 : tensor<32x1xi32, #blocked> loc(#loc37)
    %56 = tt.broadcast %55 : tensor<32x1xi1, #blocked> -> tensor<32x128xi1, #blocked> loc(#loc35)
    %57 = triton_gpu.memdesc_subview %49[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x128xf32, #shared1, mutable> -> !tt.memdesc<32x128xf32, #shared1, mutable> loc(#loc35)
    %58 = triton_gpu.async_copy_global_to_local %47, %57 mask %56 other %cst_6 : tensor<32x128x!tt.ptr<f32>, #blocked> -> <32x128xf32, #shared1, mutable> loc(#loc35)
    %59 = triton_gpu.async_commit_group %58 loc(#loc35)
    %60 = tt.addptr %38, %cst_12 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc38)
    %61 = tt.addptr %47, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc39)
    %62 = arith.cmpi slt, %33, %cst_2 : tensor<1x32xi32, #blocked1> loc(#loc36)
    %63 = tt.broadcast %62 : tensor<1x32xi1, #blocked1> -> tensor<64x32xi1, #blocked1> loc(#loc34)
    %64 = triton_gpu.memdesc_subview %48[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc34)
    %65 = triton_gpu.async_copy_global_to_local %60, %64 mask %63 other %cst_7 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc34)
    %66 = triton_gpu.async_commit_group %65 loc(#loc34)
    %67 = arith.cmpi slt, %40, %cst_1 : tensor<32x1xi32, #blocked> loc(#loc37)
    %68 = tt.broadcast %67 : tensor<32x1xi1, #blocked> -> tensor<32x128xi1, #blocked> loc(#loc35)
    %69 = triton_gpu.memdesc_subview %49[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x128xf32, #shared1, mutable> -> !tt.memdesc<32x128xf32, #shared1, mutable> loc(#loc35)
    %70 = triton_gpu.async_copy_global_to_local %61, %69 mask %68 other %cst_6 : tensor<32x128x!tt.ptr<f32>, #blocked> -> <32x128xf32, #shared1, mutable> loc(#loc35)
    %71 = triton_gpu.async_commit_group %70 loc(#loc35)
    %72 = tt.addptr %60, %cst_12 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc38)
    %73 = tt.addptr %61, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc39)
    %74 = arith.cmpi slt, %33, %cst_0 : tensor<1x32xi32, #blocked1> loc(#loc36)
    %75 = tt.broadcast %74 : tensor<1x32xi1, #blocked1> -> tensor<64x32xi1, #blocked1> loc(#loc34)
    %76 = triton_gpu.memdesc_subview %48[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc34)
    %77 = triton_gpu.async_copy_global_to_local %72, %76 mask %75 other %cst_7 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc34)
    %78 = triton_gpu.async_commit_group %77 loc(#loc34)
    %79 = arith.cmpi slt, %40, %cst : tensor<32x1xi32, #blocked> loc(#loc37)
    %80 = tt.broadcast %79 : tensor<32x1xi1, #blocked> -> tensor<32x128xi1, #blocked> loc(#loc35)
    %81 = triton_gpu.memdesc_subview %49[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x128xf32, #shared1, mutable> -> !tt.memdesc<32x128xf32, #shared1, mutable> loc(#loc35)
    %82 = triton_gpu.async_copy_global_to_local %73, %81 mask %80 other %cst_6 : tensor<32x128x!tt.ptr<f32>, #blocked> -> <32x128xf32, #shared1, mutable> loc(#loc35)
    %83 = triton_gpu.async_commit_group %82 loc(#loc35)
    %84 = triton_gpu.async_wait %59 {num = 4 : i32} loc(#loc34)
    %85:9 = scf.for %arg5 = %c0_i32 to %c156_i32 step %c32_i32 iter_args(%arg6 = %cst_5, %arg7 = %72, %arg8 = %73, %arg9 = %c2_i32, %arg10 = %c0_i32, %arg11 = %52, %arg12 = %57, %arg13 = %71, %arg14 = %83) -> (tensor<64x128xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x128x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x128xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token)  : i32 {
      %107 = arith.cmpi slt, %arg5, %c60_i32 : i32 loc(#loc40)
      %108 = triton_gpu.local_load %arg11 : !tt.memdesc<64x32xf32, #shared, mutable> -> tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> loc(#loc34)
      %109 = triton_gpu.local_load %arg12 : !tt.memdesc<32x128xf32, #shared1, mutable> -> tensor<32x128xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> loc(#loc35)
      %110 = tt.dot %108, %109, %arg6 : tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> * tensor<32x128xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> -> tensor<64x128xf32, #blocked2> loc(#loc41)
      %111 = tt.addptr %arg7, %cst_12 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc38)
      %112 = tt.addptr %arg8, %cst_11 : tensor<32x128x!tt.ptr<f32>, #blocked>, tensor<32x128xi32, #blocked> loc(#loc39)
      %113 = arith.addi %arg9, %c1_i32 : i32 loc(#loc40)
      %114 = arith.cmpi slt, %113, %c3_i32 : i32 loc(#loc40)
      %115 = arith.select %114, %113, %c0_i32 : i32 loc(#loc40)
      %116 = arith.subi %c60_i32, %arg5 : i32 loc(#loc42)
      %117 = tt.splat %116 : i32 -> tensor<1x32xi32, #blocked1> loc(#loc36)
      %118 = arith.cmpi slt, %33, %117 : tensor<1x32xi32, #blocked1> loc(#loc36)
      %119 = tt.broadcast %118 : tensor<1x32xi1, #blocked1> -> tensor<64x32xi1, #blocked1> loc(#loc34)
      %120 = triton_gpu.memdesc_subview %48[%115, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc34)
      %121 = tt.splat %107 : i1 -> tensor<64x32xi1, #blocked1> loc(#loc40)
      %122 = arith.andi %121, %119 : tensor<64x32xi1, #blocked1> loc(#loc40)
      %123 = triton_gpu.async_copy_global_to_local %111, %120 mask %122 other %cst_7 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc34)
      %124 = triton_gpu.async_commit_group %123 loc(#loc34)
      %125 = tt.splat %116 : i32 -> tensor<32x1xi32, #blocked> loc(#loc37)
      %126 = arith.cmpi slt, %40, %125 : tensor<32x1xi32, #blocked> loc(#loc37)
      %127 = tt.broadcast %126 : tensor<32x1xi1, #blocked> -> tensor<32x128xi1, #blocked> loc(#loc35)
      %128 = triton_gpu.memdesc_subview %49[%115, %c0_i32, %c0_i32] : !tt.memdesc<3x32x128xf32, #shared1, mutable> -> !tt.memdesc<32x128xf32, #shared1, mutable> loc(#loc35)
      %129 = tt.splat %107 : i1 -> tensor<32x128xi1, #blocked> loc(#loc40)
      %130 = arith.andi %129, %127 : tensor<32x128xi1, #blocked> loc(#loc40)
      %131 = triton_gpu.async_copy_global_to_local %112, %128 mask %130 other %cst_6 : tensor<32x128x!tt.ptr<f32>, #blocked> -> <32x128xf32, #shared1, mutable> loc(#loc35)
      %132 = triton_gpu.async_commit_group %131 loc(#loc35)
      %133 = arith.addi %arg10, %c1_i32 : i32 loc(#loc40)
      %134 = arith.cmpi slt, %133, %c3_i32 : i32 loc(#loc40)
      %135 = arith.select %134, %133, %c0_i32 : i32 loc(#loc40)
      %136 = triton_gpu.memdesc_subview %48[%135, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc34)
      %137 = triton_gpu.async_wait %arg13 {num = 4 : i32} loc(#loc34)
      %138 = triton_gpu.memdesc_subview %49[%135, %c0_i32, %c0_i32] : !tt.memdesc<3x32x128xf32, #shared1, mutable> -> !tt.memdesc<32x128xf32, #shared1, mutable> loc(#loc35)
      scf.yield %110, %111, %112, %115, %135, %136, %138, %arg14, %132 : tensor<64x128xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x128x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x128xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token loc(#loc40)
    } loc(#loc40)
    %86 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc40)
    triton_gpu.local_dealloc %48 : !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc40)
    triton_gpu.local_dealloc %49 : !tt.memdesc<3x32x128xf32, #shared1, mutable> loc(#loc40)
    %87 = triton_gpu.convert_layout %85#0 : tensor<64x128xf32, #blocked2> -> tensor<64x128xf32, #blocked3> loc(#loc40)
    %88 = tt.expand_dims %19 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<64x1xi32, #blocked3> loc(#loc43)
    %89 = tt.expand_dims %26 {axis = 0 : i32} : tensor<128xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> -> tensor<1x128xi32, #blocked3> loc(#loc44)
    %90 = tt.splat %arg4 : i32 -> tensor<64x1xi32, #blocked3> loc(#loc45)
    %91 = arith.cmpi slt, %88, %90 : tensor<64x1xi32, #blocked3> loc(#loc45)
    %92 = arith.cmpi slt, %89, %cst_14 : tensor<1x128xi32, #blocked3> loc(#loc46)
    %93 = tt.broadcast %91 : tensor<64x1xi1, #blocked3> -> tensor<64x128xi1, #blocked3> loc(#loc47)
    %94 = tt.broadcast %92 : tensor<1x128xi1, #blocked3> -> tensor<64x128xi1, #blocked3> loc(#loc47)
    %95 = arith.andi %93, %94 : tensor<64x128xi1, #blocked3> loc(#loc47)
    %96 = arith.muli %88, %cst_13 : tensor<64x1xi32, #blocked3> loc(#loc48)
    %97 = tt.broadcast %89 : tensor<1x128xi32, #blocked3> -> tensor<64x128xi32, #blocked3> loc(#loc49)
    %98 = tt.broadcast %96 : tensor<64x1xi32, #blocked3> -> tensor<64x128xi32, #blocked3> loc(#loc49)
    %99 = arith.addi %97, %98 : tensor<64x128xi32, #blocked3> loc(#loc49)
    %100 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x128x!tt.ptr<f32>, #blocked3> loc(#loc50)
    %101 = tt.addptr %100, %89 : tensor<1x128x!tt.ptr<f32>, #blocked3>, tensor<1x128xi32, #blocked3> loc(#loc50)
    %102 = tt.broadcast %101 : tensor<1x128x!tt.ptr<f32>, #blocked3> -> tensor<64x128x!tt.ptr<f32>, #blocked3> loc(#loc50)
    %103 = tt.load %102, %95 evictionPolicy = evict_last : tensor<64x128x!tt.ptr<f32>, #blocked3> loc(#loc51)
    %104 = arith.addf %87, %103 : tensor<64x128xf32, #blocked3> loc(#loc52)
    %105 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x128x!tt.ptr<f32>, #blocked3> loc(#loc53)
    %106 = tt.addptr %105, %99 : tensor<64x128x!tt.ptr<f32>, #blocked3>, tensor<64x128xi32, #blocked3> loc(#loc53)
    tt.store %106, %104, %95 : tensor<64x128x!tt.ptr<f32>, #blocked3> loc(#loc54)
    tt.return loc(#loc55)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":33:11)
#loc3 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":33:16)
#loc4 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":35:8)
#loc5 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":42:24)
#loc6 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":43:28)
#loc7 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":43:34)
#loc8 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":48:22)
#loc9 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":49:41)
#loc10 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":49:30)
#loc11 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":49:50)
#loc12 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":50:40)
#loc13 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":50:34)
#loc14 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":51:19)
#loc15 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":51:30)
#loc16 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":53:17)
#loc17 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":53:40)
#loc18 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":53:27)
#loc19 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":54:17)
#loc20 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":54:40)
#loc21 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":54:27)
#loc22 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":56:52)
#loc23 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":60:52)
#loc24 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":64:17)
#loc25 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":64:28)
#loc26 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":64:43)
#loc27 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":64:40)
#loc28 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":64:13)
#loc29 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":65:16)
#loc30 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":65:43)
#loc31 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":65:54)
#loc32 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":65:39)
#loc33 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":65:13)
#loc34 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":73:24)
#loc35 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":74:24)
#loc36 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":73:46)
#loc37 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":74:46)
#loc38 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":78:13)
#loc39 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":79:13)
#loc40 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":68:25)
#loc41 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":77:25)
#loc42 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":73:35)
#loc43 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":84:15)
#loc44 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":85:15)
#loc45 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":86:20)
#loc46 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":86:34)
#loc47 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":86:26)
#loc48 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":89:26)
#loc49 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":89:22)
#loc50 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":90:30)
#loc51 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":90:66)
#loc52 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":91:17)
#loc53 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":92:25)
#loc54 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":92:68)
#loc55 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ns/cnsny5kaxknjh34qkes344hek3hy5ur4xj5zcgkj7zoar6atu4q5.py":92:4)
