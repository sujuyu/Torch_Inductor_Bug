//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u32 triton__param_5
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<81>;
	.reg .b32 	%r<199>;
	.reg .b64 	%rd<105>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd41, [triton__param_0];
	ld.param.u64 	%rd42, [triton__param_1];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r74, %r1, 10;
	ld.param.u64 	%rd43, [triton__param_2];
	ld.param.u64 	%rd44, [triton__param_3];
	.loc	1 20 36
	mov.u32 	%r75, %tid.x;
	shl.b32 	%r76, %r75, 2;
	ld.param.u64 	%rd45, [triton__param_4];
	and.b32  	%r77, %r76, 508;
	ld.param.u32 	%r78, [triton__param_5];
	.loc	1 20 23
	or.b32  	%r79, %r74, %r77;
	or.b32  	%r80, %r79, 1;
	or.b32  	%r81, %r79, 2;
	or.b32  	%r82, %r79, 3;
	or.b32  	%r83, %r79, 512;
	or.b32  	%r84, %r79, 513;
	or.b32  	%r85, %r79, 514;
	or.b32  	%r86, %r79, 515;
	.loc	1 21 21
	setp.lt.s32 	%p65, %r79, %r78;
	setp.lt.s32 	%p66, %r80, %r78;
	setp.lt.s32 	%p67, %r81, %r78;
	setp.lt.s32 	%p68, %r82, %r78;
	setp.lt.s32 	%p69, %r83, %r78;
	setp.lt.s32 	%p70, %r84, %r78;
	setp.lt.s32 	%p71, %r85, %r78;
	setp.lt.s32 	%p72, %r86, %r78;
	.loc	1 23 20
	mul.hi.s32 	%r88, %r79, -423447479;
	mad.lo.s32 	%r89, %r79, 1, %r88;
	shr.u32 	%r90, %r89, 31;
	shr.s32 	%r91, %r89, 9;
	add.s32 	%r92, %r91, %r90;
	mul.lo.s32 	%r93, %r92, 568;
	sub.s32 	%r94, %r79, %r93;
	.loc	1 22 18
	mul.hi.s32 	%r95, %r80, -423447479;
	mad.lo.s32 	%r96, %r80, 1, %r95;
	shr.u32 	%r97, %r96, 31;
	shr.s32 	%r98, %r96, 9;
	add.s32 	%r99, %r98, %r97;
	mul.lo.s32 	%r100, %r99, 568;
	sub.s32 	%r101, %r80, %r100;
	mul.hi.s32 	%r102, %r81, -423447479;
	mad.lo.s32 	%r103, %r81, 1, %r102;
	shr.u32 	%r104, %r103, 31;
	shr.s32 	%r105, %r103, 9;
	add.s32 	%r106, %r105, %r104;
	mul.lo.s32 	%r107, %r106, 568;
	sub.s32 	%r108, %r81, %r107;
	mul.hi.s32 	%r109, %r82, -423447479;
	mad.lo.s32 	%r110, %r82, 1, %r109;
	shr.u32 	%r111, %r110, 31;
	shr.s32 	%r112, %r110, 9;
	add.s32 	%r113, %r112, %r111;
	mul.lo.s32 	%r114, %r113, 568;
	sub.s32 	%r115, %r82, %r114;
	.loc	1 23 20
	mul.hi.s32 	%r117, %r83, -423447479;
	mad.lo.s32 	%r118, %r83, 1, %r117;
	shr.u32 	%r119, %r118, 31;
	shr.s32 	%r120, %r118, 9;
	add.s32 	%r121, %r120, %r119;
	mul.lo.s32 	%r122, %r121, 568;
	sub.s32 	%r123, %r83, %r122;
	.loc	1 22 18
	mul.hi.s32 	%r124, %r84, -423447479;
	mad.lo.s32 	%r125, %r84, 1, %r124;
	shr.u32 	%r126, %r125, 31;
	shr.s32 	%r127, %r125, 9;
	add.s32 	%r128, %r127, %r126;
	mul.lo.s32 	%r129, %r128, 568;
	sub.s32 	%r130, %r84, %r129;
	mul.hi.s32 	%r131, %r85, -423447479;
	mad.lo.s32 	%r132, %r85, 1, %r131;
	shr.u32 	%r133, %r132, 31;
	shr.s32 	%r134, %r132, 9;
	add.s32 	%r135, %r134, %r133;
	mul.lo.s32 	%r136, %r135, 568;
	sub.s32 	%r137, %r85, %r136;
	mul.hi.s32 	%r138, %r86, -423447479;
	mad.lo.s32 	%r139, %r86, 1, %r138;
	shr.u32 	%r140, %r139, 31;
	shr.s32 	%r141, %r139, 9;
	add.s32 	%r142, %r141, %r140;
	mul.lo.s32 	%r143, %r142, 568;
	sub.s32 	%r144, %r86, %r143;
	.loc	1 29 18
	setp.lt.s32 	%p73, %r94, 204;
	setp.lt.s32 	%p74, %r123, 204;
	.loc	1 30 35
	mul.lo.s32 	%r145, %r92, 204;
	mul.lo.s32 	%r146, %r121, 204;
	.loc	1 30 41
	add.s32 	%r147, %r145, %r94;
	add.s32 	%r148, %r145, %r101;
	add.s32 	%r149, %r145, %r108;
	add.s32 	%r150, %r145, %r115;
	add.s32 	%r151, %r146, %r123;
	add.s32 	%r152, %r146, %r130;
	add.s32 	%r153, %r146, %r137;
	add.s32 	%r154, %r146, %r144;
	.loc	1 30 30
	mul.wide.s32 	%rd46, %r147, 4;
	add.s64 	%rd1, %rd41, %rd46;
	mul.wide.s32 	%rd47, %r148, 4;
	add.s64 	%rd2, %rd41, %rd47;
	mul.wide.s32 	%rd48, %r149, 4;
	add.s64 	%rd3, %rd41, %rd48;
	mul.wide.s32 	%rd49, %r150, 4;
	add.s64 	%rd4, %rd41, %rd49;
	mul.wide.s32 	%rd50, %r151, 4;
	add.s64 	%rd5, %rd41, %rd50;
	mul.wide.s32 	%rd51, %r152, 4;
	add.s64 	%rd6, %rd41, %rd51;
	mul.wide.s32 	%rd52, %r153, 4;
	add.s64 	%rd7, %rd41, %rd52;
	mul.wide.s32 	%rd53, %r154, 4;
	add.s64 	%rd8, %rd41, %rd53;
	.loc	1 30 53
	and.pred  	%p1, %p65, %p73;
	and.pred  	%p3, %p66, %p73;
	and.pred  	%p5, %p67, %p73;
	and.pred  	%p7, %p68, %p73;
	and.pred  	%p9, %p69, %p74;
	and.pred  	%p11, %p70, %p74;
	and.pred  	%p13, %p71, %p74;
	and.pred  	%p15, %p72, %p74;
	mov.b32 	%r3, 0;
	.loc	1 30 46
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p15 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 34 18
	add.s32 	%r155, %r94, -204;
	setp.lt.u32 	%p75, %r155, 16;
	add.s32 	%r156, %r123, -204;
	setp.lt.u32 	%p76, %r156, 16;
	.loc	1 35 35
	shl.b32 	%r157, %r92, 4;
	shl.b32 	%r158, %r121, 4;
	.loc	1 35 31
	cvt.s64.s32 	%rd54, %r157;
	cvt.s64.s32 	%rd55, %r94;
	add.s64 	%rd56, %rd54, %rd55;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd58, %rd42, %rd57;
	add.s64 	%rd9, %rd58, -816;
	cvt.s64.s32 	%rd59, %r101;
	add.s64 	%rd60, %rd54, %rd59;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd62, %rd42, %rd61;
	add.s64 	%rd10, %rd62, -816;
	cvt.s64.s32 	%rd63, %r108;
	add.s64 	%rd64, %rd54, %rd63;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd66, %rd42, %rd65;
	add.s64 	%rd11, %rd66, -816;
	cvt.s64.s32 	%rd67, %r115;
	add.s64 	%rd68, %rd54, %rd67;
	shl.b64 	%rd69, %rd68, 2;
	add.s64 	%rd70, %rd42, %rd69;
	add.s64 	%rd12, %rd70, -816;
	cvt.s64.s32 	%rd71, %r158;
	cvt.s64.s32 	%rd72, %r123;
	add.s64 	%rd73, %rd71, %rd72;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd75, %rd42, %rd74;
	add.s64 	%rd13, %rd75, -816;
	cvt.s64.s32 	%rd76, %r130;
	add.s64 	%rd77, %rd71, %rd76;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd79, %rd42, %rd78;
	add.s64 	%rd14, %rd79, -816;
	cvt.s64.s32 	%rd80, %r137;
	add.s64 	%rd81, %rd71, %rd80;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd83, %rd42, %rd82;
	add.s64 	%rd15, %rd83, -816;
	cvt.s64.s32 	%rd84, %r144;
	add.s64 	%rd85, %rd71, %rd84;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd87, %rd42, %rd86;
	add.s64 	%rd16, %rd87, -816;
	.loc	1 35 64
	and.pred  	%p17, %p65, %p75;
	and.pred  	%p19, %p66, %p75;
	and.pred  	%p21, %p67, %p75;
	and.pred  	%p23, %p68, %p75;
	and.pred  	%p25, %p69, %p76;
	and.pred  	%p27, %p70, %p76;
	and.pred  	%p29, %p71, %p76;
	and.pred  	%p31, %p72, %p76;
	.loc	1 35 57
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r18 }, [ %rd9 + 0 ];
	@!%p17 mov.u32 %r18, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p19 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	@!%p19 mov.u32 %r20, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p21 ld.global.L1::evict_last.b32 { %r22 }, [ %rd11 + 0 ];
	@!%p21 mov.u32 %r22, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p23 ld.global.L1::evict_last.b32 { %r24 }, [ %rd12 + 0 ];
	@!%p23 mov.u32 %r24, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r26 }, [ %rd13 + 0 ];
	@!%p25 mov.u32 %r26, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p27 ld.global.L1::evict_last.b32 { %r28 }, [ %rd14 + 0 ];
	@!%p27 mov.u32 %r28, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p29 ld.global.L1::evict_last.b32 { %r30 }, [ %rd15 + 0 ];
	@!%p29 mov.u32 %r30, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p31 ld.global.L1::evict_last.b32 { %r32 }, [ %rd16 + 0 ];
	@!%p31 mov.u32 %r32, %r3;
	// end inline asm
	.loc	1 39 20
	add.s32 	%r159, %r94, -220;
	setp.lt.u32 	%p77, %r159, 176;
	add.s32 	%r160, %r123, -220;
	setp.lt.u32 	%p78, %r160, 176;
	.loc	1 40 37
	mul.lo.s32 	%r161, %r92, 1872;
	mul.lo.s32 	%r162, %r121, 1872;
	.loc	1 40 44
	add.s32 	%r163, %r161, %r159;
	.loc	1 40 53
	add.s32 	%r164, %r161, -220;
	.loc	1 40 44
	add.s32 	%r165, %r164, %r101;
	add.s32 	%r166, %r164, %r108;
	add.s32 	%r167, %r164, %r115;
	add.s32 	%r168, %r162, %r160;
	.loc	1 40 53
	add.s32 	%r169, %r162, -220;
	.loc	1 40 44
	add.s32 	%r170, %r169, %r130;
	add.s32 	%r171, %r169, %r137;
	add.s32 	%r172, %r169, %r144;
	.loc	1 40 31
	mul.wide.s32 	%rd88, %r163, 4;
	add.s64 	%rd17, %rd43, %rd88;
	mul.wide.s32 	%rd89, %r165, 4;
	add.s64 	%rd18, %rd43, %rd89;
	mul.wide.s32 	%rd90, %r166, 4;
	add.s64 	%rd19, %rd43, %rd90;
	mul.wide.s32 	%rd91, %r167, 4;
	add.s64 	%rd20, %rd43, %rd91;
	mul.wide.s32 	%rd92, %r168, 4;
	add.s64 	%rd21, %rd43, %rd92;
	mul.wide.s32 	%rd93, %r170, 4;
	add.s64 	%rd22, %rd43, %rd93;
	mul.wide.s32 	%rd94, %r171, 4;
	add.s64 	%rd23, %rd43, %rd94;
	mul.wide.s32 	%rd95, %r172, 4;
	add.s64 	%rd24, %rd43, %rd95;
	.loc	1 40 67
	and.pred  	%p33, %p65, %p77;
	and.pred  	%p35, %p66, %p77;
	and.pred  	%p37, %p67, %p77;
	and.pred  	%p39, %p68, %p77;
	and.pred  	%p41, %p69, %p78;
	and.pred  	%p43, %p70, %p78;
	and.pred  	%p45, %p71, %p78;
	and.pred  	%p47, %p72, %p78;
	.loc	1 40 59
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p33 ld.global.L1::evict_last.b32 { %r34 }, [ %rd17 + 0 ];
	@!%p33 mov.u32 %r34, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p35 ld.global.L1::evict_last.b32 { %r36 }, [ %rd18 + 0 ];
	@!%p35 mov.u32 %r36, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r38 }, [ %rd19 + 0 ];
	@!%p37 mov.u32 %r38, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p39 ld.global.L1::evict_last.b32 { %r40 }, [ %rd20 + 0 ];
	@!%p39 mov.u32 %r40, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p41 ld.global.L1::evict_last.b32 { %r42 }, [ %rd21 + 0 ];
	@!%p41 mov.u32 %r42, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	@%p43 ld.global.L1::evict_last.b32 { %r44 }, [ %rd22 + 0 ];
	@!%p43 mov.u32 %r44, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p45 ld.global.L1::evict_last.b32 { %r46 }, [ %rd23 + 0 ];
	@!%p45 mov.u32 %r46, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r48, 0x0;
	@%p47 ld.global.L1::evict_last.b32 { %r48 }, [ %rd24 + 0 ];
	@!%p47 mov.u32 %r48, %r3;
	// end inline asm
	.loc	1 41 20
	setp.gt.s32 	%p79, %r94, 395;
	setp.gt.s32 	%p80, %r123, 395;
	.loc	1 44 53
	add.s32 	%r173, %r161, -396;
	.loc	1 44 44
	add.s32 	%r174, %r173, %r94;
	add.s32 	%r175, %r173, %r101;
	add.s32 	%r176, %r173, %r108;
	add.s32 	%r177, %r173, %r115;
	.loc	1 44 53
	add.s32 	%r178, %r162, -396;
	.loc	1 44 44
	add.s32 	%r179, %r178, %r123;
	add.s32 	%r180, %r178, %r130;
	add.s32 	%r181, %r178, %r137;
	add.s32 	%r182, %r178, %r144;
	.loc	1 44 31
	mul.wide.s32 	%rd96, %r174, 4;
	add.s64 	%rd25, %rd44, %rd96;
	mul.wide.s32 	%rd97, %r175, 4;
	add.s64 	%rd26, %rd44, %rd97;
	mul.wide.s32 	%rd98, %r176, 4;
	add.s64 	%rd27, %rd44, %rd98;
	mul.wide.s32 	%rd99, %r177, 4;
	add.s64 	%rd28, %rd44, %rd99;
	mul.wide.s32 	%rd100, %r179, 4;
	add.s64 	%rd29, %rd44, %rd100;
	mul.wide.s32 	%rd101, %r180, 4;
	add.s64 	%rd30, %rd44, %rd101;
	mul.wide.s32 	%rd102, %r181, 4;
	add.s64 	%rd31, %rd44, %rd102;
	mul.wide.s32 	%rd103, %r182, 4;
	add.s64 	%rd32, %rd44, %rd103;
	.loc	1 44 67
	and.pred  	%p49, %p65, %p79;
	and.pred  	%p51, %p66, %p79;
	and.pred  	%p53, %p67, %p79;
	and.pred  	%p55, %p68, %p79;
	and.pred  	%p57, %p69, %p80;
	and.pred  	%p59, %p70, %p80;
	and.pred  	%p61, %p71, %p80;
	and.pred  	%p63, %p72, %p80;
	.loc	1 44 59
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p49 ld.global.L1::evict_last.b32 { %r50 }, [ %rd25 + 0 ];
	@!%p49 mov.u32 %r50, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p51 ld.global.L1::evict_last.b32 { %r52 }, [ %rd26 + 0 ];
	@!%p51 mov.u32 %r52, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	@%p53 ld.global.L1::evict_last.b32 { %r54 }, [ %rd27 + 0 ];
	@!%p53 mov.u32 %r54, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r56, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r56 }, [ %rd28 + 0 ];
	@!%p55 mov.u32 %r56, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p57 ld.global.L1::evict_last.b32 { %r58 }, [ %rd29 + 0 ];
	@!%p57 mov.u32 %r58, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p59 ld.global.L1::evict_last.b32 { %r60 }, [ %rd30 + 0 ];
	@!%p59 mov.u32 %r60, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p61 ld.global.L1::evict_last.b32 { %r62 }, [ %rd31 + 0 ];
	@!%p61 mov.u32 %r62, %r3;
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p63 ld.global.L1::evict_last.b32 { %r64 }, [ %rd32 + 0 ];
	@!%p63 mov.u32 %r64, %r3;
	// end inline asm
	.loc	1 45 35
	selp.b32 	%r183, %r34, %r50, %p77;
	selp.b32 	%r184, %r36, %r52, %p77;
	selp.b32 	%r185, %r38, %r54, %p77;
	selp.b32 	%r186, %r40, %r56, %p77;
	selp.b32 	%r187, %r42, %r58, %p78;
	selp.b32 	%r188, %r44, %r60, %p78;
	selp.b32 	%r189, %r46, %r62, %p78;
	selp.b32 	%r190, %r48, %r64, %p78;
	.loc	1 46 34
	selp.b32 	%r191, %r18, %r183, %p75;
	selp.b32 	%r192, %r20, %r184, %p75;
	selp.b32 	%r193, %r22, %r185, %p75;
	selp.b32 	%r194, %r24, %r186, %p75;
	selp.b32 	%r195, %r26, %r187, %p76;
	selp.b32 	%r196, %r28, %r188, %p76;
	selp.b32 	%r197, %r30, %r189, %p76;
	selp.b32 	%r198, %r32, %r190, %p76;
	.loc	1 47 33
	selp.b32 	%r66, %r2, %r191, %p73;
	selp.b32 	%r67, %r4, %r192, %p73;
	selp.b32 	%r68, %r6, %r193, %p73;
	selp.b32 	%r69, %r8, %r194, %p73;
	selp.b32 	%r70, %r10, %r195, %p74;
	selp.b32 	%r71, %r12, %r196, %p74;
	selp.b32 	%r72, %r14, %r197, %p74;
	selp.b32 	%r73, %r16, %r198, %p74;
	.loc	1 48 25
	mul.wide.s32 	%rd104, %r79, 4;
	add.s64 	%rd33, %rd45, %rd104;
	add.s64 	%rd34, %rd33, 4;
	add.s64 	%rd35, %rd33, 8;
	add.s64 	%rd36, %rd33, 12;
	add.s64 	%rd37, %rd33, 2048;
	add.s64 	%rd38, %rd33, 2052;
	add.s64 	%rd39, %rd33, 2056;
	add.s64 	%rd40, %rd33, 2060;
	.loc	1 48 37
	// begin inline asm
	@%p65 st.global.b32 [ %rd33 + 0 ], { %r66 };
	// end inline asm
	// begin inline asm
	@%p66 st.global.b32 [ %rd34 + 0 ], { %r67 };
	// end inline asm
	// begin inline asm
	@%p67 st.global.b32 [ %rd35 + 0 ], { %r68 };
	// end inline asm
	// begin inline asm
	@%p68 st.global.b32 [ %rd36 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p69 st.global.b32 [ %rd37 + 0 ], { %r70 };
	// end inline asm
	// begin inline asm
	@%p70 st.global.b32 [ %rd38 + 0 ], { %r71 };
	// end inline asm
	// begin inline asm
	@%p71 st.global.b32 [ %rd39 + 0 ], { %r72 };
	// end inline asm
	// begin inline asm
	@%p72 st.global.b32 [ %rd40 + 0 ], { %r73 };
	// end inline asm
	.loc	1 48 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ql/cqlgpp5cpaskarye2xch272l53vinlaolekwkjuj3okjcfyxzy6b.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 176
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 113
.b8 108
.b8 103
.b8 112
.b8 112
.b8 53
.b8 99
.b8 112
.b8 97
.b8 115
.b8 107
.b8 97
.b8 114
.b8 121
.b8 101
.b8 50
.b8 120
.b8 99
.b8 104
.b8 50
.b8 55
.b8 50
.b8 108
.b8 53
.b8 51
.b8 118
.b8 105
.b8 110
.b8 108
.b8 97
.b8 111
.b8 108
.b8 101
.b8 107
.b8 119
.b8 107
.b8 106
.b8 117
.b8 106
.b8 51
.b8 111
.b8 107
.b8 106
.b8 99
.b8 102
.b8 121
.b8 120
.b8 122
.b8 121
.b8 54
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 113
.b8 108
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
