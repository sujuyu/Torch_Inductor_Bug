//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u32 triton__param_2
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<28>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd17, [triton__param_0];
	ld.param.u64 	%rd18, [triton__param_1];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 19 33
	shl.b32 	%r18, %r1, 10;
	ld.param.u32 	%r19, [triton__param_2];
	.loc	1 20 36
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r21, %r20, 2;
	and.b32  	%r22, %r21, 508;
	and.b32  	%r23, %r20, 127;
	.loc	1 20 23
	or.b32  	%r24, %r18, %r22;
	or.b32  	%r25, %r24, 1;
	or.b32  	%r26, %r24, 2;
	or.b32  	%r27, %r24, 3;
	or.b32  	%r28, %r24, 512;
	or.b32  	%r29, %r24, 513;
	or.b32  	%r30, %r24, 514;
	or.b32  	%r31, %r24, 515;
	or.b32  	%r32, %r18, %r23;
	or.b32  	%r33, %r32, 128;
	or.b32  	%r34, %r32, 256;
	or.b32  	%r35, %r32, 384;
	or.b32  	%r36, %r32, 512;
	or.b32  	%r37, %r32, 640;
	or.b32  	%r38, %r32, 768;
	or.b32  	%r39, %r32, 896;
	.loc	1 21 21
	setp.lt.s32 	%p1, %r24, %r19;
	setp.lt.s32 	%p2, %r25, %r19;
	setp.lt.s32 	%p3, %r26, %r19;
	setp.lt.s32 	%p4, %r27, %r19;
	setp.lt.s32 	%p5, %r28, %r19;
	setp.lt.s32 	%p6, %r29, %r19;
	setp.lt.s32 	%p7, %r30, %r19;
	setp.lt.s32 	%p8, %r31, %r19;
	setp.lt.s32 	%p9, %r32, %r19;
	setp.lt.s32 	%p10, %r33, %r19;
	setp.lt.s32 	%p11, %r34, %r19;
	setp.lt.s32 	%p12, %r35, %r19;
	setp.lt.s32 	%p13, %r36, %r19;
	setp.lt.s32 	%p14, %r37, %r19;
	setp.lt.s32 	%p15, %r38, %r19;
	setp.lt.s32 	%p16, %r39, %r19;
	.loc	1 24 20
	mul.hi.s32 	%r41, %r32, 156180629;
	shr.u32 	%r42, %r41, 31;
	shr.s32 	%r43, %r41, 3;
	add.s32 	%r44, %r43, %r42;
	mul.lo.s32 	%r45, %r44, 220;
	sub.s32 	%r46, %r32, %r45;
	mul.hi.s32 	%r48, %r33, 156180629;
	shr.u32 	%r49, %r48, 31;
	shr.s32 	%r50, %r48, 3;
	add.s32 	%r51, %r50, %r49;
	mul.lo.s32 	%r52, %r51, 220;
	sub.s32 	%r53, %r33, %r52;
	mul.hi.s32 	%r55, %r34, 156180629;
	shr.u32 	%r56, %r55, 31;
	shr.s32 	%r57, %r55, 3;
	add.s32 	%r58, %r57, %r56;
	mul.lo.s32 	%r59, %r58, 220;
	sub.s32 	%r60, %r34, %r59;
	mul.hi.s32 	%r62, %r35, 156180629;
	shr.u32 	%r63, %r62, 31;
	shr.s32 	%r64, %r62, 3;
	add.s32 	%r65, %r64, %r63;
	mul.lo.s32 	%r66, %r65, 220;
	sub.s32 	%r67, %r35, %r66;
	mul.hi.s32 	%r69, %r36, 156180629;
	shr.u32 	%r70, %r69, 31;
	shr.s32 	%r71, %r69, 3;
	add.s32 	%r72, %r71, %r70;
	mul.lo.s32 	%r73, %r72, 220;
	sub.s32 	%r74, %r36, %r73;
	mul.hi.s32 	%r76, %r37, 156180629;
	shr.u32 	%r77, %r76, 31;
	shr.s32 	%r78, %r76, 3;
	add.s32 	%r79, %r78, %r77;
	mul.lo.s32 	%r80, %r79, 220;
	sub.s32 	%r81, %r37, %r80;
	mul.hi.s32 	%r83, %r38, 156180629;
	shr.u32 	%r84, %r83, 31;
	shr.s32 	%r85, %r83, 3;
	add.s32 	%r86, %r85, %r84;
	mul.lo.s32 	%r87, %r86, 220;
	sub.s32 	%r88, %r38, %r87;
	mul.hi.s32 	%r90, %r39, 156180629;
	shr.u32 	%r91, %r90, 31;
	shr.s32 	%r92, %r90, 3;
	add.s32 	%r93, %r92, %r91;
	mul.lo.s32 	%r94, %r93, 220;
	sub.s32 	%r95, %r39, %r94;
	.loc	1 25 30
	mul.wide.s32 	%rd19, %r24, 4;
	add.s64 	%rd1, %rd17, %rd19;
	add.s64 	%rd2, %rd1, 4;
	add.s64 	%rd3, %rd1, 8;
	add.s64 	%rd4, %rd1, 12;
	add.s64 	%rd5, %rd1, 2048;
	add.s64 	%rd6, %rd1, 2052;
	add.s64 	%rd7, %rd1, 2056;
	add.s64 	%rd8, %rd1, 2060;
	.loc	1 25 35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p2 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p4 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p6 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p8 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 26 31
	mad.lo.s32 	%r96, %r44, 1872, %r46;
	mad.lo.s32 	%r97, %r51, 1872, %r53;
	mad.lo.s32 	%r98, %r58, 1872, %r60;
	mad.lo.s32 	%r99, %r65, 1872, %r67;
	mad.lo.s32 	%r100, %r72, 1872, %r74;
	mad.lo.s32 	%r101, %r79, 1872, %r81;
	mad.lo.s32 	%r102, %r86, 1872, %r88;
	mad.lo.s32 	%r103, %r93, 1872, %r95;
	.loc	1 26 25
	mul.wide.s32 	%rd20, %r96, 4;
	add.s64 	%rd9, %rd18, %rd20;
	mul.wide.s32 	%rd21, %r97, 4;
	add.s64 	%rd10, %rd18, %rd21;
	mul.wide.s32 	%rd22, %r98, 4;
	add.s64 	%rd11, %rd18, %rd22;
	mul.wide.s32 	%rd23, %r99, 4;
	add.s64 	%rd12, %rd18, %rd23;
	mul.wide.s32 	%rd24, %r100, 4;
	add.s64 	%rd13, %rd18, %rd24;
	mul.wide.s32 	%rd25, %r101, 4;
	add.s64 	%rd14, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r102, 4;
	add.s64 	%rd15, %rd18, %rd26;
	mul.wide.s32 	%rd27, %r103, 4;
	add.s64 	%rd16, %rd18, %rd27;
	.loc	1 26 48
	shl.b32 	%r104, %r23, 2;
	shl.b32 	%r105, %r23, 4;
	mov.u32 	%r106, global_smem;
	add.s32 	%r107, %r106, %r105;
	st.shared.v4.u32 	[%r107], {%r2, %r3, %r4, %r5};
	bar.sync 	0;
	add.s32 	%r108, %r106, %r104;
	ld.shared.u32 	%r10, [%r108];
	ld.shared.u32 	%r11, [%r108+512];
	ld.shared.u32 	%r12, [%r108+1024];
	ld.shared.u32 	%r13, [%r108+1536];
	bar.sync 	0;
	st.shared.v4.u32 	[%r107], {%r6, %r7, %r8, %r9};
	bar.sync 	0;
	ld.shared.u32 	%r14, [%r108];
	ld.shared.u32 	%r15, [%r108+512];
	ld.shared.u32 	%r16, [%r108+1024];
	ld.shared.u32 	%r17, [%r108+1536];
	// begin inline asm
	@%p9 st.global.b32 [ %rd9 + 0 ], { %r10 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.b32 [ %rd10 + 0 ], { %r11 };
	// end inline asm
	// begin inline asm
	@%p11 st.global.b32 [ %rd11 + 0 ], { %r12 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.b32 [ %rd12 + 0 ], { %r13 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.b32 [ %rd13 + 0 ], { %r14 };
	// end inline asm
	// begin inline asm
	@%p14 st.global.b32 [ %rd14 + 0 ], { %r15 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.b32 [ %rd15 + 0 ], { %r16 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.b32 [ %rd16 + 0 ], { %r17 };
	// end inline asm
	.loc	1 26 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/qi/cqiwarv76v36pxm4m4casilxrt2hjladpat5tizmhz6erjqghw6f.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 176
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 113
.b8 105
.b8 119
.b8 97
.b8 114
.b8 118
.b8 55
.b8 54
.b8 118
.b8 51
.b8 54
.b8 112
.b8 120
.b8 109
.b8 52
.b8 109
.b8 52
.b8 99
.b8 97
.b8 115
.b8 105
.b8 108
.b8 120
.b8 114
.b8 116
.b8 50
.b8 104
.b8 106
.b8 108
.b8 97
.b8 100
.b8 112
.b8 97
.b8 116
.b8 53
.b8 116
.b8 105
.b8 122
.b8 109
.b8 104
.b8 122
.b8 54
.b8 101
.b8 114
.b8 106
.b8 113
.b8 103
.b8 104
.b8 119
.b8 54
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 113
.b8 105
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
