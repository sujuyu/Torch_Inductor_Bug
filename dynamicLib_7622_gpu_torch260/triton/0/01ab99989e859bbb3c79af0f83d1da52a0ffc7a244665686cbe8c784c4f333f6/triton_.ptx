//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u32 triton__param_3
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<83>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<15>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd7, [triton__param_0];
	ld.param.u64 	%rd8, [triton__param_1];
$L__tmp0:
	.loc	1 19 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd9, [triton__param_2];
	.loc	1 19 33
	shl.b32 	%r26, %r1, 10;
	ld.param.u32 	%r27, [triton__param_3];
	.loc	1 20 36
	mov.u32 	%r28, %tid.x;
	shl.b32 	%r29, %r28, 2;
	and.b32  	%r30, %r29, 508;
	.loc	1 20 23
	or.b32  	%r31, %r26, %r30;
	or.b32  	%r32, %r31, 512;
	.loc	1 21 21
	setp.lt.s32 	%p1, %r31, %r27;
	setp.lt.s32 	%p2, %r32, %r27;
	.loc	1 23 20
	bfe.s32 	%r33, %r1, 21, 1;
	.loc	1 24 27
	shr.u32 	%r34, %r33, 28;
	add.s32 	%r35, %r31, %r34;
	.loc	1 23 20
	shr.s32 	%r36, %r35, 4;
	.loc	1 23 26
	mul.hi.s32 	%r37, %r36, 1374389535;
	shr.u32 	%r38, %r37, 31;
	shr.u32 	%r39, %r37, 4;
	add.s32 	%r40, %r39, %r38;
	mul.lo.s32 	%r41, %r40, 50;
	sub.s32 	%r42, %r36, %r41;
	.loc	1 24 20
	mul.hi.s32 	%r43, %r31, 1374389535;
	shr.s32 	%r44, %r43, 8;
	.loc	1 27 62
	shr.u32 	%r45, %r43, 31;
	.loc	1 24 20
	add.s32 	%r46, %r44, %r45;
	.loc	1 24 27
	shr.u32 	%r47, %r46, 29;
	add.s32 	%r48, %r46, %r47;
	and.b32  	%r49, %r48, 268435448;
	sub.s32 	%r50, %r46, %r49;
	and.b32  	%r51, %r35, -16;
	sub.s32 	%r52, %r31, %r51;
	.loc	1 27 39
	shl.b32 	%r53, %r50, 4;
	.loc	1 27 36
	add.s32 	%r54, %r53, %r52;
	.loc	1 27 50
	shl.b32 	%r55, %r42, 7;
	.loc	1 27 62
	shr.s32 	%r56, %r43, 11;
	add.s32 	%r57, %r56, %r45;
	mul.hi.s32 	%r58, %r32, 1374389535;
	shr.u32 	%r59, %r58, 31;
	shr.s32 	%r60, %r58, 11;
	add.s32 	%r61, %r60, %r59;
	mad.lo.s32 	%r62, %r57, 6400, %r55;
	.loc	1 27 57
	add.s32 	%r63, %r62, %r54;
	.loc	1 23 20
	shr.s32 	%r64, %r58, 8;
	add.s32 	%r65, %r64, %r59;
	add.s32 	%r66, %r32, %r34;
	shr.s32 	%r67, %r66, 4;
	.loc	1 23 26
	shr.u32 	%r68, %r65, 29;
	add.s32 	%r69, %r65, %r68;
	and.b32  	%r70, %r69, 268435448;
	sub.s32 	%r71, %r65, %r70;
	mul.hi.s32 	%r72, %r67, 1374389535;
	shr.u32 	%r73, %r72, 31;
	shr.u32 	%r74, %r72, 4;
	add.s32 	%r75, %r74, %r73;
	mul.lo.s32 	%r76, %r75, 50;
	sub.s32 	%r77, %r67, %r76;
	.loc	1 27 50
	shl.b32 	%r78, %r71, 4;
	shl.b32 	%r79, %r77, 7;
	.loc	1 27 62
	add.s32 	%r80, %r78, %r52;
	mad.lo.s32 	%r81, %r61, 6400, %r79;
	.loc	1 27 57
	add.s32 	%r82, %r81, %r80;
	.loc	1 27 30
	mul.wide.s32 	%rd10, %r63, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r82, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 27 68
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p2 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 28 30
	mul.wide.s32 	%rd12, %r54, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r80, 4;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 28 45
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	mov.b32 	%f14, %r15;
	mov.b32 	%f15, %r16;
	mov.b32 	%f16, %r17;
	.loc	1 29 18
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
	.loc	1 30 25
	mul.wide.s32 	%rd14, %r31, 4;
	add.s64 	%rd5, %rd9, %rd14;
	add.s64 	%rd6, %rd5, 2048;
	.loc	1 30 36
	mov.b32 	%r18, %f17;
	mov.b32 	%r19, %f18;
	mov.b32 	%r20, %f19;
	mov.b32 	%r21, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	mov.b32 	%r22, %f21;
	mov.b32 	%r23, %f22;
	mov.b32 	%r24, %f23;
	mov.b32 	%r25, %f24;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd6 + 0 ], { %r22, %r23, %r24, %r25 };
	// end inline asm
	.loc	1 30 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/d5/cd55pdmtorhezi5mv7veyzpcewxicut3wuipam43bwjl5qib5br6.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 176
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 100
.b8 53
.b8 53
.b8 112
.b8 100
.b8 109
.b8 116
.b8 111
.b8 114
.b8 104
.b8 101
.b8 122
.b8 105
.b8 53
.b8 109
.b8 118
.b8 55
.b8 118
.b8 101
.b8 121
.b8 122
.b8 112
.b8 99
.b8 101
.b8 119
.b8 120
.b8 105
.b8 99
.b8 117
.b8 116
.b8 51
.b8 119
.b8 117
.b8 105
.b8 112
.b8 97
.b8 109
.b8 52
.b8 51
.b8 98
.b8 119
.b8 106
.b8 108
.b8 53
.b8 113
.b8 105
.b8 98
.b8 53
.b8 98
.b8 114
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 100
.b8 53
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
