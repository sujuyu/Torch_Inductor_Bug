; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %8 = icmp slt i32 %7, %4, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = shl i32 %7, 4, !dbg !13
  %12 = or disjoint i32 %11, %10, !dbg !14
  %13 = sext i32 %12 to i64, !dbg !15
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %14, i1 %8, i32 0, i1 %8) #4, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = zext nneg i32 %10 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #4, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #4, !dbg !20
  %22 = select i1 %8, float %16, float 0.000000e+00, !dbg !21
  %23 = bitcast float %22 to i32, !dbg !22
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 8, i32 31), !dbg !22
  %25 = bitcast i32 %24 to float, !dbg !22
  %26 = fadd float %22, %25, !dbg !26
  %27 = bitcast float %26 to i32, !dbg !22
  %28 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %27, i32 4, i32 31), !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = fadd float %26, %29, !dbg !26
  %31 = bitcast float %30 to i32, !dbg !22
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 2, i32 31), !dbg !22
  %33 = bitcast i32 %32 to float, !dbg !22
  %34 = fadd float %30, %33, !dbg !26
  %35 = bitcast float %34 to i32, !dbg !22
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 1, i32 31), !dbg !22
  %37 = bitcast i32 %36 to float, !dbg !22
  %38 = fadd float %34, %37, !dbg !26
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %38, float 1.600000e+01) #4, !dbg !28
  %40 = fsub float %16, %39, !dbg !29
  %41 = fmul float %40, %40, !dbg !30
  %42 = select i1 %8, float %41, float 0.000000e+00, !dbg !31
  %43 = bitcast float %42 to i32, !dbg !32
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 8, i32 31), !dbg !32
  %45 = bitcast i32 %44 to float, !dbg !32
  %46 = fadd float %42, %45, !dbg !34
  %47 = bitcast float %46 to i32, !dbg !32
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 4, i32 31), !dbg !32
  %49 = bitcast i32 %48 to float, !dbg !32
  %50 = fadd float %46, %49, !dbg !34
  %51 = bitcast float %50 to i32, !dbg !32
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 2, i32 31), !dbg !32
  %53 = bitcast i32 %52 to float, !dbg !32
  %54 = fadd float %50, %53, !dbg !34
  %55 = bitcast float %54 to i32, !dbg !32
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 1, i32 31), !dbg !32
  %57 = bitcast i32 %56 to float, !dbg !32
  %58 = fadd float %54, %57, !dbg !34
  %59 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %58, float 1.600000e+01) #4, !dbg !35
  %60 = fadd float %59, 0x3EE4F8B580000000, !dbg !36
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !37
  %.not.i = icmp eq i32 %61, 0, !dbg !37
  br i1 %.not.i, label %64, label %62, !dbg !37

62:                                               ; preds = %6
  %63 = tail call float @llvm.nvvm.rsqrt.approx.ftz.f(float %60), !dbg !37
  br label %__nv_rsqrtf.exit, !dbg !37

64:                                               ; preds = %6
  %65 = tail call float @llvm.nvvm.rsqrt.approx.f(float %60), !dbg !37
  br label %__nv_rsqrtf.exit, !dbg !37

__nv_rsqrtf.exit:                                 ; preds = %62, %64
  %.0.i = phi float [ %63, %62 ], [ %65, %64 ], !dbg !37
  %66 = bitcast i32 %21 to float, !dbg !20
  %67 = bitcast i32 %19 to float, !dbg !18
  %68 = fmul float %40, %.0.i, !dbg !38
  %69 = fmul float %68, %67, !dbg !39
  %70 = fadd float %69, %66, !dbg !40
  %71 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !41
  %72 = and i32 %9, 48, !dbg !42
  %73 = icmp eq i32 %72, 0, !dbg !42
  %74 = bitcast float %70 to i32, !dbg !42
  %75 = and i1 %73, %8, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %74, ptr addrspace(1) %71, i1 %75) #4, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.rsqrt.approx.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfmj2rybzejtqyrqokrlv3v7bve5q4uqz4q3d4wvonjbrjmqswp5.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/fm")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 21, scope: !7)
!12 = !DILocation(line: 24, column: 34, scope: !7)
!13 = !DILocation(line: 29, column: 39, scope: !7)
!14 = !DILocation(line: 29, column: 36, scope: !7)
!15 = !DILocation(line: 29, column: 30, scope: !7)
!16 = !DILocation(line: 29, column: 45, scope: !7)
!17 = !DILocation(line: 30, column: 31, scope: !7)
!18 = !DILocation(line: 30, column: 36, scope: !7)
!19 = !DILocation(line: 31, column: 31, scope: !7)
!20 = !DILocation(line: 31, column: 36, scope: !7)
!21 = !DILocation(line: 35, column: 33, scope: !7)
!22 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language")
!25 = !DILocation(line: 36, column: 24, scope: !7)
!26 = !DILocation(line: 256, column: 15, scope: !27, inlinedAt: !25)
!27 = distinct !DILexicalBlockFile(scope: !23, file: !24, discriminator: 0)
!28 = !DILocation(line: 39, column: 19, scope: !7)
!29 = !DILocation(line: 40, column: 19, scope: !7)
!30 = !DILocation(line: 41, column: 20, scope: !7)
!31 = !DILocation(line: 43, column: 35, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !23, inlinedAt: !33)
!33 = !DILocation(line: 44, column: 26, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !27, inlinedAt: !33)
!35 = !DILocation(line: 47, column: 20, scope: !7)
!36 = !DILocation(line: 49, column: 20, scope: !7)
!37 = !DILocation(line: 50, column: 28, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 52, column: 20, scope: !7)
!40 = !DILocation(line: 53, column: 20, scope: !7)
!41 = !DILocation(line: 54, column: 25, scope: !7)
!42 = !DILocation(line: 54, column: 47, scope: !7)
!43 = !DILocation(line: 54, column: 4, scope: !7)
