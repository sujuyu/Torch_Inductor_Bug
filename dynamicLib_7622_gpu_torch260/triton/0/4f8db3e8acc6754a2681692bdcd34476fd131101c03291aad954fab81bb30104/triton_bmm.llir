; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

define void @triton_bmm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %.frozen = freeze i32 %4
  %5 = sdiv i32 %.frozen, 8, !dbg !11
  %6 = shl nsw i32 %5, 3, !dbg !12
  %7 = sub i32 1, %6, !dbg !13
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 8), !dbg !14
  %9 = srem i32 %4, %8, !dbg !15
  %10 = add i32 %6, %9, !dbg !16
  %11 = mul i32 %5, 8
  %.decomposed = sub i32 %.frozen, %11
  %12 = sdiv i32 %.decomposed, %8, !dbg !17
  %13 = shl nsw i32 %12, 6, !dbg !18
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %15 = shl i32 %14, 1, !dbg !19
  %16 = and i32 %15, 14, !dbg !19
  %17 = and i32 %15, 62, !dbg !19
  %18 = or disjoint i32 %13, %17, !dbg !20
  %19 = srem i32 %18, 50, !dbg !21
  %20 = lshr i32 %14, 5, !dbg !22
  %21 = and i32 %20, 3, !dbg !22
  %22 = or disjoint i32 %21, 4, !dbg !22
  %23 = or disjoint i32 %21, 8, !dbg !22
  %24 = or disjoint i32 %21, 12, !dbg !22
  %25 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !23
  %26 = shl i32 %25, 4, !dbg !24
  %27 = or disjoint i32 %26, %16, !dbg !25
  %28 = sext i32 %27 to i64, !dbg !26
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !26
  %30 = mul nuw nsw i32 %21, 50, !dbg !27
  %31 = mul nuw nsw i32 %22, 50, !dbg !27
  %32 = mul nuw nsw i32 %23, 50, !dbg !27
  %33 = mul nuw nsw i32 %24, 50, !dbg !27
  %34 = mul i32 %25, 800, !dbg !28
  %35 = add i32 %19, %34, !dbg !29
  %36 = add i32 %35, %30, !dbg !30
  %37 = add i32 %35, %31, !dbg !30
  %38 = add i32 %35, %32, !dbg !30
  %39 = add i32 %35, %33, !dbg !30
  %40 = sext i32 %36 to i64, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !31
  %42 = sext i32 %37 to i64, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !31
  %44 = sext i32 %38 to i64, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !31
  %46 = sext i32 %39 to i64, !dbg !31
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %46, !dbg !31
  %48 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %29, i1 true) #2, !dbg !32
  %49 = extractvalue { i32, i32 } %48, 0, !dbg !32
  %50 = extractvalue { i32, i32 } %48, 1, !dbg !32
  %51 = shl i32 %14, 1, !dbg !32
  %52 = and i32 %51, 240, !dbg !32
  %53 = or disjoint i32 %52, %16, !dbg !32
  %54 = zext nneg i32 %53 to i64, !dbg !32
  %55 = getelementptr float, ptr addrspace(3) @global_smem, i64 %54, !dbg !32
  %56 = insertelement <2 x i32> poison, i32 %49, i64 0, !dbg !32
  %57 = insertelement <2 x i32> %56, i32 %50, i64 1, !dbg !32
  store <2 x i32> %57, ptr addrspace(3) %55, align 8, !dbg !32
  %58 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 true) #2, !dbg !33
  %59 = extractvalue { i32, i32 } %58, 0, !dbg !33
  %60 = extractvalue { i32, i32 } %58, 1, !dbg !33
  %61 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 true) #2, !dbg !33
  %62 = extractvalue { i32, i32 } %61, 0, !dbg !33
  %63 = extractvalue { i32, i32 } %61, 1, !dbg !33
  %64 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %45, i1 true) #2, !dbg !33
  %65 = extractvalue { i32, i32 } %64, 0, !dbg !33
  %66 = extractvalue { i32, i32 } %64, 1, !dbg !33
  %67 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %47, i1 true) #2, !dbg !33
  %68 = extractvalue { i32, i32 } %67, 0, !dbg !33
  %69 = extractvalue { i32, i32 } %67, 1, !dbg !33
  %70 = shl nuw nsw i32 %21, 6, !dbg !33
  %71 = or disjoint i32 %70, %17, !dbg !33
  %72 = zext nneg i32 %71 to i64, !dbg !33
  %73 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 1024), i64 %72, !dbg !33
  %74 = shl nuw nsw i32 %22, 6, !dbg !33
  %75 = or disjoint i32 %74, %17, !dbg !33
  %76 = zext nneg i32 %75 to i64, !dbg !33
  %77 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 1024), i64 %76, !dbg !33
  %78 = shl nuw nsw i32 %23, 6, !dbg !33
  %79 = or disjoint i32 %78, %17, !dbg !33
  %80 = zext nneg i32 %79 to i64, !dbg !33
  %81 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 1024), i64 %80, !dbg !33
  %82 = shl nuw nsw i32 %24, 6, !dbg !33
  %83 = or disjoint i32 %82, %17, !dbg !33
  %84 = zext nneg i32 %83 to i64, !dbg !33
  %85 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 1024), i64 %84, !dbg !33
  %86 = insertelement <2 x i32> poison, i32 %59, i64 0, !dbg !33
  %87 = insertelement <2 x i32> %86, i32 %60, i64 1, !dbg !33
  store <2 x i32> %87, ptr addrspace(3) %73, align 8, !dbg !33
  %88 = insertelement <2 x i32> poison, i32 %62, i64 0, !dbg !33
  %89 = insertelement <2 x i32> %88, i32 %63, i64 1, !dbg !33
  store <2 x i32> %89, ptr addrspace(3) %77, align 8, !dbg !33
  %90 = insertelement <2 x i32> poison, i32 %65, i64 0, !dbg !33
  %91 = insertelement <2 x i32> %90, i32 %66, i64 1, !dbg !33
  store <2 x i32> %91, ptr addrspace(3) %81, align 8, !dbg !33
  %92 = insertelement <2 x i32> poison, i32 %68, i64 0, !dbg !33
  %93 = insertelement <2 x i32> %92, i32 %69, i64 1, !dbg !33
  store <2 x i32> %93, ptr addrspace(3) %85, align 8, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !32
  %94 = and i32 %14, 224, !dbg !32
  %95 = zext nneg i32 %94 to i64, !dbg !32
  %96 = getelementptr float, ptr addrspace(3) @global_smem, i64 %95, !dbg !32
  %97 = load float, ptr addrspace(3) %96, align 16, !dbg !32
  %98 = getelementptr i8, ptr addrspace(3) %96, i64 64, !dbg !32
  %99 = load float, ptr addrspace(3) %98, align 16, !dbg !32
  %100 = getelementptr i8, ptr addrspace(3) %96, i64 512, !dbg !32
  %101 = load float, ptr addrspace(3) %100, align 16, !dbg !32
  %102 = getelementptr i8, ptr addrspace(3) %96, i64 576, !dbg !32
  %103 = load float, ptr addrspace(3) %102, align 16, !dbg !32
  %104 = getelementptr i8, ptr addrspace(3) %96, i64 4, !dbg !32
  %105 = load float, ptr addrspace(3) %104, align 4, !dbg !32
  %106 = getelementptr i8, ptr addrspace(3) %96, i64 68, !dbg !32
  %107 = load float, ptr addrspace(3) %106, align 4, !dbg !32
  %108 = getelementptr i8, ptr addrspace(3) %96, i64 516, !dbg !32
  %109 = load float, ptr addrspace(3) %108, align 4, !dbg !32
  %110 = getelementptr i8, ptr addrspace(3) %96, i64 580, !dbg !32
  %111 = load float, ptr addrspace(3) %110, align 4, !dbg !32
  %112 = getelementptr i8, ptr addrspace(3) %96, i64 8, !dbg !32
  %113 = load float, ptr addrspace(3) %112, align 8, !dbg !32
  %114 = getelementptr i8, ptr addrspace(3) %96, i64 72, !dbg !32
  %115 = load float, ptr addrspace(3) %114, align 8, !dbg !32
  %116 = getelementptr i8, ptr addrspace(3) %96, i64 520, !dbg !32
  %117 = load float, ptr addrspace(3) %116, align 8, !dbg !32
  %118 = getelementptr i8, ptr addrspace(3) %96, i64 584, !dbg !32
  %119 = load float, ptr addrspace(3) %118, align 8, !dbg !32
  %120 = getelementptr i8, ptr addrspace(3) %96, i64 12, !dbg !32
  %121 = load float, ptr addrspace(3) %120, align 4, !dbg !32
  %122 = getelementptr i8, ptr addrspace(3) %96, i64 76, !dbg !32
  %123 = load float, ptr addrspace(3) %122, align 4, !dbg !32
  %124 = getelementptr i8, ptr addrspace(3) %96, i64 524, !dbg !32
  %125 = load float, ptr addrspace(3) %124, align 4, !dbg !32
  %126 = getelementptr i8, ptr addrspace(3) %96, i64 588, !dbg !32
  %127 = load float, ptr addrspace(3) %126, align 4, !dbg !32
  %128 = getelementptr i8, ptr addrspace(3) %96, i64 16, !dbg !32
  %129 = load float, ptr addrspace(3) %128, align 16, !dbg !32
  %130 = getelementptr i8, ptr addrspace(3) %96, i64 80, !dbg !32
  %131 = load float, ptr addrspace(3) %130, align 16, !dbg !32
  %132 = getelementptr i8, ptr addrspace(3) %96, i64 528, !dbg !32
  %133 = load float, ptr addrspace(3) %132, align 16, !dbg !32
  %134 = getelementptr i8, ptr addrspace(3) %96, i64 592, !dbg !32
  %135 = load float, ptr addrspace(3) %134, align 16, !dbg !32
  %136 = getelementptr i8, ptr addrspace(3) %96, i64 20, !dbg !32
  %137 = load float, ptr addrspace(3) %136, align 4, !dbg !32
  %138 = getelementptr i8, ptr addrspace(3) %96, i64 84, !dbg !32
  %139 = load float, ptr addrspace(3) %138, align 4, !dbg !32
  %140 = getelementptr i8, ptr addrspace(3) %96, i64 532, !dbg !32
  %141 = load float, ptr addrspace(3) %140, align 4, !dbg !32
  %142 = getelementptr i8, ptr addrspace(3) %96, i64 596, !dbg !32
  %143 = load float, ptr addrspace(3) %142, align 4, !dbg !32
  %144 = getelementptr i8, ptr addrspace(3) %96, i64 24, !dbg !32
  %145 = load float, ptr addrspace(3) %144, align 8, !dbg !32
  %146 = getelementptr i8, ptr addrspace(3) %96, i64 88, !dbg !32
  %147 = load float, ptr addrspace(3) %146, align 8, !dbg !32
  %148 = getelementptr i8, ptr addrspace(3) %96, i64 536, !dbg !32
  %149 = load float, ptr addrspace(3) %148, align 8, !dbg !32
  %150 = getelementptr i8, ptr addrspace(3) %96, i64 600, !dbg !32
  %151 = load float, ptr addrspace(3) %150, align 8, !dbg !32
  %152 = getelementptr i8, ptr addrspace(3) %96, i64 28, !dbg !32
  %153 = load float, ptr addrspace(3) %152, align 4, !dbg !32
  %154 = getelementptr i8, ptr addrspace(3) %96, i64 92, !dbg !32
  %155 = load float, ptr addrspace(3) %154, align 4, !dbg !32
  %156 = getelementptr i8, ptr addrspace(3) %96, i64 540, !dbg !32
  %157 = load float, ptr addrspace(3) %156, align 4, !dbg !32
  %158 = getelementptr i8, ptr addrspace(3) %96, i64 604, !dbg !32
  %159 = load float, ptr addrspace(3) %158, align 4, !dbg !32
  %160 = getelementptr i8, ptr addrspace(3) %96, i64 32, !dbg !32
  %161 = load float, ptr addrspace(3) %160, align 16, !dbg !32
  %162 = getelementptr i8, ptr addrspace(3) %96, i64 96, !dbg !32
  %163 = load float, ptr addrspace(3) %162, align 16, !dbg !32
  %164 = getelementptr i8, ptr addrspace(3) %96, i64 544, !dbg !32
  %165 = load float, ptr addrspace(3) %164, align 16, !dbg !32
  %166 = getelementptr i8, ptr addrspace(3) %96, i64 608, !dbg !32
  %167 = load float, ptr addrspace(3) %166, align 16, !dbg !32
  %168 = getelementptr i8, ptr addrspace(3) %96, i64 36, !dbg !32
  %169 = load float, ptr addrspace(3) %168, align 4, !dbg !32
  %170 = getelementptr i8, ptr addrspace(3) %96, i64 100, !dbg !32
  %171 = load float, ptr addrspace(3) %170, align 4, !dbg !32
  %172 = getelementptr i8, ptr addrspace(3) %96, i64 548, !dbg !32
  %173 = load float, ptr addrspace(3) %172, align 4, !dbg !32
  %174 = getelementptr i8, ptr addrspace(3) %96, i64 612, !dbg !32
  %175 = load float, ptr addrspace(3) %174, align 4, !dbg !32
  %176 = getelementptr i8, ptr addrspace(3) %96, i64 40, !dbg !32
  %177 = load float, ptr addrspace(3) %176, align 8, !dbg !32
  %178 = getelementptr i8, ptr addrspace(3) %96, i64 104, !dbg !32
  %179 = load float, ptr addrspace(3) %178, align 8, !dbg !32
  %180 = getelementptr i8, ptr addrspace(3) %96, i64 552, !dbg !32
  %181 = load float, ptr addrspace(3) %180, align 8, !dbg !32
  %182 = getelementptr i8, ptr addrspace(3) %96, i64 616, !dbg !32
  %183 = load float, ptr addrspace(3) %182, align 8, !dbg !32
  %184 = getelementptr i8, ptr addrspace(3) %96, i64 44, !dbg !32
  %185 = load float, ptr addrspace(3) %184, align 4, !dbg !32
  %186 = getelementptr i8, ptr addrspace(3) %96, i64 108, !dbg !32
  %187 = load float, ptr addrspace(3) %186, align 4, !dbg !32
  %188 = getelementptr i8, ptr addrspace(3) %96, i64 556, !dbg !32
  %189 = load float, ptr addrspace(3) %188, align 4, !dbg !32
  %190 = getelementptr i8, ptr addrspace(3) %96, i64 620, !dbg !32
  %191 = load float, ptr addrspace(3) %190, align 4, !dbg !32
  %192 = getelementptr i8, ptr addrspace(3) %96, i64 48, !dbg !32
  %193 = load float, ptr addrspace(3) %192, align 16, !dbg !32
  %194 = getelementptr i8, ptr addrspace(3) %96, i64 112, !dbg !32
  %195 = load float, ptr addrspace(3) %194, align 16, !dbg !32
  %196 = getelementptr i8, ptr addrspace(3) %96, i64 560, !dbg !32
  %197 = load float, ptr addrspace(3) %196, align 16, !dbg !32
  %198 = getelementptr i8, ptr addrspace(3) %96, i64 624, !dbg !32
  %199 = load float, ptr addrspace(3) %198, align 16, !dbg !32
  %200 = getelementptr i8, ptr addrspace(3) %96, i64 52, !dbg !32
  %201 = load float, ptr addrspace(3) %200, align 4, !dbg !32
  %202 = getelementptr i8, ptr addrspace(3) %96, i64 116, !dbg !32
  %203 = load float, ptr addrspace(3) %202, align 4, !dbg !32
  %204 = getelementptr i8, ptr addrspace(3) %96, i64 564, !dbg !32
  %205 = load float, ptr addrspace(3) %204, align 4, !dbg !32
  %206 = getelementptr i8, ptr addrspace(3) %96, i64 628, !dbg !32
  %207 = load float, ptr addrspace(3) %206, align 4, !dbg !32
  %208 = getelementptr i8, ptr addrspace(3) %96, i64 56, !dbg !32
  %209 = load float, ptr addrspace(3) %208, align 8, !dbg !32
  %210 = getelementptr i8, ptr addrspace(3) %96, i64 120, !dbg !32
  %211 = load float, ptr addrspace(3) %210, align 8, !dbg !32
  %212 = getelementptr i8, ptr addrspace(3) %96, i64 568, !dbg !32
  %213 = load float, ptr addrspace(3) %212, align 8, !dbg !32
  %214 = getelementptr i8, ptr addrspace(3) %96, i64 632, !dbg !32
  %215 = load float, ptr addrspace(3) %214, align 8, !dbg !32
  %216 = getelementptr i8, ptr addrspace(3) %96, i64 60, !dbg !32
  %217 = load float, ptr addrspace(3) %216, align 4, !dbg !32
  %218 = getelementptr i8, ptr addrspace(3) %96, i64 124, !dbg !32
  %219 = load float, ptr addrspace(3) %218, align 4, !dbg !32
  %220 = getelementptr i8, ptr addrspace(3) %96, i64 572, !dbg !32
  %221 = load float, ptr addrspace(3) %220, align 4, !dbg !32
  %222 = getelementptr i8, ptr addrspace(3) %96, i64 636, !dbg !32
  %223 = load float, ptr addrspace(3) %222, align 4, !dbg !32
  %224 = zext nneg i32 %17 to i64, !dbg !33
  %225 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 1024), i64 %224, !dbg !33
  %226 = load float, ptr addrspace(3) %225, align 8, !dbg !33
  %227 = getelementptr i8, ptr addrspace(3) %225, i64 4, !dbg !33
  %228 = load float, ptr addrspace(3) %227, align 4, !dbg !33
  %229 = getelementptr i8, ptr addrspace(3) %225, i64 256, !dbg !33
  %230 = load float, ptr addrspace(3) %229, align 8, !dbg !33
  %231 = getelementptr i8, ptr addrspace(3) %225, i64 260, !dbg !33
  %232 = load float, ptr addrspace(3) %231, align 4, !dbg !33
  %233 = getelementptr i8, ptr addrspace(3) %225, i64 512, !dbg !33
  %234 = load float, ptr addrspace(3) %233, align 8, !dbg !33
  %235 = getelementptr i8, ptr addrspace(3) %225, i64 516, !dbg !33
  %236 = load float, ptr addrspace(3) %235, align 4, !dbg !33
  %237 = getelementptr i8, ptr addrspace(3) %225, i64 768, !dbg !33
  %238 = load float, ptr addrspace(3) %237, align 8, !dbg !33
  %239 = getelementptr i8, ptr addrspace(3) %225, i64 772, !dbg !33
  %240 = load float, ptr addrspace(3) %239, align 4, !dbg !33
  %241 = getelementptr i8, ptr addrspace(3) %225, i64 1024, !dbg !33
  %242 = load float, ptr addrspace(3) %241, align 8, !dbg !33
  %243 = getelementptr i8, ptr addrspace(3) %225, i64 1028, !dbg !33
  %244 = load float, ptr addrspace(3) %243, align 4, !dbg !33
  %245 = getelementptr i8, ptr addrspace(3) %225, i64 1280, !dbg !33
  %246 = load float, ptr addrspace(3) %245, align 8, !dbg !33
  %247 = getelementptr i8, ptr addrspace(3) %225, i64 1284, !dbg !33
  %248 = load float, ptr addrspace(3) %247, align 4, !dbg !33
  %249 = getelementptr i8, ptr addrspace(3) %225, i64 1536, !dbg !33
  %250 = load float, ptr addrspace(3) %249, align 8, !dbg !33
  %251 = getelementptr i8, ptr addrspace(3) %225, i64 1540, !dbg !33
  %252 = load float, ptr addrspace(3) %251, align 4, !dbg !33
  %253 = getelementptr i8, ptr addrspace(3) %225, i64 1792, !dbg !33
  %254 = load float, ptr addrspace(3) %253, align 8, !dbg !33
  %255 = getelementptr i8, ptr addrspace(3) %225, i64 1796, !dbg !33
  %256 = load float, ptr addrspace(3) %255, align 4, !dbg !33
  %257 = getelementptr i8, ptr addrspace(3) %225, i64 2048, !dbg !33
  %258 = load float, ptr addrspace(3) %257, align 8, !dbg !33
  %259 = getelementptr i8, ptr addrspace(3) %225, i64 2052, !dbg !33
  %260 = load float, ptr addrspace(3) %259, align 4, !dbg !33
  %261 = getelementptr i8, ptr addrspace(3) %225, i64 2304, !dbg !33
  %262 = load float, ptr addrspace(3) %261, align 8, !dbg !33
  %263 = getelementptr i8, ptr addrspace(3) %225, i64 2308, !dbg !33
  %264 = load float, ptr addrspace(3) %263, align 4, !dbg !33
  %265 = getelementptr i8, ptr addrspace(3) %225, i64 2560, !dbg !33
  %266 = load float, ptr addrspace(3) %265, align 8, !dbg !33
  %267 = getelementptr i8, ptr addrspace(3) %225, i64 2564, !dbg !33
  %268 = load float, ptr addrspace(3) %267, align 4, !dbg !33
  %269 = getelementptr i8, ptr addrspace(3) %225, i64 2816, !dbg !33
  %270 = load float, ptr addrspace(3) %269, align 8, !dbg !33
  %271 = getelementptr i8, ptr addrspace(3) %225, i64 2820, !dbg !33
  %272 = load float, ptr addrspace(3) %271, align 4, !dbg !33
  %273 = getelementptr i8, ptr addrspace(3) %225, i64 3072, !dbg !33
  %274 = load float, ptr addrspace(3) %273, align 8, !dbg !33
  %275 = getelementptr i8, ptr addrspace(3) %225, i64 3076, !dbg !33
  %276 = load float, ptr addrspace(3) %275, align 4, !dbg !33
  %277 = getelementptr i8, ptr addrspace(3) %225, i64 3328, !dbg !33
  %278 = load float, ptr addrspace(3) %277, align 8, !dbg !33
  %279 = getelementptr i8, ptr addrspace(3) %225, i64 3332, !dbg !33
  %280 = load float, ptr addrspace(3) %279, align 4, !dbg !33
  %281 = getelementptr i8, ptr addrspace(3) %225, i64 3584, !dbg !33
  %282 = load float, ptr addrspace(3) %281, align 8, !dbg !33
  %283 = getelementptr i8, ptr addrspace(3) %225, i64 3588, !dbg !33
  %284 = load float, ptr addrspace(3) %283, align 4, !dbg !33
  %285 = getelementptr i8, ptr addrspace(3) %225, i64 3840, !dbg !33
  %286 = load float, ptr addrspace(3) %285, align 8, !dbg !33
  %287 = getelementptr i8, ptr addrspace(3) %225, i64 3844, !dbg !33
  %288 = load float, ptr addrspace(3) %287, align 4, !dbg !33
  %289 = tail call float @llvm.fmuladd.f32(float %97, float %226, float 0.000000e+00), !dbg !34
  %290 = tail call float @llvm.fmuladd.f32(float %97, float %228, float 0.000000e+00), !dbg !34
  %291 = tail call float @llvm.fmuladd.f32(float %99, float %226, float 0.000000e+00), !dbg !34
  %292 = tail call float @llvm.fmuladd.f32(float %99, float %228, float 0.000000e+00), !dbg !34
  %293 = tail call float @llvm.fmuladd.f32(float %101, float %226, float 0.000000e+00), !dbg !34
  %294 = tail call float @llvm.fmuladd.f32(float %101, float %228, float 0.000000e+00), !dbg !34
  %295 = tail call float @llvm.fmuladd.f32(float %103, float %226, float 0.000000e+00), !dbg !34
  %296 = tail call float @llvm.fmuladd.f32(float %103, float %228, float 0.000000e+00), !dbg !34
  %297 = tail call float @llvm.fmuladd.f32(float %105, float %230, float %289), !dbg !34
  %298 = tail call float @llvm.fmuladd.f32(float %105, float %232, float %290), !dbg !34
  %299 = tail call float @llvm.fmuladd.f32(float %107, float %230, float %291), !dbg !34
  %300 = tail call float @llvm.fmuladd.f32(float %107, float %232, float %292), !dbg !34
  %301 = tail call float @llvm.fmuladd.f32(float %109, float %230, float %293), !dbg !34
  %302 = tail call float @llvm.fmuladd.f32(float %109, float %232, float %294), !dbg !34
  %303 = tail call float @llvm.fmuladd.f32(float %111, float %230, float %295), !dbg !34
  %304 = tail call float @llvm.fmuladd.f32(float %111, float %232, float %296), !dbg !34
  %305 = tail call float @llvm.fmuladd.f32(float %113, float %234, float %297), !dbg !34
  %306 = tail call float @llvm.fmuladd.f32(float %113, float %236, float %298), !dbg !34
  %307 = tail call float @llvm.fmuladd.f32(float %115, float %234, float %299), !dbg !34
  %308 = tail call float @llvm.fmuladd.f32(float %115, float %236, float %300), !dbg !34
  %309 = tail call float @llvm.fmuladd.f32(float %117, float %234, float %301), !dbg !34
  %310 = tail call float @llvm.fmuladd.f32(float %117, float %236, float %302), !dbg !34
  %311 = tail call float @llvm.fmuladd.f32(float %119, float %234, float %303), !dbg !34
  %312 = tail call float @llvm.fmuladd.f32(float %119, float %236, float %304), !dbg !34
  %313 = tail call float @llvm.fmuladd.f32(float %121, float %238, float %305), !dbg !34
  %314 = tail call float @llvm.fmuladd.f32(float %121, float %240, float %306), !dbg !34
  %315 = tail call float @llvm.fmuladd.f32(float %123, float %238, float %307), !dbg !34
  %316 = tail call float @llvm.fmuladd.f32(float %123, float %240, float %308), !dbg !34
  %317 = tail call float @llvm.fmuladd.f32(float %125, float %238, float %309), !dbg !34
  %318 = tail call float @llvm.fmuladd.f32(float %125, float %240, float %310), !dbg !34
  %319 = tail call float @llvm.fmuladd.f32(float %127, float %238, float %311), !dbg !34
  %320 = tail call float @llvm.fmuladd.f32(float %127, float %240, float %312), !dbg !34
  %321 = tail call float @llvm.fmuladd.f32(float %129, float %242, float %313), !dbg !34
  %322 = tail call float @llvm.fmuladd.f32(float %129, float %244, float %314), !dbg !34
  %323 = tail call float @llvm.fmuladd.f32(float %131, float %242, float %315), !dbg !34
  %324 = tail call float @llvm.fmuladd.f32(float %131, float %244, float %316), !dbg !34
  %325 = tail call float @llvm.fmuladd.f32(float %133, float %242, float %317), !dbg !34
  %326 = tail call float @llvm.fmuladd.f32(float %133, float %244, float %318), !dbg !34
  %327 = tail call float @llvm.fmuladd.f32(float %135, float %242, float %319), !dbg !34
  %328 = tail call float @llvm.fmuladd.f32(float %135, float %244, float %320), !dbg !34
  %329 = tail call float @llvm.fmuladd.f32(float %137, float %246, float %321), !dbg !34
  %330 = tail call float @llvm.fmuladd.f32(float %137, float %248, float %322), !dbg !34
  %331 = tail call float @llvm.fmuladd.f32(float %139, float %246, float %323), !dbg !34
  %332 = tail call float @llvm.fmuladd.f32(float %139, float %248, float %324), !dbg !34
  %333 = tail call float @llvm.fmuladd.f32(float %141, float %246, float %325), !dbg !34
  %334 = tail call float @llvm.fmuladd.f32(float %141, float %248, float %326), !dbg !34
  %335 = tail call float @llvm.fmuladd.f32(float %143, float %246, float %327), !dbg !34
  %336 = tail call float @llvm.fmuladd.f32(float %143, float %248, float %328), !dbg !34
  %337 = tail call float @llvm.fmuladd.f32(float %145, float %250, float %329), !dbg !34
  %338 = tail call float @llvm.fmuladd.f32(float %145, float %252, float %330), !dbg !34
  %339 = tail call float @llvm.fmuladd.f32(float %147, float %250, float %331), !dbg !34
  %340 = tail call float @llvm.fmuladd.f32(float %147, float %252, float %332), !dbg !34
  %341 = tail call float @llvm.fmuladd.f32(float %149, float %250, float %333), !dbg !34
  %342 = tail call float @llvm.fmuladd.f32(float %149, float %252, float %334), !dbg !34
  %343 = tail call float @llvm.fmuladd.f32(float %151, float %250, float %335), !dbg !34
  %344 = tail call float @llvm.fmuladd.f32(float %151, float %252, float %336), !dbg !34
  %345 = tail call float @llvm.fmuladd.f32(float %153, float %254, float %337), !dbg !34
  %346 = tail call float @llvm.fmuladd.f32(float %153, float %256, float %338), !dbg !34
  %347 = tail call float @llvm.fmuladd.f32(float %155, float %254, float %339), !dbg !34
  %348 = tail call float @llvm.fmuladd.f32(float %155, float %256, float %340), !dbg !34
  %349 = tail call float @llvm.fmuladd.f32(float %157, float %254, float %341), !dbg !34
  %350 = tail call float @llvm.fmuladd.f32(float %157, float %256, float %342), !dbg !34
  %351 = tail call float @llvm.fmuladd.f32(float %159, float %254, float %343), !dbg !34
  %352 = tail call float @llvm.fmuladd.f32(float %159, float %256, float %344), !dbg !34
  %353 = tail call float @llvm.fmuladd.f32(float %161, float %258, float %345), !dbg !34
  %354 = tail call float @llvm.fmuladd.f32(float %161, float %260, float %346), !dbg !34
  %355 = tail call float @llvm.fmuladd.f32(float %163, float %258, float %347), !dbg !34
  %356 = tail call float @llvm.fmuladd.f32(float %163, float %260, float %348), !dbg !34
  %357 = tail call float @llvm.fmuladd.f32(float %165, float %258, float %349), !dbg !34
  %358 = tail call float @llvm.fmuladd.f32(float %165, float %260, float %350), !dbg !34
  %359 = tail call float @llvm.fmuladd.f32(float %167, float %258, float %351), !dbg !34
  %360 = tail call float @llvm.fmuladd.f32(float %167, float %260, float %352), !dbg !34
  %361 = tail call float @llvm.fmuladd.f32(float %169, float %262, float %353), !dbg !34
  %362 = tail call float @llvm.fmuladd.f32(float %169, float %264, float %354), !dbg !34
  %363 = tail call float @llvm.fmuladd.f32(float %171, float %262, float %355), !dbg !34
  %364 = tail call float @llvm.fmuladd.f32(float %171, float %264, float %356), !dbg !34
  %365 = tail call float @llvm.fmuladd.f32(float %173, float %262, float %357), !dbg !34
  %366 = tail call float @llvm.fmuladd.f32(float %173, float %264, float %358), !dbg !34
  %367 = tail call float @llvm.fmuladd.f32(float %175, float %262, float %359), !dbg !34
  %368 = tail call float @llvm.fmuladd.f32(float %175, float %264, float %360), !dbg !34
  %369 = tail call float @llvm.fmuladd.f32(float %177, float %266, float %361), !dbg !34
  %370 = tail call float @llvm.fmuladd.f32(float %177, float %268, float %362), !dbg !34
  %371 = tail call float @llvm.fmuladd.f32(float %179, float %266, float %363), !dbg !34
  %372 = tail call float @llvm.fmuladd.f32(float %179, float %268, float %364), !dbg !34
  %373 = tail call float @llvm.fmuladd.f32(float %181, float %266, float %365), !dbg !34
  %374 = tail call float @llvm.fmuladd.f32(float %181, float %268, float %366), !dbg !34
  %375 = tail call float @llvm.fmuladd.f32(float %183, float %266, float %367), !dbg !34
  %376 = tail call float @llvm.fmuladd.f32(float %183, float %268, float %368), !dbg !34
  %377 = tail call float @llvm.fmuladd.f32(float %185, float %270, float %369), !dbg !34
  %378 = tail call float @llvm.fmuladd.f32(float %185, float %272, float %370), !dbg !34
  %379 = tail call float @llvm.fmuladd.f32(float %187, float %270, float %371), !dbg !34
  %380 = tail call float @llvm.fmuladd.f32(float %187, float %272, float %372), !dbg !34
  %381 = tail call float @llvm.fmuladd.f32(float %189, float %270, float %373), !dbg !34
  %382 = tail call float @llvm.fmuladd.f32(float %189, float %272, float %374), !dbg !34
  %383 = tail call float @llvm.fmuladd.f32(float %191, float %270, float %375), !dbg !34
  %384 = tail call float @llvm.fmuladd.f32(float %191, float %272, float %376), !dbg !34
  %385 = tail call float @llvm.fmuladd.f32(float %193, float %274, float %377), !dbg !34
  %386 = tail call float @llvm.fmuladd.f32(float %193, float %276, float %378), !dbg !34
  %387 = tail call float @llvm.fmuladd.f32(float %195, float %274, float %379), !dbg !34
  %388 = tail call float @llvm.fmuladd.f32(float %195, float %276, float %380), !dbg !34
  %389 = tail call float @llvm.fmuladd.f32(float %197, float %274, float %381), !dbg !34
  %390 = tail call float @llvm.fmuladd.f32(float %197, float %276, float %382), !dbg !34
  %391 = tail call float @llvm.fmuladd.f32(float %199, float %274, float %383), !dbg !34
  %392 = tail call float @llvm.fmuladd.f32(float %199, float %276, float %384), !dbg !34
  %393 = tail call float @llvm.fmuladd.f32(float %201, float %278, float %385), !dbg !34
  %394 = tail call float @llvm.fmuladd.f32(float %201, float %280, float %386), !dbg !34
  %395 = tail call float @llvm.fmuladd.f32(float %203, float %278, float %387), !dbg !34
  %396 = tail call float @llvm.fmuladd.f32(float %203, float %280, float %388), !dbg !34
  %397 = tail call float @llvm.fmuladd.f32(float %205, float %278, float %389), !dbg !34
  %398 = tail call float @llvm.fmuladd.f32(float %205, float %280, float %390), !dbg !34
  %399 = tail call float @llvm.fmuladd.f32(float %207, float %278, float %391), !dbg !34
  %400 = tail call float @llvm.fmuladd.f32(float %207, float %280, float %392), !dbg !34
  %401 = tail call float @llvm.fmuladd.f32(float %209, float %282, float %393), !dbg !34
  %402 = tail call float @llvm.fmuladd.f32(float %209, float %284, float %394), !dbg !34
  %403 = tail call float @llvm.fmuladd.f32(float %211, float %282, float %395), !dbg !34
  %404 = tail call float @llvm.fmuladd.f32(float %211, float %284, float %396), !dbg !34
  %405 = tail call float @llvm.fmuladd.f32(float %213, float %282, float %397), !dbg !34
  %406 = tail call float @llvm.fmuladd.f32(float %213, float %284, float %398), !dbg !34
  %407 = tail call float @llvm.fmuladd.f32(float %215, float %282, float %399), !dbg !34
  %408 = tail call float @llvm.fmuladd.f32(float %215, float %284, float %400), !dbg !34
  %409 = tail call float @llvm.fmuladd.f32(float %217, float %286, float %401), !dbg !34
  %410 = tail call float @llvm.fmuladd.f32(float %217, float %288, float %402), !dbg !34
  %411 = tail call float @llvm.fmuladd.f32(float %219, float %286, float %403), !dbg !34
  %412 = tail call float @llvm.fmuladd.f32(float %219, float %288, float %404), !dbg !34
  %413 = tail call float @llvm.fmuladd.f32(float %221, float %286, float %405), !dbg !34
  %414 = tail call float @llvm.fmuladd.f32(float %221, float %288, float %406), !dbg !34
  %415 = tail call float @llvm.fmuladd.f32(float %223, float %286, float %407), !dbg !34
  %416 = tail call float @llvm.fmuladd.f32(float %223, float %288, float %408), !dbg !34
  %417 = shl i32 %10, 4, !dbg !35
  %418 = or disjoint i32 %417, %21, !dbg !36
  %419 = or disjoint i32 %417, %22, !dbg !36
  %420 = or disjoint i32 %417, %23, !dbg !36
  %421 = or disjoint i32 %417, %24, !dbg !36
  %422 = icmp slt i32 %418, 1, !dbg !37
  %423 = icmp slt i32 %419, 1, !dbg !37
  %424 = icmp slt i32 %420, 1, !dbg !37
  %425 = icmp slt i32 %421, 1, !dbg !37
  %426 = icmp slt i32 %18, 50, !dbg !38
  %427 = and i1 %426, %422, !dbg !39
  %428 = and i1 %426, %423, !dbg !39
  %429 = and i1 %426, %424, !dbg !39
  %430 = and i1 %426, %425, !dbg !39
  %431 = mul i32 %25, 50, !dbg !40
  %432 = add i32 %18, %431, !dbg !41
  %433 = sext i32 %432 to i64, !dbg !42
  %434 = getelementptr float, ptr addrspace(1) %2, i64 %433, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %435 = mul nuw nsw i32 %21, 132, !dbg !43
  %436 = add nuw nsw i32 %435, %17, !dbg !43
  %437 = zext nneg i32 %436 to i64, !dbg !43
  %438 = getelementptr float, ptr addrspace(3) @global_smem, i64 %437, !dbg !43
  %439 = insertelement <2 x float> poison, float %409, i64 0, !dbg !43
  %440 = insertelement <2 x float> %439, float %410, i64 1, !dbg !43
  store <2 x float> %440, ptr addrspace(3) %438, align 8, !dbg !43
  %441 = getelementptr i8, ptr addrspace(3) %438, i64 264, !dbg !43
  %442 = insertelement <2 x float> poison, float %411, i64 0, !dbg !43
  %443 = insertelement <2 x float> %442, float %412, i64 1, !dbg !43
  store <2 x float> %443, ptr addrspace(3) %441, align 8, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %444 = mul nuw nsw i32 %21, 66, !dbg !43
  %445 = add nuw nsw i32 %444, %17, !dbg !43
  %446 = zext nneg i32 %445 to i64, !dbg !43
  %447 = getelementptr float, ptr addrspace(3) @global_smem, i64 %446, !dbg !43
  %448 = load <2 x i32>, ptr addrspace(3) %447, align 8, !dbg !43
  %449 = getelementptr i8, ptr addrspace(3) %447, i64 1056, !dbg !43
  %450 = load <2 x i32>, ptr addrspace(3) %449, align 8, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %451 = insertelement <2 x float> poison, float %413, i64 0, !dbg !43
  %452 = insertelement <2 x float> %451, float %414, i64 1, !dbg !43
  store <2 x float> %452, ptr addrspace(3) %438, align 8, !dbg !43
  %453 = insertelement <2 x float> poison, float %415, i64 0, !dbg !43
  %454 = insertelement <2 x float> %453, float %416, i64 1, !dbg !43
  store <2 x float> %454, ptr addrspace(3) %441, align 8, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %455 = load <2 x i32>, ptr addrspace(3) %447, align 8, !dbg !43
  %456 = load <2 x i32>, ptr addrspace(3) %449, align 8, !dbg !43
  %.extract = extractelement <2 x i32> %448, i64 0, !dbg !43
  %.extract3 = extractelement <2 x i32> %448, i64 1, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract3, ptr addrspace(1) %434, i1 %427) #2, !dbg !43
  %.extract5 = extractelement <2 x i32> %450, i64 0, !dbg !43
  %.extract7 = extractelement <2 x i32> %450, i64 1, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract5, i32 %.extract7, ptr addrspace(1) %434, i1 %428) #2, !dbg !43
  %.extract9 = extractelement <2 x i32> %455, i64 0, !dbg !43
  %.extract11 = extractelement <2 x i32> %455, i64 1, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract9, i32 %.extract11, ptr addrspace(1) %434, i1 %429) #2, !dbg !43
  %.extract13 = extractelement <2 x i32> %456, i64 0, !dbg !43
  %.extract15 = extractelement <2 x i32> %456, i64 1, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract13, i32 %.extract15, ptr addrspace(1) %434, i1 %430) #2, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjkddbsvmdg6dgpspcztrp5tn5vn3pa6yujlezd3ascqftps3ixk.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/jk")
!4 = !{ptr @triton_bmm, !"kernel", i32 1}
!5 = !{ptr @triton_bmm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_bmm", linkageName: "triton_bmm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 43, column: 24, scope: !7)
!11 = !DILocation(line: 49, column: 22, scope: !7)
!12 = !DILocation(line: 50, column: 41, scope: !7)
!13 = !DILocation(line: 50, column: 30, scope: !7)
!14 = !DILocation(line: 50, column: 50, scope: !7)
!15 = !DILocation(line: 51, column: 40, scope: !7)
!16 = !DILocation(line: 51, column: 34, scope: !7)
!17 = !DILocation(line: 52, column: 30, scope: !7)
!18 = !DILocation(line: 55, column: 17, scope: !7)
!19 = !DILocation(line: 55, column: 40, scope: !7)
!20 = !DILocation(line: 55, column: 27, scope: !7)
!21 = !DILocation(line: 61, column: 52, scope: !7)
!22 = !DILocation(line: 65, column: 22, scope: !7)
!23 = !DILocation(line: 67, column: 26, scope: !7)
!24 = !DILocation(line: 68, column: 72, scope: !7)
!25 = !DILocation(line: 68, column: 66, scope: !7)
!26 = !DILocation(line: 68, column: 13, scope: !7)
!27 = !DILocation(line: 69, column: 27, scope: !7)
!28 = !DILocation(line: 69, column: 72, scope: !7)
!29 = !DILocation(line: 69, column: 39, scope: !7)
!30 = !DILocation(line: 69, column: 66, scope: !7)
!31 = !DILocation(line: 69, column: 13, scope: !7)
!32 = !DILocation(line: 74, column: 24, scope: !7)
!33 = !DILocation(line: 75, column: 24, scope: !7)
!34 = !DILocation(line: 79, column: 25, scope: !7)
!35 = !DILocation(line: 84, column: 17, scope: !7)
!36 = !DILocation(line: 84, column: 27, scope: !7)
!37 = !DILocation(line: 89, column: 20, scope: !7)
!38 = !DILocation(line: 89, column: 34, scope: !7)
!39 = !DILocation(line: 89, column: 26, scope: !7)
!40 = !DILocation(line: 93, column: 53, scope: !7)
!41 = !DILocation(line: 93, column: 50, scope: !7)
!42 = !DILocation(line: 93, column: 25, scope: !7)
!43 = !DILocation(line: 93, column: 79, scope: !7)
!44 = !DILocation(line: 93, column: 4, scope: !7)
