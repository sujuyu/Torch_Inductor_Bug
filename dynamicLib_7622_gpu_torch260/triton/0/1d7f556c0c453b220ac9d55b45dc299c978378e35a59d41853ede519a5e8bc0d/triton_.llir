; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, %3, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 31, !dbg !12
  %10 = lshr i32 %8, 5, !dbg !12
  %11 = and i32 %8, 63, !dbg !12
  %12 = icmp ult i32 %11, 50, !dbg !13
  %13 = sext i32 %6 to i64, !dbg !14
  %14 = getelementptr double, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %14, i1 %7) #3, !dbg !15
  %16 = bitcast i64 %15 to double, !dbg !15
  %17 = fcmp olt double %16, 5.000000e+01, !dbg !16
  %18 = fcmp uno double %16, 0.000000e+00, !dbg !20
  %19 = or i1 %17, %18, !dbg !21
  %20 = select i1 %19, double %16, double 5.000000e+01, !dbg !22
  %21 = uitofp nneg i32 %11 to double
  %22 = fcmp ogt double %20, %21, !dbg !23
  %23 = uitofp i1 %22 to float, !dbg !24
  %24 = and i1 %12, %7, !dbg !25
  %25 = select i1 %24, float %23, float 0.000000e+00, !dbg !26
  %26 = bitcast float %25 to i32, !dbg !27
  %27 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %26, i32 16, i32 31), !dbg !27
  %28 = bitcast i32 %27 to float, !dbg !27
  %29 = fadd float %25, %28, !dbg !31
  %30 = bitcast float %29 to i32, !dbg !27
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 8, i32 31), !dbg !27
  %32 = bitcast i32 %31 to float, !dbg !27
  %33 = fadd float %29, %32, !dbg !31
  %34 = bitcast float %33 to i32, !dbg !27
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 4, i32 31), !dbg !27
  %36 = bitcast i32 %35 to float, !dbg !27
  %37 = fadd float %33, %36, !dbg !31
  %38 = bitcast float %37 to i32, !dbg !27
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 2, i32 31), !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = fadd float %37, %40, !dbg !31
  %42 = bitcast float %41 to i32, !dbg !27
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 1, i32 31), !dbg !27
  %44 = bitcast i32 %43 to float, !dbg !27
  %45 = fadd float %41, %44, !dbg !31
  %46 = icmp eq i32 %9, 0, !dbg !27
  %47 = and i32 %10, 1, !dbg !27
  %48 = zext nneg i32 %47 to i64, !dbg !27
  %49 = getelementptr float, ptr addrspace(3) @global_smem, i64 %48, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %49, float %45, i1 %46) #3, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %50 = icmp slt i32 %8, 2, !dbg !27
  %51 = sext i32 %8 to i64, !dbg !27
  %52 = getelementptr float, ptr addrspace(3) @global_smem, i64 %51, !dbg !27
  %53 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %52, i1 %50) #3, !dbg !27
  %54 = bitcast float %53 to i32, !dbg !27
  %55 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %54, i32 1, i32 31), !dbg !27
  %56 = bitcast i32 %55 to float, !dbg !27
  %57 = fadd float %53, %56, !dbg !31
  %58 = and i32 %8, 1, !dbg !27
  %59 = icmp eq i32 %58, 0, !dbg !27
  %60 = and i1 %50, %59, !dbg !27
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %52, float %57, i1 %60) #3, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !27
  %61 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !27
  %62 = fcmp oeq float %61, 0.000000e+00, !dbg !33
  %63 = or i1 %22, %62, !dbg !34
  %64 = uitofp i1 %63 to float, !dbg !35
  %65 = select i1 %24, float %64, float 0.000000e+00, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %66 = bitcast float %65 to i32, !dbg !37
  %67 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %66, i32 16, i32 31), !dbg !37
  %68 = bitcast i32 %67 to float, !dbg !37
  %69 = fadd float %65, %68, !dbg !39
  %70 = bitcast float %69 to i32, !dbg !37
  %71 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %70, i32 8, i32 31), !dbg !37
  %72 = bitcast i32 %71 to float, !dbg !37
  %73 = fadd float %69, %72, !dbg !39
  %74 = bitcast float %73 to i32, !dbg !37
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 4, i32 31), !dbg !37
  %76 = bitcast i32 %75 to float, !dbg !37
  %77 = fadd float %73, %76, !dbg !39
  %78 = bitcast float %77 to i32, !dbg !37
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 2, i32 31), !dbg !37
  %80 = bitcast i32 %79 to float, !dbg !37
  %81 = fadd float %77, %80, !dbg !39
  %82 = bitcast float %81 to i32, !dbg !37
  %83 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 1, i32 31), !dbg !37
  %84 = bitcast i32 %83 to float, !dbg !37
  %85 = fadd float %81, %84, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %49, float %85, i1 %46) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %86 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %52, i1 %50) #3, !dbg !37
  %87 = bitcast float %86 to i32, !dbg !37
  %88 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %87, i32 1, i32 31), !dbg !37
  %89 = bitcast i32 %88 to float, !dbg !37
  %90 = fadd float %86, %89, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %52, float %90, i1 %60) #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %91 = load i32, ptr addrspace(3) @global_smem, align 16, !dbg !37
  %92 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !40
  %93 = icmp eq i32 %11, 0, !dbg !41
  %94 = bitcast float %61 to i32, !dbg !41
  %95 = and i1 %93, %7, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %94, ptr addrspace(1) %92, i1 %95) #3, !dbg !41
  %96 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %96, i1 %95) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coyjxip4s6xvtcg2t65ph3jndq756xmifu6l3oxu7y5qyksgxmln.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/oy")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 21, scope: !7)
!12 = !DILocation(line: 24, column: 34, scope: !7)
!13 = !DILocation(line: 26, column: 21, scope: !7)
!14 = !DILocation(line: 29, column: 30, scope: !7)
!15 = !DILocation(line: 29, column: 35, scope: !7)
!16 = !DILocation(line: 74, column: 15, scope: !17, inlinedAt: !19)
!17 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!18 = !DIFile(filename: "triton_helpers.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime")
!19 = !DILocation(line: 31, column: 40, scope: !7)
!20 = !DILocation(line: 76, column: 21, scope: !17, inlinedAt: !19)
!21 = !DILocation(line: 76, column: 16, scope: !17, inlinedAt: !19)
!22 = !DILocation(line: 77, column: 29, scope: !17, inlinedAt: !19)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 35, column: 19, scope: !7)
!25 = !DILocation(line: 37, column: 28, scope: !7)
!26 = !DILocation(line: 37, column: 41, scope: !7)
!27 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language")
!30 = !DILocation(line: 38, column: 25, scope: !7)
!31 = !DILocation(line: 256, column: 15, scope: !32, inlinedAt: !30)
!32 = distinct !DILexicalBlockFile(scope: !28, file: !29, discriminator: 0)
!33 = !DILocation(line: 40, column: 21, scope: !7)
!34 = !DILocation(line: 41, column: 19, scope: !7)
!35 = !DILocation(line: 42, column: 21, scope: !7)
!36 = !DILocation(line: 44, column: 43, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !28, inlinedAt: !38)
!38 = !DILocation(line: 45, column: 26, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !32, inlinedAt: !38)
!40 = !DILocation(line: 46, column: 25, scope: !7)
!41 = !DILocation(line: 46, column: 37, scope: !7)
!42 = !DILocation(line: 47, column: 25, scope: !7)
!43 = !DILocation(line: 47, column: 37, scope: !7)
!44 = !DILocation(line: 47, column: 4, scope: !7)
