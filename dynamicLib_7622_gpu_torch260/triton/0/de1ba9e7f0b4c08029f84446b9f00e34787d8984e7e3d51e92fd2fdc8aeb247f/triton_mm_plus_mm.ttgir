#blocked = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [4, 8], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [2, 2], threadsPerWarp = [2, 16], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked3 = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [16, 2], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0)
#shared = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [1, 0], hasLeadingOffset = false}>
#shared1 = #triton_gpu.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [0, 1], hasLeadingOffset = false}>
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:86", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_mm_plus_mm(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0), %arg5: i32 loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":18:0)) attributes {noinline = false} {
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst = arith.constant dense<true> : tensor<32x32xi1, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<true> : tensor<64x32xi1, #blocked1> loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x32xf32, #blocked2> loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<128> : tensor<64x1xi32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<1x32xi32, #blocked3> loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<32x32xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<32> : tensor<64x32xi32, #blocked1> loc(#loc1)
    %0 = arith.cmpi eq, %arg5, %c0_i32 : i32 loc(#loc2)
    cf.cond_br %0, ^bb1, ^bb2 loc(#loc2)
  ^bb1:  // pred: ^bb0
    tt.return loc(#loc3)
  ^bb2:  // pred: ^bb0
    %1 = tt.get_program_id x : i32 loc(#loc4)
    %2 = arith.addi %arg5, %c63_i32 : i32 loc(#loc5)
    %3 = arith.divsi %2, %c64_i32 : i32 loc(#loc6)
    %4 = arith.divsi %1, %c8_i32 : i32 loc(#loc7)
    %5 = arith.muli %4, %c8_i32 : i32 loc(#loc8)
    %6 = arith.subi %3, %5 : i32 loc(#loc9)
    %7 = arith.minsi %6, %c8_i32 : i32 loc(#loc10)
    %8 = arith.remsi %1, %7 : i32 loc(#loc11)
    %9 = arith.addi %5, %8 : i32 loc(#loc12)
    %10 = arith.remsi %1, %c8_i32 : i32 loc(#loc13)
    %11 = arith.divsi %10, %7 : i32 loc(#loc14)
    %12 = arith.muli %9, %c64_i32 : i32 loc(#loc15)
    %13 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc16)
    %14 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc16)
    %15 = tt.splat %12 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc17)
    %16 = tt.splat %12 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc17)
    %17 = arith.addi %15, %13 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc17)
    %18 = arith.addi %16, %14 : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> loc(#loc17)
    %19 = arith.muli %11, %c32_i32 : i32 loc(#loc18)
    %20 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc19)
    %21 = tt.splat %19 : i32 -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc20)
    %22 = arith.addi %21, %20 : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> loc(#loc20)
    %23 = tt.splat %arg5 : i32 -> tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc21)
    %24 = arith.remsi %17, %23 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc21)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<64x1xi32, #blocked1> loc(#loc22)
    %26 = arith.muli %25, %cst_2 : tensor<64x1xi32, #blocked1> loc(#loc23)
    %27 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc24)
    %28 = tt.expand_dims %27 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x32xi32, #blocked1> loc(#loc24)
    %29 = tt.broadcast %26 : tensor<64x1xi32, #blocked1> -> tensor<64x32xi32, #blocked1> loc(#loc25)
    %30 = tt.broadcast %28 : tensor<1x32xi32, #blocked1> -> tensor<64x32xi32, #blocked1> loc(#loc25)
    %31 = arith.addi %29, %30 : tensor<64x32xi32, #blocked1> loc(#loc25)
    %32 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x32x!tt.ptr<f32>, #blocked1> loc(#loc26)
    %33 = tt.addptr %32, %31 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc26)
    %34 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc27)
    %35 = tt.expand_dims %34 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc27)
    %36 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked> loc(#loc28)
    %37 = tt.addptr %36, %35 : tensor<32x1x!tt.ptr<f32>, #blocked>, tensor<32x1xi32, #blocked> loc(#loc28)
    %38 = tt.broadcast %37 : tensor<32x1x!tt.ptr<f32>, #blocked> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc28)
    %39 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x32x!tt.ptr<f32>, #blocked1> loc(#loc29)
    %40 = tt.addptr %39, %31 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc29)
    %41 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked> loc(#loc30)
    %42 = tt.addptr %41, %35 : tensor<32x1x!tt.ptr<f32>, #blocked>, tensor<32x1xi32, #blocked> loc(#loc30)
    %43 = tt.broadcast %42 : tensor<32x1x!tt.ptr<f32>, #blocked> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc30)
    %44 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc31)
    %45 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x32x32xf32, #shared1, mutable> loc(#loc32)
    %46 = triton_gpu.memdesc_subview %44[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc31)
    %47 = triton_gpu.async_copy_global_to_local %33, %46 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc31)
    %48 = triton_gpu.async_commit_group %47 loc(#loc31)
    %49 = triton_gpu.memdesc_subview %45[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc32)
    %50 = triton_gpu.async_copy_global_to_local %38, %49 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc32)
    %51 = triton_gpu.async_commit_group %50 loc(#loc32)
    %52 = tt.addptr %33, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc33)
    %53 = tt.addptr %38, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc34)
    %54 = triton_gpu.memdesc_subview %44[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc31)
    %55 = triton_gpu.async_copy_global_to_local %52, %54 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc31)
    %56 = triton_gpu.async_commit_group %55 loc(#loc31)
    %57 = triton_gpu.memdesc_subview %45[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc32)
    %58 = triton_gpu.async_copy_global_to_local %53, %57 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc32)
    %59 = triton_gpu.async_commit_group %58 loc(#loc32)
    %60 = tt.addptr %52, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc33)
    %61 = tt.addptr %53, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc34)
    %62 = triton_gpu.memdesc_subview %44[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc31)
    %63 = triton_gpu.async_copy_global_to_local %60, %62 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc31)
    %64 = triton_gpu.async_commit_group %63 loc(#loc31)
    %65 = triton_gpu.memdesc_subview %45[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc32)
    %66 = triton_gpu.async_copy_global_to_local %61, %65 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc32)
    %67 = triton_gpu.async_commit_group %66 loc(#loc32)
    %68 = triton_gpu.async_wait %51 {num = 4 : i32} loc(#loc31)
    %69:9 = scf.for %arg6 = %c0_i32 to %c128_i32 step %c32_i32 iter_args(%arg7 = %cst_1, %arg8 = %60, %arg9 = %61, %arg10 = %c2_i32, %arg11 = %c0_i32, %arg12 = %46, %arg13 = %49, %arg14 = %59, %arg15 = %67) -> (tensor<64x32xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x32x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x32xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token)  : i32 {
      %110 = arith.cmpi slt, %arg6, %c32_i32 : i32 loc(#loc35)
      %111 = triton_gpu.local_load %arg12 : !tt.memdesc<64x32xf32, #shared, mutable> -> tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> loc(#loc31)
      %112 = triton_gpu.local_load %arg13 : !tt.memdesc<32x32xf32, #shared1, mutable> -> tensor<32x32xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> loc(#loc32)
      %113 = tt.dot %111, %112, %arg7 : tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> * tensor<32x32xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> -> tensor<64x32xf32, #blocked2> loc(#loc36)
      %114 = tt.addptr %arg8, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc33)
      %115 = tt.addptr %arg9, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc34)
      %116 = arith.addi %arg10, %c1_i32 : i32 loc(#loc35)
      %117 = arith.cmpi slt, %116, %c3_i32 : i32 loc(#loc35)
      %118 = arith.select %117, %116, %c0_i32 : i32 loc(#loc35)
      %119 = triton_gpu.memdesc_subview %44[%118, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc31)
      %120 = tt.splat %110 : i1 -> tensor<64x32xi1, #blocked1> loc(#loc35)
      %121 = triton_gpu.async_copy_global_to_local %114, %119 mask %120 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc31)
      %122 = triton_gpu.async_commit_group %121 loc(#loc31)
      %123 = triton_gpu.memdesc_subview %45[%118, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc32)
      %124 = tt.splat %110 : i1 -> tensor<32x32xi1, #blocked> loc(#loc35)
      %125 = triton_gpu.async_copy_global_to_local %115, %123 mask %124 : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc32)
      %126 = triton_gpu.async_commit_group %125 loc(#loc32)
      %127 = arith.addi %arg11, %c1_i32 : i32 loc(#loc35)
      %128 = arith.cmpi slt, %127, %c3_i32 : i32 loc(#loc35)
      %129 = arith.select %128, %127, %c0_i32 : i32 loc(#loc35)
      %130 = triton_gpu.memdesc_subview %44[%129, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc31)
      %131 = triton_gpu.async_wait %arg14 {num = 4 : i32} loc(#loc31)
      %132 = triton_gpu.memdesc_subview %45[%129, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc32)
      scf.yield %113, %114, %115, %118, %129, %130, %132, %arg15, %126 : tensor<64x32xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x32x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x32xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token loc(#loc35)
    } loc(#loc35)
    %70 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc35)
    triton_gpu.local_dealloc %44 : !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc35)
    triton_gpu.local_dealloc %45 : !tt.memdesc<3x32x32xf32, #shared1, mutable> loc(#loc35)
    %71 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc37)
    %72 = triton_gpu.local_alloc  : () -> !tt.memdesc<3x32x32xf32, #shared1, mutable> loc(#loc38)
    %73 = triton_gpu.memdesc_subview %71[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc37)
    %74 = triton_gpu.async_copy_global_to_local %40, %73 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc37)
    %75 = triton_gpu.async_commit_group %74 loc(#loc37)
    %76 = triton_gpu.memdesc_subview %72[%c0_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc38)
    %77 = triton_gpu.async_copy_global_to_local %43, %76 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc38)
    %78 = triton_gpu.async_commit_group %77 loc(#loc38)
    %79 = tt.addptr %40, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc39)
    %80 = tt.addptr %43, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc40)
    %81 = triton_gpu.memdesc_subview %71[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc37)
    %82 = triton_gpu.async_copy_global_to_local %79, %81 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc37)
    %83 = triton_gpu.async_commit_group %82 loc(#loc37)
    %84 = triton_gpu.memdesc_subview %72[%c1_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc38)
    %85 = triton_gpu.async_copy_global_to_local %80, %84 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc38)
    %86 = triton_gpu.async_commit_group %85 loc(#loc38)
    %87 = tt.addptr %79, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc39)
    %88 = tt.addptr %80, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc40)
    %89 = triton_gpu.memdesc_subview %71[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc37)
    %90 = triton_gpu.async_copy_global_to_local %87, %89 mask %cst_0 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc37)
    %91 = triton_gpu.async_commit_group %90 loc(#loc37)
    %92 = triton_gpu.memdesc_subview %72[%c2_i32, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc38)
    %93 = triton_gpu.async_copy_global_to_local %88, %92 mask %cst : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc38)
    %94 = triton_gpu.async_commit_group %93 loc(#loc38)
    %95 = triton_gpu.async_wait %78 {num = 4 : i32} loc(#loc37)
    %96:9 = scf.for %arg6 = %c0_i32 to %c128_i32 step %c32_i32 iter_args(%arg7 = %69#0, %arg8 = %87, %arg9 = %88, %arg10 = %c2_i32, %arg11 = %c0_i32, %arg12 = %73, %arg13 = %76, %arg14 = %86, %arg15 = %94) -> (tensor<64x32xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x32x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x32xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token)  : i32 {
      %110 = arith.cmpi slt, %arg6, %c32_i32 : i32 loc(#loc41)
      %111 = triton_gpu.local_load %arg12 : !tt.memdesc<64x32xf32, #shared, mutable> -> tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> loc(#loc37)
      %112 = triton_gpu.local_load %arg13 : !tt.memdesc<32x32xf32, #shared1, mutable> -> tensor<32x32xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> loc(#loc38)
      %113 = tt.dot %111, %112, %arg7 : tensor<64x32xf32, #triton_gpu.dot_op<{opIdx = 0, parent = #blocked2}>> * tensor<32x32xf32, #triton_gpu.dot_op<{opIdx = 1, parent = #blocked2}>> -> tensor<64x32xf32, #blocked2> loc(#loc42)
      %114 = tt.addptr %arg8, %cst_5 : tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<64x32xi32, #blocked1> loc(#loc39)
      %115 = tt.addptr %arg9, %cst_4 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc40)
      %116 = arith.addi %arg10, %c1_i32 : i32 loc(#loc41)
      %117 = arith.cmpi slt, %116, %c3_i32 : i32 loc(#loc41)
      %118 = arith.select %117, %116, %c0_i32 : i32 loc(#loc41)
      %119 = triton_gpu.memdesc_subview %71[%118, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc37)
      %120 = tt.splat %110 : i1 -> tensor<64x32xi1, #blocked1> loc(#loc41)
      %121 = triton_gpu.async_copy_global_to_local %114, %119 mask %120 : tensor<64x32x!tt.ptr<f32>, #blocked1> -> <64x32xf32, #shared, mutable> loc(#loc37)
      %122 = triton_gpu.async_commit_group %121 loc(#loc37)
      %123 = triton_gpu.memdesc_subview %72[%118, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc38)
      %124 = tt.splat %110 : i1 -> tensor<32x32xi1, #blocked> loc(#loc41)
      %125 = triton_gpu.async_copy_global_to_local %115, %123 mask %124 : tensor<32x32x!tt.ptr<f32>, #blocked> -> <32x32xf32, #shared1, mutable> loc(#loc38)
      %126 = triton_gpu.async_commit_group %125 loc(#loc38)
      %127 = arith.addi %arg11, %c1_i32 : i32 loc(#loc41)
      %128 = arith.cmpi slt, %127, %c3_i32 : i32 loc(#loc41)
      %129 = arith.select %128, %127, %c0_i32 : i32 loc(#loc41)
      %130 = triton_gpu.memdesc_subview %71[%129, %c0_i32, %c0_i32] : !tt.memdesc<3x64x32xf32, #shared, mutable> -> !tt.memdesc<64x32xf32, #shared, mutable> loc(#loc37)
      %131 = triton_gpu.async_wait %arg14 {num = 4 : i32} loc(#loc37)
      %132 = triton_gpu.memdesc_subview %72[%129, %c0_i32, %c0_i32] : !tt.memdesc<3x32x32xf32, #shared1, mutable> -> !tt.memdesc<32x32xf32, #shared1, mutable> loc(#loc38)
      scf.yield %113, %114, %115, %118, %129, %130, %132, %arg15, %126 : tensor<64x32xf32, #blocked2>, tensor<64x32x!tt.ptr<f32>, #blocked1>, tensor<32x32x!tt.ptr<f32>, #blocked>, i32, i32, !tt.memdesc<64x32xf32, #shared, mutable>, !tt.memdesc<32x32xf32, #shared1, mutable>, !triton_gpu.async.token, !triton_gpu.async.token loc(#loc41)
    } loc(#loc41)
    %97 = triton_gpu.async_wait  {num = 0 : i32} loc(#loc41)
    triton_gpu.local_dealloc %71 : !tt.memdesc<3x64x32xf32, #shared, mutable> loc(#loc41)
    triton_gpu.local_dealloc %72 : !tt.memdesc<3x32x32xf32, #shared1, mutable> loc(#loc41)
    %98 = tt.expand_dims %18 {axis = 1 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 1, parent = #blocked3}>> -> tensor<64x1xi32, #blocked3> loc(#loc43)
    %99 = tt.expand_dims %22 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked3}>> -> tensor<1x32xi32, #blocked3> loc(#loc44)
    %100 = tt.splat %arg5 : i32 -> tensor<64x1xi32, #blocked3> loc(#loc45)
    %101 = arith.cmpi slt, %98, %100 : tensor<64x1xi32, #blocked3> loc(#loc45)
    %102 = arith.cmpi slt, %99, %cst_3 : tensor<1x32xi32, #blocked3> loc(#loc46)
    %103 = tt.broadcast %101 : tensor<64x1xi1, #blocked3> -> tensor<64x32xi1, #blocked3> loc(#loc47)
    %104 = tt.broadcast %102 : tensor<1x32xi1, #blocked3> -> tensor<64x32xi1, #blocked3> loc(#loc47)
    %105 = arith.andi %103, %104 : tensor<64x32xi1, #blocked3> loc(#loc47)
    %106 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>, #blocked3> loc(#loc48)
    %107 = tt.addptr %106, %98 : tensor<64x1x!tt.ptr<f32>, #blocked3>, tensor<64x1xi32, #blocked3> loc(#loc48)
    %108 = tt.broadcast %107 : tensor<64x1x!tt.ptr<f32>, #blocked3> -> tensor<64x32x!tt.ptr<f32>, #blocked3> loc(#loc48)
    %109 = triton_gpu.convert_layout %96#0 : tensor<64x32xf32, #blocked2> -> tensor<64x32xf32, #blocked3> loc(#loc49)
    tt.store %108, %109, %105 : tensor<64x32x!tt.ptr<f32>, #blocked3> loc(#loc49)
    tt.return loc(#loc50)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":35:16)
#loc3 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":37:8)
#loc4 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":49:24)
#loc5 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":50:28)
#loc6 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":50:34)
#loc7 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":55:22)
#loc8 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":56:41)
#loc9 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":56:30)
#loc10 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":56:50)
#loc11 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":57:40)
#loc12 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":57:34)
#loc13 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":58:19)
#loc14 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":58:30)
#loc15 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":60:17)
#loc16 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":60:40)
#loc17 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":60:27)
#loc18 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":61:17)
#loc19 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":61:40)
#loc20 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":61:27)
#loc21 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":65:52)
#loc22 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":76:17)
#loc23 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":76:28)
#loc24 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":76:43)
#loc25 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":76:40)
#loc26 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":76:13)
#loc27 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":77:16)
#loc28 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":77:13)
#loc29 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":78:13)
#loc30 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":79:13)
#loc31 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":85:24)
#loc32 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":86:24)
#loc33 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":91:13)
#loc34 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":92:13)
#loc35 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":82:27)
#loc36 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":90:25)
#loc37 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":98:24)
#loc38 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":99:24)
#loc39 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":104:13)
#loc40 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":105:13)
#loc41 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":94:27)
#loc42 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":103:25)
#loc43 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":108:15)
#loc44 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":109:15)
#loc45 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":110:20)
#loc46 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":110:34)
#loc47 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":110:26)
#loc48 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":114:25)
#loc49 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":114:66)
#loc50 = loc("/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/mt/cmtmxqb26gqdd3cvlf4kox2vb2oqmxhzt4tguwpt3ih7p2gbprw4.py":114:4)
