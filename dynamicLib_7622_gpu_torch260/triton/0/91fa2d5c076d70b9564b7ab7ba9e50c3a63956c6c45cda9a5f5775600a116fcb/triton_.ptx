//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u32 triton__param_6,
	.param .u32 triton__param_7
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b32 	%r<220>;
	.reg .f32 	%f<89>;
	.reg .b64 	%rd<56>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd31, [triton__param_0];
	ld.param.u64 	%rd32, [triton__param_1];
$L__tmp0:
	.loc	1 20 29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	ld.param.u64 	%rd33, [triton__param_2];
	.loc	1 20 48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	ld.param.u64 	%rd34, [triton__param_3];
	.loc	1 20 69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	ld.param.u64 	%rd35, [triton__param_4];
	.loc	1 20 34
	mad.lo.s32 	%r77, %r3, %r2, %r1;
	ld.param.u64 	%rd36, [triton__param_5];
	.loc	1 20 75
	shl.b32 	%r78, %r77, 10;
	ld.param.u32 	%r79, [triton__param_6];
	.loc	1 21 44
	mov.u32 	%r80, %tid.x;
	shl.b32 	%r81, %r80, 2;
	and.b32  	%r82, %r81, 508;
	and.b32  	%r83, %r80, 127;
	or.b32  	%r84, %r83, 128;
	or.b32  	%r85, %r83, 256;
	or.b32  	%r86, %r83, 384;
	.loc	1 21 23
	or.b32  	%r87, %r78, %r82;
	or.b32  	%r88, %r87, 512;
	or.b32  	%r89, %r78, %r83;
	or.b32  	%r90, %r78, %r84;
	or.b32  	%r91, %r78, %r85;
	or.b32  	%r92, %r78, %r86;
	or.b32  	%r93, %r89, 512;
	or.b32  	%r94, %r89, 640;
	or.b32  	%r95, %r89, 768;
	or.b32  	%r96, %r89, 896;
	.loc	1 22 21
	setp.lt.s32 	%p19, %r87, %r79;
	setp.lt.s32 	%p20, %r88, %r79;
	setp.lt.s32 	%p31, %r89, %r79;
	setp.lt.s32 	%p32, %r90, %r79;
	setp.lt.s32 	%p33, %r91, %r79;
	setp.lt.s32 	%p34, %r92, %r79;
	setp.lt.s32 	%p35, %r93, %r79;
	setp.lt.s32 	%p36, %r94, %r79;
	setp.lt.s32 	%p37, %r95, %r79;
	setp.lt.s32 	%p38, %r96, %r79;
	.loc	1 23 28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 25 21
	setp.lt.s32 	%p39, %r4, 50;
	.loc	1 27 20
	shr.s32 	%r98, %r87, 31;
	shr.u32 	%r99, %r98, 25;
	add.s32 	%r100, %r87, %r99;
	shr.s32 	%r101, %r100, 7;
	bfe.s32 	%r102, %r77, 21, 1;
	shr.u32 	%r103, %r102, 25;
	add.s32 	%r104, %r88, %r103;
	shr.s32 	%r105, %r104, 7;
	add.s32 	%r106, %r89, %r103;
	shr.s32 	%r107, %r106, 7;
	add.s32 	%r108, %r90, %r103;
	shr.s32 	%r109, %r108, 7;
	add.s32 	%r110, %r91, %r103;
	shr.s32 	%r111, %r110, 7;
	add.s32 	%r112, %r92, %r103;
	shr.s32 	%r113, %r112, 7;
	add.s32 	%r114, %r93, %r103;
	shr.s32 	%r115, %r114, 7;
	add.s32 	%r116, %r94, %r103;
	shr.s32 	%r117, %r116, 7;
	add.s32 	%r118, %r95, %r103;
	shr.s32 	%r119, %r118, 7;
	add.s32 	%r120, %r96, %r103;
	shr.s32 	%r121, %r120, 7;
	and.b32  	%r122, %r100, -128;
	sub.s32 	%r123, %r87, %r122;
	.loc	1 30 18
	shr.u32 	%r124, %r102, 28;
	.loc	1 29 20
	add.s32 	%r125, %r89, %r124;
	shr.s32 	%r126, %r125, 4;
	add.s32 	%r127, %r90, %r124;
	shr.s32 	%r128, %r127, 4;
	add.s32 	%r129, %r91, %r124;
	shr.s32 	%r130, %r129, 4;
	add.s32 	%r131, %r92, %r124;
	shr.s32 	%r132, %r131, 4;
	add.s32 	%r133, %r93, %r124;
	shr.s32 	%r134, %r133, 4;
	add.s32 	%r135, %r94, %r124;
	shr.s32 	%r136, %r135, 4;
	add.s32 	%r137, %r95, %r124;
	shr.s32 	%r138, %r137, 4;
	add.s32 	%r139, %r96, %r124;
	shr.s32 	%r140, %r139, 4;
	.loc	1 29 26
	shr.u32 	%r141, %r126, 29;
	add.s32 	%r142, %r126, %r141;
	and.b32  	%r143, %r142, -40;
	sub.s32 	%r144, %r126, %r143;
	shr.u32 	%r145, %r128, 29;
	add.s32 	%r146, %r128, %r145;
	and.b32  	%r147, %r146, -8;
	sub.s32 	%r148, %r128, %r147;
	shr.u32 	%r149, %r130, 29;
	add.s32 	%r150, %r130, %r149;
	and.b32  	%r151, %r150, -8;
	sub.s32 	%r152, %r130, %r151;
	shr.u32 	%r153, %r132, 29;
	add.s32 	%r154, %r132, %r153;
	and.b32  	%r155, %r154, -8;
	sub.s32 	%r156, %r132, %r155;
	shr.u32 	%r157, %r134, 29;
	add.s32 	%r158, %r134, %r157;
	and.b32  	%r159, %r158, -8;
	sub.s32 	%r160, %r134, %r159;
	shr.u32 	%r161, %r136, 29;
	add.s32 	%r162, %r136, %r161;
	and.b32  	%r163, %r162, -8;
	sub.s32 	%r164, %r136, %r163;
	shr.u32 	%r165, %r138, 29;
	add.s32 	%r166, %r138, %r165;
	and.b32  	%r167, %r166, -8;
	sub.s32 	%r168, %r138, %r167;
	shr.u32 	%r169, %r140, 29;
	add.s32 	%r170, %r140, %r169;
	and.b32  	%r171, %r170, -8;
	sub.s32 	%r172, %r140, %r171;
	.loc	1 30 18
	add.s32 	%r173, %r87, %r124;
	and.b32  	%r174, %r173, -16;
	sub.s32 	%r175, %r87, %r174;
	.loc	1 32 40
	shl.b32 	%r176, %r4, 7;
	.loc	1 32 36
	add.s32 	%r177, %r123, %r176;
	.loc	1 32 47
	mad.lo.s32 	%r178, %r101, 6400, %r177;
	mad.lo.s32 	%r179, %r105, 6400, %r177;
	.loc	1 32 30
	mul.wide.s32 	%rd37, %r178, 4;
	add.s64 	%rd1, %rd31, %rd37;
	mul.wide.s32 	%rd38, %r179, 4;
	add.s64 	%rd2, %rd31, %rd38;
	.loc	1 32 66
	and.pred  	%p1, %p39, %p19;
	and.pred  	%p2, %p20, %p39;
	and.pred  	%p3, %p39, %p31;
	and.pred  	%p4, %p39, %p32;
	and.pred  	%p5, %p39, %p33;
	and.pred  	%p6, %p39, %p34;
	and.pred  	%p7, %p35, %p39;
	and.pred  	%p8, %p36, %p39;
	and.pred  	%p9, %p37, %p39;
	and.pred  	%p10, %p38, %p39;
	.loc	1 32 58
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r180, %r83, 3;
	shl.b32 	%r181, %r83, 5;
	mov.u32 	%r182, global_smem;
	add.s32 	%r183, %r182, %r181;
	st.shared.u32 	[%r183], %r5;
	st.shared.u32 	[%r183+8], %r6;
	st.shared.u32 	[%r183+16], %r7;
	st.shared.u32 	[%r183+24], %r8;
	bar.sync 	0;
	add.s32 	%r184, %r182, %r180;
	ld.shared.f32 	%f1, [%r184];
	shl.b32 	%r185, %r84, 3;
	add.s32 	%r186, %r182, %r185;
	ld.shared.f32 	%f2, [%r186];
	shl.b32 	%r187, %r85, 3;
	add.s32 	%r188, %r182, %r187;
	ld.shared.f32 	%f3, [%r188];
	shl.b32 	%r189, %r86, 3;
	add.s32 	%r190, %r182, %r189;
	ld.shared.f32 	%f4, [%r190];
	bar.sync 	0;
	st.shared.u32 	[%r183], %r9;
	st.shared.u32 	[%r183+8], %r10;
	st.shared.u32 	[%r183+16], %r11;
	st.shared.u32 	[%r183+24], %r12;
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r184];
	ld.shared.f32 	%f6, [%r186];
	ld.shared.f32 	%f7, [%r188];
	ld.shared.f32 	%f8, [%r190];
	.loc	1 33 38
	shl.b32 	%r191, %r4, 3;
	.loc	1 33 36
	add.s32 	%r192, %r144, %r191;
	add.s32 	%r193, %r148, %r191;
	add.s32 	%r194, %r152, %r191;
	add.s32 	%r195, %r156, %r191;
	.loc	1 33 45
	mad.lo.s32 	%r196, %r107, 400, %r192;
	mad.lo.s32 	%r197, %r109, 400, %r193;
	mad.lo.s32 	%r198, %r111, 400, %r194;
	mad.lo.s32 	%r199, %r113, 400, %r195;
	.loc	1 33 36
	mad.lo.s32 	%r200, %r115, 400, %r160;
	.loc	1 33 45
	add.s32 	%r201, %r200, %r191;
	.loc	1 33 36
	mad.lo.s32 	%r202, %r117, 400, %r164;
	.loc	1 33 45
	add.s32 	%r203, %r202, %r191;
	.loc	1 33 36
	mad.lo.s32 	%r204, %r119, 400, %r168;
	.loc	1 33 45
	add.s32 	%r205, %r204, %r191;
	.loc	1 33 36
	mad.lo.s32 	%r206, %r121, 400, %r172;
	.loc	1 33 45
	add.s32 	%r207, %r206, %r191;
	.loc	1 33 30
	mul.wide.s32 	%rd39, %r196, 4;
	add.s64 	%rd3, %rd32, %rd39;
	mul.wide.s32 	%rd40, %r197, 4;
	add.s64 	%rd4, %rd32, %rd40;
	mul.wide.s32 	%rd41, %r198, 4;
	add.s64 	%rd5, %rd32, %rd41;
	mul.wide.s32 	%rd42, %r199, 4;
	add.s64 	%rd6, %rd32, %rd42;
	mul.wide.s32 	%rd43, %r201, 4;
	add.s64 	%rd7, %rd32, %rd43;
	mul.wide.s32 	%rd44, %r203, 4;
	add.s64 	%rd8, %rd32, %rd44;
	mul.wide.s32 	%rd45, %r205, 4;
	add.s64 	%rd9, %rd32, %rd45;
	mul.wide.s32 	%rd46, %r207, 4;
	add.s64 	%rd10, %rd32, %rd46;
	.loc	1 33 55
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r15 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r18 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r19 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 30
	add.s64 	%rd11, %rd33, %rd39;
	add.s64 	%rd12, %rd33, %rd40;
	add.s64 	%rd13, %rd33, %rd41;
	add.s64 	%rd14, %rd33, %rd42;
	add.s64 	%rd15, %rd33, %rd43;
	add.s64 	%rd16, %rd33, %rd44;
	add.s64 	%rd17, %rd33, %rd45;
	add.s64 	%rd18, %rd33, %rd46;
	.loc	1 34 55
	// begin inline asm
	mov.u32 %r46, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r46 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r49 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r52 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r55 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r58, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r58 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r61 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r64 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r67, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r67 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 35 31
	mul.wide.s32 	%rd47, %r175, 4;
	add.s64 	%rd19, %rd34, %rd47;
	.loc	1 35 36
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p19 ld.global.L1::evict_last.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p20 ld.global.L1::evict_last.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 36 31
	add.s64 	%rd21, %rd35, %rd47;
	.loc	1 36 36
	// begin inline asm
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	@%p19 ld.global.L1::evict_last.v4.b32 { %r37, %r38, %r39, %r40 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p20 ld.global.L1::evict_last.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%r47, 1098907648;
	.loc	1 39 18
	// begin inline asm
	div.full.f32 %r45, %r46, %r47;
	// end inline asm
	mov.b32 	%f9, %r45;
	// begin inline asm
	div.full.f32 %r48, %r49, %r47;
	// end inline asm
	mov.b32 	%f10, %r48;
	// begin inline asm
	div.full.f32 %r51, %r52, %r47;
	// end inline asm
	mov.b32 	%f11, %r51;
	// begin inline asm
	div.full.f32 %r54, %r55, %r47;
	// end inline asm
	mov.b32 	%f12, %r54;
	// begin inline asm
	div.full.f32 %r57, %r58, %r47;
	// end inline asm
	mov.b32 	%f13, %r57;
	// begin inline asm
	div.full.f32 %r60, %r61, %r47;
	// end inline asm
	mov.b32 	%f14, %r60;
	// begin inline asm
	div.full.f32 %r63, %r64, %r47;
	// end inline asm
	mov.b32 	%f15, %r63;
	// begin inline asm
	div.full.f32 %r66, %r67, %r47;
	// end inline asm
	mov.b32 	%f16, %r66;
	.loc	1 41 18
	add.f32 	%f17, %f9, 0f3727C5AC;
	add.f32 	%f18, %f10, 0f3727C5AC;
	add.f32 	%f19, %f11, 0f3727C5AC;
	add.f32 	%f20, %f12, 0f3727C5AC;
	add.f32 	%f21, %f13, 0f3727C5AC;
	add.f32 	%f22, %f14, 0f3727C5AC;
	add.f32 	%f23, %f15, 0f3727C5AC;
	add.f32 	%f24, %f16, 0f3727C5AC;
	.loc	1 42 27
	rsqrt.approx.ftz.f32 	%f25, %f17;
	rsqrt.approx.ftz.f32 	%f26, %f18;
	rsqrt.approx.ftz.f32 	%f27, %f19;
	rsqrt.approx.ftz.f32 	%f28, %f20;
	rsqrt.approx.ftz.f32 	%f29, %f21;
	rsqrt.approx.ftz.f32 	%f30, %f22;
	rsqrt.approx.ftz.f32 	%f31, %f23;
	rsqrt.approx.ftz.f32 	%f32, %f24;
	.loc	1 33 55
	mov.b32 	%f33, %r20;
	.loc	1 37 18
	sub.f32 	%f34, %f8, %f33;
	.loc	1 33 55
	mov.b32 	%f35, %r19;
	.loc	1 37 18
	sub.f32 	%f36, %f7, %f35;
	.loc	1 33 55
	mov.b32 	%f37, %r18;
	.loc	1 37 18
	sub.f32 	%f38, %f6, %f37;
	.loc	1 33 55
	mov.b32 	%f39, %r17;
	.loc	1 37 18
	sub.f32 	%f40, %f5, %f39;
	.loc	1 33 55
	mov.b32 	%f41, %r16;
	.loc	1 37 18
	sub.f32 	%f42, %f4, %f41;
	.loc	1 33 55
	mov.b32 	%f43, %r15;
	.loc	1 37 18
	sub.f32 	%f44, %f3, %f43;
	.loc	1 33 55
	mov.b32 	%f45, %r14;
	.loc	1 37 18
	sub.f32 	%f46, %f2, %f45;
	.loc	1 33 55
	mov.b32 	%f47, %r13;
	.loc	1 37 18
	sub.f32 	%f48, %f1, %f47;
	.loc	1 36 36
	mov.b32 	%f49, %r44;
	mov.b32 	%f50, %r43;
	mov.b32 	%f51, %r42;
	mov.b32 	%f52, %r41;
	mov.b32 	%f53, %r40;
	mov.b32 	%f54, %r39;
	mov.b32 	%f55, %r38;
	mov.b32 	%f56, %r37;
	.loc	1 35 36
	mov.b32 	%f57, %r36;
	mov.b32 	%f58, %r35;
	mov.b32 	%f59, %r34;
	mov.b32 	%f60, %r33;
	mov.b32 	%f61, %r32;
	mov.b32 	%f62, %r31;
	mov.b32 	%f63, %r30;
	mov.b32 	%f64, %r29;
	.loc	1 32 58
	shl.b32 	%r208, %r83, 2;
	.loc	1 43 18
	mul.f32 	%f65, %f48, %f25;
	mul.f32 	%f66, %f46, %f26;
	mul.f32 	%f67, %f44, %f27;
	mul.f32 	%f68, %f42, %f28;
	mul.f32 	%f69, %f40, %f29;
	mul.f32 	%f70, %f38, %f30;
	mul.f32 	%f71, %f36, %f31;
	mul.f32 	%f72, %f34, %f32;
	bar.sync 	0;
	add.s32 	%r209, %r182, %r208;
	st.shared.f32 	[%r209], %f65;
	st.shared.f32 	[%r209+512], %f66;
	st.shared.f32 	[%r209+1024], %f67;
	st.shared.f32 	[%r209+1536], %f68;
	bar.sync 	0;
	shl.b32 	%r210, %r83, 4;
	add.s32 	%r211, %r182, %r210;
	ld.shared.v4.f32 	{%f73, %f74, %f75, %f76}, [%r211];
	bar.sync 	0;
	st.shared.f32 	[%r209], %f69;
	st.shared.f32 	[%r209+512], %f70;
	st.shared.f32 	[%r209+1024], %f71;
	st.shared.f32 	[%r209+1536], %f72;
	bar.sync 	0;
	ld.shared.v4.f32 	{%f77, %f78, %f79, %f80}, [%r211];
	.loc	1 45 20
	fma.rn.f32 	%f81, %f73, %f64, %f56;
	fma.rn.f32 	%f82, %f74, %f63, %f55;
	fma.rn.f32 	%f83, %f75, %f62, %f54;
	fma.rn.f32 	%f84, %f76, %f61, %f53;
	fma.rn.f32 	%f85, %f77, %f60, %f52;
	fma.rn.f32 	%f86, %f78, %f59, %f51;
	fma.rn.f32 	%f87, %f79, %f58, %f50;
	fma.rn.f32 	%f88, %f80, %f57, %f49;
	.loc	1 46 31
	mad.lo.s32 	%r212, %r89, 50, %r4;
	mad.lo.s32 	%r213, %r90, 50, %r4;
	mad.lo.s32 	%r214, %r91, 50, %r4;
	mad.lo.s32 	%r215, %r92, 50, %r4;
	add.s32 	%r216, %r212, 25600;
	add.s32 	%r217, %r212, 32000;
	add.s32 	%r218, %r212, 38400;
	add.s32 	%r219, %r212, 44800;
	.loc	1 46 25
	mul.wide.s32 	%rd48, %r212, 4;
	add.s64 	%rd23, %rd36, %rd48;
	mul.wide.s32 	%rd49, %r213, 4;
	add.s64 	%rd24, %rd36, %rd49;
	mul.wide.s32 	%rd50, %r214, 4;
	add.s64 	%rd25, %rd36, %rd50;
	mul.wide.s32 	%rd51, %r215, 4;
	add.s64 	%rd26, %rd36, %rd51;
	mul.wide.s32 	%rd52, %r216, 4;
	add.s64 	%rd27, %rd36, %rd52;
	mul.wide.s32 	%rd53, %r217, 4;
	add.s64 	%rd28, %rd36, %rd53;
	mul.wide.s32 	%rd54, %r218, 4;
	add.s64 	%rd29, %rd36, %rd54;
	mul.wide.s32 	%rd55, %r219, 4;
	add.s64 	%rd30, %rd36, %rd55;
	.loc	1 46 47
	bar.sync 	0;
	st.shared.f32 	[%r183], %f81;
	st.shared.f32 	[%r183+8], %f82;
	st.shared.f32 	[%r183+16], %f83;
	st.shared.f32 	[%r183+24], %f84;
	bar.sync 	0;
	ld.shared.u32 	%r69, [%r184];
	ld.shared.u32 	%r70, [%r186];
	ld.shared.u32 	%r71, [%r188];
	ld.shared.u32 	%r72, [%r190];
	bar.sync 	0;
	st.shared.f32 	[%r183], %f85;
	st.shared.f32 	[%r183+8], %f86;
	st.shared.f32 	[%r183+16], %f87;
	st.shared.f32 	[%r183+24], %f88;
	bar.sync 	0;
	ld.shared.u32 	%r73, [%r184];
	ld.shared.u32 	%r74, [%r186];
	ld.shared.u32 	%r75, [%r188];
	ld.shared.u32 	%r76, [%r190];
	// begin inline asm
	@%p3 st.global.b32 [ %rd23 + 0 ], { %r69 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.b32 [ %rd24 + 0 ], { %r70 };
	// end inline asm
	// begin inline asm
	@%p5 st.global.b32 [ %rd25 + 0 ], { %r71 };
	// end inline asm
	// begin inline asm
	@%p6 st.global.b32 [ %rd26 + 0 ], { %r72 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.b32 [ %rd27 + 0 ], { %r73 };
	// end inline asm
	// begin inline asm
	@%p8 st.global.b32 [ %rd28 + 0 ], { %r74 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.b32 [ %rd29 + 0 ], { %r75 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.b32 [ %rd30 + 0 ], { %r76 };
	// end inline asm
	.loc	1 46 4
	ret;
$L__tmp1:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ak/cak5b7ifbyysgpn6c4plcw4cu6dwygnrwa7semwtfe7p7vo3ijno.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 0
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 176
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 97
.b8 107
.b8 53
.b8 98
.b8 55
.b8 105
.b8 102
.b8 98
.b8 121
.b8 121
.b8 115
.b8 103
.b8 112
.b8 110
.b8 54
.b8 99
.b8 52
.b8 112
.b8 108
.b8 99
.b8 119
.b8 52
.b8 99
.b8 117
.b8 54
.b8 100
.b8 119
.b8 121
.b8 103
.b8 110
.b8 114
.b8 119
.b8 97
.b8 55
.b8 115
.b8 101
.b8 109
.b8 119
.b8 116
.b8 102
.b8 101
.b8 55
.b8 112
.b8 55
.b8 118
.b8 111
.b8 51
.b8 105
.b8 106
.b8 110
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 97
.b8 107
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
	}
	.section	.debug_loc	{	}
