//
// Generated by LLVM NVPTX Back-End
//

.version 8.3
.target sm_86
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u32 triton__param_3,
	.param .u32 triton__param_4
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<10>;
	.reg .f64 	%fd<11>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd5, [triton__param_0];
	ld.param.u64 	%rd6, [triton__param_1];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33
	shl.b32 	%r16, %r1, 5;
	ld.param.u64 	%rd7, [triton__param_2];
	ld.param.u32 	%r17, [triton__param_3];
	.loc	1 22 44
	mov.u32 	%r18, %tid.x;
	and.b32  	%r19, %r18, 31;
	.loc	1 22 23
	or.b32  	%r20, %r16, %r19;
	.loc	1 23 21
	setp.lt.s32 	%p1, %r20, %r17;
	.loc	1 24 34
	bfe.u32 	%r21, %r18, 5, 3;
	or.b32  	%r22, %r21, 8;
	or.b32  	%r23, %r21, 48;
	.loc	1 26 21
	setp.lt.u32 	%p10, %r23, 50;
	.loc	1 29 30
	mul.wide.s32 	%rd8, %r20, 8;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 29 35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b64 	%fd1, %rd1;
$L__tmp1:
	.loc	2 74 15
	setp.lt.f64 	%p11, %fd1, 0d4049000000000000;
	.loc	2 76 21
	setp.nan.f64 	%p12, %fd1, %fd1;
	.loc	2 77 29
	selp.f64 	%fd2, %fd1, 0d4049000000000000, %p12;
	selp.f64 	%fd3, %fd1, %fd2, %p11;
	cvt.rn.f64.u32 	%fd4, %r21;
	cvt.rn.f64.u32 	%fd5, %r22;
	cvt.rn.f64.u32 	%fd6, %r23;
$L__tmp2:
	.loc	1 34 18
	setp.gt.f64 	%p13, %fd3, %fd4;
	setp.gt.f64 	%p14, %fd3, %fd5;
	.loc	1 24 34
	or.b32  	%r24, %r21, 40;
	or.b32  	%r25, %r21, 32;
	or.b32  	%r26, %r21, 24;
	or.b32  	%r27, %r21, 16;
	cvt.rn.f64.u32 	%fd7, %r27;
	cvt.rn.f64.u32 	%fd8, %r26;
	cvt.rn.f64.u32 	%fd9, %r25;
	cvt.rn.f64.u32 	%fd10, %r24;
	.loc	1 34 18
	setp.gt.f64 	%p15, %fd3, %fd10;
	setp.gt.f64 	%p16, %fd3, %fd9;
	setp.gt.f64 	%p17, %fd3, %fd8;
	setp.gt.f64 	%p18, %fd3, %fd7;
	setp.gt.f64 	%p19, %fd3, %fd6;
	.loc	1 35 19
	selp.f32 	%f1, 0f3F800000, 0f00000000, %p13;
	selp.f32 	%f2, 0f3F800000, 0f00000000, %p14;
	selp.f32 	%f3, 0f3F800000, 0f00000000, %p18;
	selp.f32 	%f4, 0f3F800000, 0f00000000, %p17;
	selp.f32 	%f5, 0f3F800000, 0f00000000, %p16;
	selp.f32 	%f6, 0f3F800000, 0f00000000, %p15;
	selp.f32 	%f7, 0f3F800000, 0f00000000, %p19;
	.loc	1 37 28
	and.pred  	%p20, %p10, %p1;
	.loc	1 37 41
	selp.f32 	%f8, %f7, 0f00000000, %p20;
$L__tmp3:
	.loc	3 256 15
	add.f32 	%f9, %f1, %f2;
	add.f32 	%f10, %f9, %f3;
	add.f32 	%f11, %f10, %f4;
	add.f32 	%f12, %f11, %f5;
	add.f32 	%f13, %f12, %f6;
	selp.f32 	%f14, %f13, 0f00000000, %p1;
	add.f32 	%f15, %f8, %f14;
	.loc	3 267 36
	shl.b32 	%r28, %r21, 2;
	shl.b32 	%r29, %r19, 5;
	or.b32  	%r30, %r29, %r28;
	mov.u32 	%r31, global_smem;
	add.s32 	%r2, %r31, %r30;
	mov.b32 	%r3, %f15;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r2 + 0 ], %r3;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p3, %r18, 256;
	shl.b32 	%r32, %r18, 2;
	add.s32 	%r5, %r31, %r32;
	// begin inline asm
	@%p3 ld.shared.b32 %r4, [ %r5 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r4;
	shfl.sync.bfly.b32	%r33, %r4, 4, 31, -1;
	mov.b32 	%f17, %r33;
	.loc	3 256 15
	add.f32 	%f18, %f16, %f17;
	.loc	3 267 36
	mov.b32 	%r34, %f18;
	shfl.sync.bfly.b32	%r35, %r34, 2, 31, -1;
	mov.b32 	%f19, %r35;
	.loc	3 256 15
	add.f32 	%f20, %f18, %f19;
	.loc	3 267 36
	mov.b32 	%r36, %f20;
	shfl.sync.bfly.b32	%r37, %r36, 1, 31, -1;
	mov.b32 	%f21, %r37;
	.loc	3 256 15
	add.f32 	%f22, %f20, %f21;
	.loc	3 267 36
	and.b32  	%r38, %r18, 7;
	setp.eq.s32 	%p21, %r38, 0;
	and.pred  	%p4, %p3, %p21;
	mov.b32 	%r7, %f22;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r7;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r39, %r31, %r29;
	ld.shared.f32 	%f23, [%r39];
$L__tmp4:
	.loc	1 40 21
	setp.eq.f32 	%p22, %f23, 0f00000000;
	.loc	1 41 19
	or.pred  	%p23, %p13, %p22;
	or.pred  	%p24, %p14, %p22;
	or.pred  	%p25, %p18, %p22;
	or.pred  	%p26, %p17, %p22;
	or.pred  	%p27, %p16, %p22;
	or.pred  	%p28, %p15, %p22;
	or.pred  	%p29, %p19, %p22;
	.loc	1 42 21
	selp.u32 	%r40, 1, 0, %p23;
	cvt.rn.f32.u32 	%f24, %r40;
	selp.u32 	%r41, 1, 0, %p24;
	cvt.rn.f32.u32 	%f25, %r41;
	selp.u32 	%r42, 1, 0, %p25;
	cvt.rn.f32.u32 	%f26, %r42;
	selp.u32 	%r43, 1, 0, %p26;
	cvt.rn.f32.u32 	%f27, %r43;
	selp.u32 	%r44, 1, 0, %p27;
	cvt.rn.f32.u32 	%f28, %r44;
	selp.u32 	%r45, 1, 0, %p28;
	cvt.rn.f32.u32 	%f29, %r45;
	selp.u32 	%r46, 1, 0, %p29;
	cvt.rn.f32.u32 	%f30, %r46;
	.loc	1 44 43
	selp.f32 	%f31, %f30, 0f00000000, %p20;
$L__tmp5:
	.loc	3 267 36
	bar.sync 	0;
	.loc	3 256 15
	add.f32 	%f32, %f24, %f25;
	add.f32 	%f33, %f32, %f26;
	add.f32 	%f34, %f33, %f27;
	add.f32 	%f35, %f34, %f28;
	add.f32 	%f36, %f35, %f29;
	selp.f32 	%f37, %f36, 0f00000000, %p1;
	add.f32 	%f38, %f31, %f37;
	.loc	3 267 36
	mov.b32 	%r9, %f38;
	// begin inline asm
	@%p2 st.shared.b32 [ %r2 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p3 ld.shared.b32 %r10, [ %r5 + 0 ];
	// end inline asm
	mov.b32 	%f39, %r10;
	shfl.sync.bfly.b32	%r47, %r10, 4, 31, -1;
	mov.b32 	%f40, %r47;
	.loc	3 256 15
	add.f32 	%f41, %f39, %f40;
	.loc	3 267 36
	mov.b32 	%r48, %f41;
	shfl.sync.bfly.b32	%r49, %r48, 2, 31, -1;
	mov.b32 	%f42, %r49;
	.loc	3 256 15
	add.f32 	%f43, %f41, %f42;
	.loc	3 267 36
	mov.b32 	%r50, %f43;
	shfl.sync.bfly.b32	%r51, %r50, 1, 31, -1;
	mov.b32 	%f44, %r51;
	.loc	3 256 15
	add.f32 	%f45, %f43, %f44;
	.loc	3 267 36
	mov.b32 	%r13, %f45;
	// begin inline asm
	@%p4 st.shared.b32 [ %r5 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r15, [%r39];
$L__tmp6:
	.loc	1 46 25
	mul.wide.s32 	%rd9, %r20, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 46 37
	setp.eq.s32 	%p30, %r21, 0;
	mov.b32 	%r14, %f23;
	and.pred  	%p8, %p30, %p1;
	// begin inline asm
	@%p8 st.global.b32 [ %rd3 + 0 ], { %r14 };
	// end inline asm
	.loc	1 47 25
	add.s64 	%rd4, %rd7, %rd9;
	.loc	1 47 37
	// begin inline asm
	@%p8 st.global.b32 [ %rd4 + 0 ], { %r15 };
	// end inline asm
	.loc	1 47 4
	ret;
$L__tmp7:
$L__func_end0:

}
	.file	1 "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/oy/coyjxip4s6xvtcg2t65ph3jndq756xmifu6l3oxu7y5qyksgxmln.py"
	.file	2 "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 281
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 111
.b8 121
.b8 106
.b8 120
.b8 105
.b8 112
.b8 52
.b8 115
.b8 54
.b8 120
.b8 118
.b8 116
.b8 99
.b8 103
.b8 50
.b8 116
.b8 54
.b8 53
.b8 112
.b8 104
.b8 51
.b8 106
.b8 110
.b8 100
.b8 113
.b8 55
.b8 53
.b8 54
.b8 120
.b8 109
.b8 105
.b8 102
.b8 117
.b8 54
.b8 108
.b8 51
.b8 111
.b8 120
.b8 117
.b8 55
.b8 121
.b8 53
.b8 113
.b8 121
.b8 107
.b8 115
.b8 103
.b8 120
.b8 109
.b8 108
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 97
.b8 100
.b8 109
.b8 105
.b8 110
.b8 47
.b8 122
.b8 121
.b8 52
.b8 50
.b8 57
.b8 55
.b8 56
.b8 50
.b8 47
.b8 102
.b8 120
.b8 95
.b8 101
.b8 120
.b8 112
.b8 101
.b8 114
.b8 105
.b8 109
.b8 101
.b8 110
.b8 116
.b8 115
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 95
.b8 97
.b8 111
.b8 116
.b8 95
.b8 116
.b8 111
.b8 111
.b8 108
.b8 47
.b8 100
.b8 121
.b8 110
.b8 97
.b8 109
.b8 105
.b8 99
.b8 76
.b8 105
.b8 98
.b8 95
.b8 55
.b8 54
.b8 50
.b8 50
.b8 95
.b8 103
.b8 112
.b8 117
.b8 95
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 50
.b8 54
.b8 48
.b8 47
.b8 111
.b8 121
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 180
.b8 4
.b32 180
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 31
.b8 40
.b8 4
.b32 180
.b64 $L__tmp3
.b64 $L__tmp4
.b8 1
.b8 38
.b8 25
.b8 4
.b32 180
.b64 $L__tmp5
.b64 $L__tmp6
.b8 1
.b8 45
.b8 26
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
