; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %.mask = and i32 %4, 33554431, !dbg !10
  %6 = icmp eq i32 %.mask, 0, !dbg !10
  br i1 %6, label %common.ret, label %7, !dbg !10

common.ret:                                       ; preds = %5, %920
  ret void, !dbg !11

7:                                                ; preds = %5
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %9 = add i32 %4, 63, !dbg !13
  %10 = sdiv i32 %9, 64, !dbg !14
  %.frozen = freeze i32 %8
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = shl nsw i32 %11, 3, !dbg !16
  %13 = sub nsw i32 %10, %12, !dbg !17
  %14 = tail call i32 @llvm.smin.i32(i32 %13, i32 8), !dbg !18
  %15 = srem i32 %8, %14, !dbg !19
  %16 = add i32 %12, %15, !dbg !20
  %17 = mul i32 %11, 16
  %.decomposed = sub i32 %.frozen, %17
  %18 = sdiv i32 %.decomposed, %14, !dbg !21
  %19 = shl i32 %16, 6, !dbg !22
  %20 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !23
  %21 = lshr i32 %20, 2, !dbg !23
  %22 = and i32 %21, 31, !dbg !23
  %23 = or disjoint i32 %22, 32, !dbg !23
  %24 = lshr i32 %20, 4, !dbg !23
  %25 = and i32 %24, 7, !dbg !23
  %26 = shl i32 %20, 2, !dbg !23
  %27 = and i32 %26, 12, !dbg !23
  %28 = or disjoint i32 %19, %22, !dbg !24
  %29 = or disjoint i32 %19, %23, !dbg !24
  %30 = or disjoint i32 %19, %25, !dbg !23
  %31 = shl nsw i32 %18, 6, !dbg !25
  %32 = or disjoint i32 %31, %22, !dbg !26
  %33 = or disjoint i32 %31, %23, !dbg !26
  %34 = srem i32 %28, %4, !dbg !27
  %35 = srem i32 %29, %4, !dbg !27
  %36 = srem i32 %32, 128, !dbg !28
  %37 = srem i32 %33, 128, !dbg !28
  %38 = mul i32 %34, 156, !dbg !29
  %39 = mul i32 %35, 156, !dbg !29
  %40 = add i32 %38, %27, !dbg !30
  %41 = add i32 %39, %27, !dbg !30
  %42 = sext i32 %40 to i64, !dbg !31
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !31
  %44 = sext i32 %41 to i64, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !31
  %46 = mul nsw i32 %36, 156, !dbg !32
  %47 = mul nsw i32 %37, 156, !dbg !32
  %48 = add nsw i32 %46, %27, !dbg !33
  %49 = add nsw i32 %47, %27, !dbg !33
  %50 = sext i32 %48 to i64, !dbg !34
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !34
  %52 = sext i32 %49 to i64, !dbg !34
  %53 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !34
  %54 = shl nuw nsw i32 %22, 4, !dbg !35
  %55 = or disjoint i32 %54, %27, !dbg !35
  %56 = zext nneg i32 %55 to i64, !dbg !35
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i64 %56, !dbg !35
  %58 = shl nuw nsw i32 %23, 4, !dbg !35
  %59 = or disjoint i32 %58, %27, !dbg !35
  %60 = zext nneg i32 %59 to i64, !dbg !35
  %61 = getelementptr float, ptr addrspace(3) @global_smem, i64 %60, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %57, ptr addrspace(1) %43, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %61, ptr addrspace(1) %45, i32 16, i1 true) #3, !dbg !35
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !35
  %62 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %56, !dbg !36
  %63 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %60, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %62, ptr addrspace(1) %51, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %53, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %64 = and i32 %26, 1984
  %65 = zext nneg i32 %64 to i64
  %66 = getelementptr float, ptr addrspace(3) @global_smem, i64 %65
  %67 = getelementptr i8, ptr addrspace(3) %66, i64 64
  %68 = getelementptr i8, ptr addrspace(3) %66, i64 128
  %69 = getelementptr i8, ptr addrspace(3) %66, i64 192
  %70 = getelementptr i8, ptr addrspace(3) %66, i64 2048
  %71 = getelementptr i8, ptr addrspace(3) %66, i64 2112
  %72 = getelementptr i8, ptr addrspace(3) %66, i64 2176
  %73 = getelementptr i8, ptr addrspace(3) %66, i64 2240
  %74 = getelementptr i8, ptr addrspace(3) %66, i64 4
  %75 = getelementptr i8, ptr addrspace(3) %66, i64 68
  %76 = getelementptr i8, ptr addrspace(3) %66, i64 132
  %77 = getelementptr i8, ptr addrspace(3) %66, i64 196
  %78 = getelementptr i8, ptr addrspace(3) %66, i64 2052
  %79 = getelementptr i8, ptr addrspace(3) %66, i64 2116
  %80 = getelementptr i8, ptr addrspace(3) %66, i64 2180
  %81 = getelementptr i8, ptr addrspace(3) %66, i64 2244
  %82 = getelementptr i8, ptr addrspace(3) %66, i64 8
  %83 = getelementptr i8, ptr addrspace(3) %66, i64 72
  %84 = getelementptr i8, ptr addrspace(3) %66, i64 136
  %85 = getelementptr i8, ptr addrspace(3) %66, i64 200
  %86 = getelementptr i8, ptr addrspace(3) %66, i64 2056
  %87 = getelementptr i8, ptr addrspace(3) %66, i64 2120
  %88 = getelementptr i8, ptr addrspace(3) %66, i64 2184
  %89 = getelementptr i8, ptr addrspace(3) %66, i64 2248
  %90 = getelementptr i8, ptr addrspace(3) %66, i64 12
  %91 = getelementptr i8, ptr addrspace(3) %66, i64 76
  %92 = getelementptr i8, ptr addrspace(3) %66, i64 140
  %93 = getelementptr i8, ptr addrspace(3) %66, i64 204
  %94 = getelementptr i8, ptr addrspace(3) %66, i64 2060
  %95 = getelementptr i8, ptr addrspace(3) %66, i64 2124
  %96 = getelementptr i8, ptr addrspace(3) %66, i64 2188
  %97 = getelementptr i8, ptr addrspace(3) %66, i64 2252
  %98 = getelementptr i8, ptr addrspace(3) %66, i64 16
  %99 = getelementptr i8, ptr addrspace(3) %66, i64 80
  %100 = getelementptr i8, ptr addrspace(3) %66, i64 144
  %101 = getelementptr i8, ptr addrspace(3) %66, i64 208
  %102 = getelementptr i8, ptr addrspace(3) %66, i64 2064
  %103 = getelementptr i8, ptr addrspace(3) %66, i64 2128
  %104 = getelementptr i8, ptr addrspace(3) %66, i64 2192
  %105 = getelementptr i8, ptr addrspace(3) %66, i64 2256
  %106 = getelementptr i8, ptr addrspace(3) %66, i64 20
  %107 = getelementptr i8, ptr addrspace(3) %66, i64 84
  %108 = getelementptr i8, ptr addrspace(3) %66, i64 148
  %109 = getelementptr i8, ptr addrspace(3) %66, i64 212
  %110 = getelementptr i8, ptr addrspace(3) %66, i64 2068
  %111 = getelementptr i8, ptr addrspace(3) %66, i64 2132
  %112 = getelementptr i8, ptr addrspace(3) %66, i64 2196
  %113 = getelementptr i8, ptr addrspace(3) %66, i64 2260
  %114 = getelementptr i8, ptr addrspace(3) %66, i64 24
  %115 = getelementptr i8, ptr addrspace(3) %66, i64 88
  %116 = getelementptr i8, ptr addrspace(3) %66, i64 152
  %117 = getelementptr i8, ptr addrspace(3) %66, i64 216
  %118 = getelementptr i8, ptr addrspace(3) %66, i64 2072
  %119 = getelementptr i8, ptr addrspace(3) %66, i64 2136
  %120 = getelementptr i8, ptr addrspace(3) %66, i64 2200
  %121 = getelementptr i8, ptr addrspace(3) %66, i64 2264
  %122 = getelementptr i8, ptr addrspace(3) %66, i64 28
  %123 = getelementptr i8, ptr addrspace(3) %66, i64 92
  %124 = getelementptr i8, ptr addrspace(3) %66, i64 156
  %125 = getelementptr i8, ptr addrspace(3) %66, i64 220
  %126 = getelementptr i8, ptr addrspace(3) %66, i64 2076
  %127 = getelementptr i8, ptr addrspace(3) %66, i64 2140
  %128 = getelementptr i8, ptr addrspace(3) %66, i64 2204
  %129 = getelementptr i8, ptr addrspace(3) %66, i64 2268
  %130 = getelementptr i8, ptr addrspace(3) %66, i64 32
  %131 = getelementptr i8, ptr addrspace(3) %66, i64 96
  %132 = getelementptr i8, ptr addrspace(3) %66, i64 160
  %133 = getelementptr i8, ptr addrspace(3) %66, i64 224
  %134 = getelementptr i8, ptr addrspace(3) %66, i64 2080
  %135 = getelementptr i8, ptr addrspace(3) %66, i64 2144
  %136 = getelementptr i8, ptr addrspace(3) %66, i64 2208
  %137 = getelementptr i8, ptr addrspace(3) %66, i64 2272
  %138 = getelementptr i8, ptr addrspace(3) %66, i64 36
  %139 = getelementptr i8, ptr addrspace(3) %66, i64 100
  %140 = getelementptr i8, ptr addrspace(3) %66, i64 164
  %141 = getelementptr i8, ptr addrspace(3) %66, i64 228
  %142 = getelementptr i8, ptr addrspace(3) %66, i64 2084
  %143 = getelementptr i8, ptr addrspace(3) %66, i64 2148
  %144 = getelementptr i8, ptr addrspace(3) %66, i64 2212
  %145 = getelementptr i8, ptr addrspace(3) %66, i64 2276
  %146 = getelementptr i8, ptr addrspace(3) %66, i64 40
  %147 = getelementptr i8, ptr addrspace(3) %66, i64 104
  %148 = getelementptr i8, ptr addrspace(3) %66, i64 168
  %149 = getelementptr i8, ptr addrspace(3) %66, i64 232
  %150 = getelementptr i8, ptr addrspace(3) %66, i64 2088
  %151 = getelementptr i8, ptr addrspace(3) %66, i64 2152
  %152 = getelementptr i8, ptr addrspace(3) %66, i64 2216
  %153 = getelementptr i8, ptr addrspace(3) %66, i64 2280
  %154 = getelementptr i8, ptr addrspace(3) %66, i64 44
  %155 = getelementptr i8, ptr addrspace(3) %66, i64 108
  %156 = getelementptr i8, ptr addrspace(3) %66, i64 172
  %157 = getelementptr i8, ptr addrspace(3) %66, i64 236
  %158 = getelementptr i8, ptr addrspace(3) %66, i64 2092
  %159 = getelementptr i8, ptr addrspace(3) %66, i64 2156
  %160 = getelementptr i8, ptr addrspace(3) %66, i64 2220
  %161 = getelementptr i8, ptr addrspace(3) %66, i64 2284
  %162 = getelementptr i8, ptr addrspace(3) %66, i64 48
  %163 = getelementptr i8, ptr addrspace(3) %66, i64 112
  %164 = getelementptr i8, ptr addrspace(3) %66, i64 176
  %165 = getelementptr i8, ptr addrspace(3) %66, i64 240
  %166 = getelementptr i8, ptr addrspace(3) %66, i64 2096
  %167 = getelementptr i8, ptr addrspace(3) %66, i64 2160
  %168 = getelementptr i8, ptr addrspace(3) %66, i64 2224
  %169 = getelementptr i8, ptr addrspace(3) %66, i64 2288
  %170 = getelementptr i8, ptr addrspace(3) %66, i64 52
  %171 = getelementptr i8, ptr addrspace(3) %66, i64 116
  %172 = getelementptr i8, ptr addrspace(3) %66, i64 180
  %173 = getelementptr i8, ptr addrspace(3) %66, i64 244
  %174 = getelementptr i8, ptr addrspace(3) %66, i64 2100
  %175 = getelementptr i8, ptr addrspace(3) %66, i64 2164
  %176 = getelementptr i8, ptr addrspace(3) %66, i64 2228
  %177 = getelementptr i8, ptr addrspace(3) %66, i64 2292
  %178 = getelementptr i8, ptr addrspace(3) %66, i64 56
  %179 = getelementptr i8, ptr addrspace(3) %66, i64 120
  %180 = getelementptr i8, ptr addrspace(3) %66, i64 184
  %181 = getelementptr i8, ptr addrspace(3) %66, i64 248
  %182 = getelementptr i8, ptr addrspace(3) %66, i64 2104
  %183 = getelementptr i8, ptr addrspace(3) %66, i64 2168
  %184 = getelementptr i8, ptr addrspace(3) %66, i64 2232
  %185 = getelementptr i8, ptr addrspace(3) %66, i64 2296
  %186 = getelementptr i8, ptr addrspace(3) %66, i64 60
  %187 = getelementptr i8, ptr addrspace(3) %66, i64 124
  %188 = getelementptr i8, ptr addrspace(3) %66, i64 188
  %189 = getelementptr i8, ptr addrspace(3) %66, i64 252
  %190 = getelementptr i8, ptr addrspace(3) %66, i64 2108
  %191 = getelementptr i8, ptr addrspace(3) %66, i64 2172
  %192 = getelementptr i8, ptr addrspace(3) %66, i64 2236
  %193 = getelementptr i8, ptr addrspace(3) %66, i64 2300
  %194 = and i32 %26, 60
  %invariant.op = sub nuw nsw i32 140, %27, !dbg !37
  %195 = shl nuw nsw i32 %194, 4
  %196 = zext nneg i32 %195 to i64
  %197 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %196
  %198 = getelementptr i8, ptr addrspace(3) %197, i64 64
  %199 = getelementptr i8, ptr addrspace(3) %197, i64 128
  %200 = getelementptr i8, ptr addrspace(3) %197, i64 192
  %201 = getelementptr i8, ptr addrspace(3) %197, i64 4
  %202 = getelementptr i8, ptr addrspace(3) %197, i64 68
  %203 = getelementptr i8, ptr addrspace(3) %197, i64 132
  %204 = getelementptr i8, ptr addrspace(3) %197, i64 196
  %205 = getelementptr i8, ptr addrspace(3) %197, i64 8
  %206 = getelementptr i8, ptr addrspace(3) %197, i64 72
  %207 = getelementptr i8, ptr addrspace(3) %197, i64 136
  %208 = getelementptr i8, ptr addrspace(3) %197, i64 200
  %209 = getelementptr i8, ptr addrspace(3) %197, i64 12
  %210 = getelementptr i8, ptr addrspace(3) %197, i64 76
  %211 = getelementptr i8, ptr addrspace(3) %197, i64 140
  %212 = getelementptr i8, ptr addrspace(3) %197, i64 204
  %213 = getelementptr i8, ptr addrspace(3) %197, i64 16
  %214 = getelementptr i8, ptr addrspace(3) %197, i64 80
  %215 = getelementptr i8, ptr addrspace(3) %197, i64 144
  %216 = getelementptr i8, ptr addrspace(3) %197, i64 208
  %217 = getelementptr i8, ptr addrspace(3) %197, i64 20
  %218 = getelementptr i8, ptr addrspace(3) %197, i64 84
  %219 = getelementptr i8, ptr addrspace(3) %197, i64 148
  %220 = getelementptr i8, ptr addrspace(3) %197, i64 212
  %221 = getelementptr i8, ptr addrspace(3) %197, i64 24
  %222 = getelementptr i8, ptr addrspace(3) %197, i64 88
  %223 = getelementptr i8, ptr addrspace(3) %197, i64 152
  %224 = getelementptr i8, ptr addrspace(3) %197, i64 216
  %225 = getelementptr i8, ptr addrspace(3) %197, i64 28
  %226 = getelementptr i8, ptr addrspace(3) %197, i64 92
  %227 = getelementptr i8, ptr addrspace(3) %197, i64 156
  %228 = getelementptr i8, ptr addrspace(3) %197, i64 220
  %229 = getelementptr i8, ptr addrspace(3) %197, i64 32
  %230 = getelementptr i8, ptr addrspace(3) %197, i64 96
  %231 = getelementptr i8, ptr addrspace(3) %197, i64 160
  %232 = getelementptr i8, ptr addrspace(3) %197, i64 224
  %233 = getelementptr i8, ptr addrspace(3) %197, i64 36
  %234 = getelementptr i8, ptr addrspace(3) %197, i64 100
  %235 = getelementptr i8, ptr addrspace(3) %197, i64 164
  %236 = getelementptr i8, ptr addrspace(3) %197, i64 228
  %237 = getelementptr i8, ptr addrspace(3) %197, i64 40
  %238 = getelementptr i8, ptr addrspace(3) %197, i64 104
  %239 = getelementptr i8, ptr addrspace(3) %197, i64 168
  %240 = getelementptr i8, ptr addrspace(3) %197, i64 232
  %241 = getelementptr i8, ptr addrspace(3) %197, i64 44
  %242 = getelementptr i8, ptr addrspace(3) %197, i64 108
  %243 = getelementptr i8, ptr addrspace(3) %197, i64 172
  %244 = getelementptr i8, ptr addrspace(3) %197, i64 236
  %245 = getelementptr i8, ptr addrspace(3) %197, i64 48
  %246 = getelementptr i8, ptr addrspace(3) %197, i64 112
  %247 = getelementptr i8, ptr addrspace(3) %197, i64 176
  %248 = getelementptr i8, ptr addrspace(3) %197, i64 240
  %249 = getelementptr i8, ptr addrspace(3) %197, i64 52
  %250 = getelementptr i8, ptr addrspace(3) %197, i64 116
  %251 = getelementptr i8, ptr addrspace(3) %197, i64 180
  %252 = getelementptr i8, ptr addrspace(3) %197, i64 244
  %253 = getelementptr i8, ptr addrspace(3) %197, i64 56
  %254 = getelementptr i8, ptr addrspace(3) %197, i64 120
  %255 = getelementptr i8, ptr addrspace(3) %197, i64 184
  %256 = getelementptr i8, ptr addrspace(3) %197, i64 248
  %257 = getelementptr i8, ptr addrspace(3) %197, i64 60
  %258 = getelementptr i8, ptr addrspace(3) %197, i64 124
  %259 = getelementptr i8, ptr addrspace(3) %197, i64 188
  %260 = getelementptr i8, ptr addrspace(3) %197, i64 252
  br label %261, !dbg !37

261:                                              ; preds = %7, %261
  %.pn2436 = phi ptr addrspace(1) [ %53, %7 ], [ %915, %261 ]
  %.pn3235 = phi ptr addrspace(1) [ %51, %7 ], [ %914, %261 ]
  %.pn834 = phi ptr addrspace(1) [ %45, %7 ], [ %913, %261 ]
  %.pn1633 = phi ptr addrspace(1) [ %43, %7 ], [ %912, %261 ]
  %262 = phi i32 [ 0, %7 ], [ %919, %261 ]
  %263 = phi <4 x float> [ zeroinitializer, %7 ], [ %911, %261 ]
  %264 = phi <4 x float> [ zeroinitializer, %7 ], [ %908, %261 ]
  %265 = phi <4 x float> [ zeroinitializer, %7 ], [ %905, %261 ]
  %266 = phi <4 x float> [ zeroinitializer, %7 ], [ %902, %261 ]
  %267 = phi <4 x float> [ zeroinitializer, %7 ], [ %899, %261 ]
  %268 = phi <4 x float> [ zeroinitializer, %7 ], [ %896, %261 ]
  %269 = phi <4 x float> [ zeroinitializer, %7 ], [ %893, %261 ]
  %270 = phi <4 x float> [ zeroinitializer, %7 ], [ %890, %261 ]
  %271 = icmp ult i32 %262, 140, !dbg !37
  %272 = load float, ptr addrspace(3) %66, align 16, !dbg !35
  %273 = load float, ptr addrspace(3) %67, align 16, !dbg !35
  %274 = load float, ptr addrspace(3) %68, align 16, !dbg !35
  %275 = load float, ptr addrspace(3) %69, align 16, !dbg !35
  %276 = load float, ptr addrspace(3) %70, align 16, !dbg !35
  %277 = load float, ptr addrspace(3) %71, align 16, !dbg !35
  %278 = load float, ptr addrspace(3) %72, align 16, !dbg !35
  %279 = load float, ptr addrspace(3) %73, align 16, !dbg !35
  %280 = load float, ptr addrspace(3) %74, align 4, !dbg !35
  %281 = load float, ptr addrspace(3) %75, align 4, !dbg !35
  %282 = load float, ptr addrspace(3) %76, align 4, !dbg !35
  %283 = load float, ptr addrspace(3) %77, align 4, !dbg !35
  %284 = load float, ptr addrspace(3) %78, align 4, !dbg !35
  %285 = load float, ptr addrspace(3) %79, align 4, !dbg !35
  %286 = load float, ptr addrspace(3) %80, align 4, !dbg !35
  %287 = load float, ptr addrspace(3) %81, align 4, !dbg !35
  %288 = load float, ptr addrspace(3) %82, align 8, !dbg !35
  %289 = load float, ptr addrspace(3) %83, align 8, !dbg !35
  %290 = load float, ptr addrspace(3) %84, align 8, !dbg !35
  %291 = load float, ptr addrspace(3) %85, align 8, !dbg !35
  %292 = load float, ptr addrspace(3) %86, align 8, !dbg !35
  %293 = load float, ptr addrspace(3) %87, align 8, !dbg !35
  %294 = load float, ptr addrspace(3) %88, align 8, !dbg !35
  %295 = load float, ptr addrspace(3) %89, align 8, !dbg !35
  %296 = load float, ptr addrspace(3) %90, align 4, !dbg !35
  %297 = load float, ptr addrspace(3) %91, align 4, !dbg !35
  %298 = load float, ptr addrspace(3) %92, align 4, !dbg !35
  %299 = load float, ptr addrspace(3) %93, align 4, !dbg !35
  %300 = load float, ptr addrspace(3) %94, align 4, !dbg !35
  %301 = load float, ptr addrspace(3) %95, align 4, !dbg !35
  %302 = load float, ptr addrspace(3) %96, align 4, !dbg !35
  %303 = load float, ptr addrspace(3) %97, align 4, !dbg !35
  %304 = load float, ptr addrspace(3) %98, align 16, !dbg !35
  %305 = load float, ptr addrspace(3) %99, align 16, !dbg !35
  %306 = load float, ptr addrspace(3) %100, align 16, !dbg !35
  %307 = load float, ptr addrspace(3) %101, align 16, !dbg !35
  %308 = load float, ptr addrspace(3) %102, align 16, !dbg !35
  %309 = load float, ptr addrspace(3) %103, align 16, !dbg !35
  %310 = load float, ptr addrspace(3) %104, align 16, !dbg !35
  %311 = load float, ptr addrspace(3) %105, align 16, !dbg !35
  %312 = load float, ptr addrspace(3) %106, align 4, !dbg !35
  %313 = load float, ptr addrspace(3) %107, align 4, !dbg !35
  %314 = load float, ptr addrspace(3) %108, align 4, !dbg !35
  %315 = load float, ptr addrspace(3) %109, align 4, !dbg !35
  %316 = load float, ptr addrspace(3) %110, align 4, !dbg !35
  %317 = load float, ptr addrspace(3) %111, align 4, !dbg !35
  %318 = load float, ptr addrspace(3) %112, align 4, !dbg !35
  %319 = load float, ptr addrspace(3) %113, align 4, !dbg !35
  %320 = load float, ptr addrspace(3) %114, align 8, !dbg !35
  %321 = load float, ptr addrspace(3) %115, align 8, !dbg !35
  %322 = load float, ptr addrspace(3) %116, align 8, !dbg !35
  %323 = load float, ptr addrspace(3) %117, align 8, !dbg !35
  %324 = load float, ptr addrspace(3) %118, align 8, !dbg !35
  %325 = load float, ptr addrspace(3) %119, align 8, !dbg !35
  %326 = load float, ptr addrspace(3) %120, align 8, !dbg !35
  %327 = load float, ptr addrspace(3) %121, align 8, !dbg !35
  %328 = load float, ptr addrspace(3) %122, align 4, !dbg !35
  %329 = load float, ptr addrspace(3) %123, align 4, !dbg !35
  %330 = load float, ptr addrspace(3) %124, align 4, !dbg !35
  %331 = load float, ptr addrspace(3) %125, align 4, !dbg !35
  %332 = load float, ptr addrspace(3) %126, align 4, !dbg !35
  %333 = load float, ptr addrspace(3) %127, align 4, !dbg !35
  %334 = load float, ptr addrspace(3) %128, align 4, !dbg !35
  %335 = load float, ptr addrspace(3) %129, align 4, !dbg !35
  %336 = load float, ptr addrspace(3) %130, align 16, !dbg !35
  %337 = load float, ptr addrspace(3) %131, align 16, !dbg !35
  %338 = load float, ptr addrspace(3) %132, align 16, !dbg !35
  %339 = load float, ptr addrspace(3) %133, align 16, !dbg !35
  %340 = load float, ptr addrspace(3) %134, align 16, !dbg !35
  %341 = load float, ptr addrspace(3) %135, align 16, !dbg !35
  %342 = load float, ptr addrspace(3) %136, align 16, !dbg !35
  %343 = load float, ptr addrspace(3) %137, align 16, !dbg !35
  %344 = load float, ptr addrspace(3) %138, align 4, !dbg !35
  %345 = load float, ptr addrspace(3) %139, align 4, !dbg !35
  %346 = load float, ptr addrspace(3) %140, align 4, !dbg !35
  %347 = load float, ptr addrspace(3) %141, align 4, !dbg !35
  %348 = load float, ptr addrspace(3) %142, align 4, !dbg !35
  %349 = load float, ptr addrspace(3) %143, align 4, !dbg !35
  %350 = load float, ptr addrspace(3) %144, align 4, !dbg !35
  %351 = load float, ptr addrspace(3) %145, align 4, !dbg !35
  %352 = load float, ptr addrspace(3) %146, align 8, !dbg !35
  %353 = load float, ptr addrspace(3) %147, align 8, !dbg !35
  %354 = load float, ptr addrspace(3) %148, align 8, !dbg !35
  %355 = load float, ptr addrspace(3) %149, align 8, !dbg !35
  %356 = load float, ptr addrspace(3) %150, align 8, !dbg !35
  %357 = load float, ptr addrspace(3) %151, align 8, !dbg !35
  %358 = load float, ptr addrspace(3) %152, align 8, !dbg !35
  %359 = load float, ptr addrspace(3) %153, align 8, !dbg !35
  %360 = load float, ptr addrspace(3) %154, align 4, !dbg !35
  %361 = load float, ptr addrspace(3) %155, align 4, !dbg !35
  %362 = load float, ptr addrspace(3) %156, align 4, !dbg !35
  %363 = load float, ptr addrspace(3) %157, align 4, !dbg !35
  %364 = load float, ptr addrspace(3) %158, align 4, !dbg !35
  %365 = load float, ptr addrspace(3) %159, align 4, !dbg !35
  %366 = load float, ptr addrspace(3) %160, align 4, !dbg !35
  %367 = load float, ptr addrspace(3) %161, align 4, !dbg !35
  %368 = load float, ptr addrspace(3) %162, align 16, !dbg !35
  %369 = load float, ptr addrspace(3) %163, align 16, !dbg !35
  %370 = load float, ptr addrspace(3) %164, align 16, !dbg !35
  %371 = load float, ptr addrspace(3) %165, align 16, !dbg !35
  %372 = load float, ptr addrspace(3) %166, align 16, !dbg !35
  %373 = load float, ptr addrspace(3) %167, align 16, !dbg !35
  %374 = load float, ptr addrspace(3) %168, align 16, !dbg !35
  %375 = load float, ptr addrspace(3) %169, align 16, !dbg !35
  %376 = load float, ptr addrspace(3) %170, align 4, !dbg !35
  %377 = load float, ptr addrspace(3) %171, align 4, !dbg !35
  %378 = load float, ptr addrspace(3) %172, align 4, !dbg !35
  %379 = load float, ptr addrspace(3) %173, align 4, !dbg !35
  %380 = load float, ptr addrspace(3) %174, align 4, !dbg !35
  %381 = load float, ptr addrspace(3) %175, align 4, !dbg !35
  %382 = load float, ptr addrspace(3) %176, align 4, !dbg !35
  %383 = load float, ptr addrspace(3) %177, align 4, !dbg !35
  %384 = load float, ptr addrspace(3) %178, align 8, !dbg !35
  %385 = load float, ptr addrspace(3) %179, align 8, !dbg !35
  %386 = load float, ptr addrspace(3) %180, align 8, !dbg !35
  %387 = load float, ptr addrspace(3) %181, align 8, !dbg !35
  %388 = load float, ptr addrspace(3) %182, align 8, !dbg !35
  %389 = load float, ptr addrspace(3) %183, align 8, !dbg !35
  %390 = load float, ptr addrspace(3) %184, align 8, !dbg !35
  %391 = load float, ptr addrspace(3) %185, align 8, !dbg !35
  %392 = load float, ptr addrspace(3) %186, align 4, !dbg !35
  %393 = load float, ptr addrspace(3) %187, align 4, !dbg !35
  %394 = load float, ptr addrspace(3) %188, align 4, !dbg !35
  %395 = load float, ptr addrspace(3) %189, align 4, !dbg !35
  %396 = load float, ptr addrspace(3) %190, align 4, !dbg !35
  %397 = load float, ptr addrspace(3) %191, align 4, !dbg !35
  %398 = load float, ptr addrspace(3) %192, align 4, !dbg !35
  %399 = load float, ptr addrspace(3) %193, align 4, !dbg !35
  %400 = load float, ptr addrspace(3) %197, align 16, !dbg !36
  %401 = load float, ptr addrspace(3) %198, align 16, !dbg !36
  %402 = load float, ptr addrspace(3) %199, align 16, !dbg !36
  %403 = load float, ptr addrspace(3) %200, align 16, !dbg !36
  %404 = load float, ptr addrspace(3) %201, align 4, !dbg !36
  %405 = load float, ptr addrspace(3) %202, align 4, !dbg !36
  %406 = load float, ptr addrspace(3) %203, align 4, !dbg !36
  %407 = load float, ptr addrspace(3) %204, align 4, !dbg !36
  %408 = load float, ptr addrspace(3) %205, align 8, !dbg !36
  %409 = load float, ptr addrspace(3) %206, align 8, !dbg !36
  %410 = load float, ptr addrspace(3) %207, align 8, !dbg !36
  %411 = load float, ptr addrspace(3) %208, align 8, !dbg !36
  %412 = load float, ptr addrspace(3) %209, align 4, !dbg !36
  %413 = load float, ptr addrspace(3) %210, align 4, !dbg !36
  %414 = load float, ptr addrspace(3) %211, align 4, !dbg !36
  %415 = load float, ptr addrspace(3) %212, align 4, !dbg !36
  %416 = load float, ptr addrspace(3) %213, align 16, !dbg !36
  %417 = load float, ptr addrspace(3) %214, align 16, !dbg !36
  %418 = load float, ptr addrspace(3) %215, align 16, !dbg !36
  %419 = load float, ptr addrspace(3) %216, align 16, !dbg !36
  %420 = load float, ptr addrspace(3) %217, align 4, !dbg !36
  %421 = load float, ptr addrspace(3) %218, align 4, !dbg !36
  %422 = load float, ptr addrspace(3) %219, align 4, !dbg !36
  %423 = load float, ptr addrspace(3) %220, align 4, !dbg !36
  %424 = load float, ptr addrspace(3) %221, align 8, !dbg !36
  %425 = load float, ptr addrspace(3) %222, align 8, !dbg !36
  %426 = load float, ptr addrspace(3) %223, align 8, !dbg !36
  %427 = load float, ptr addrspace(3) %224, align 8, !dbg !36
  %428 = load float, ptr addrspace(3) %225, align 4, !dbg !36
  %429 = load float, ptr addrspace(3) %226, align 4, !dbg !36
  %430 = load float, ptr addrspace(3) %227, align 4, !dbg !36
  %431 = load float, ptr addrspace(3) %228, align 4, !dbg !36
  %432 = load float, ptr addrspace(3) %229, align 16, !dbg !36
  %433 = load float, ptr addrspace(3) %230, align 16, !dbg !36
  %434 = load float, ptr addrspace(3) %231, align 16, !dbg !36
  %435 = load float, ptr addrspace(3) %232, align 16, !dbg !36
  %436 = load float, ptr addrspace(3) %233, align 4, !dbg !36
  %437 = load float, ptr addrspace(3) %234, align 4, !dbg !36
  %438 = load float, ptr addrspace(3) %235, align 4, !dbg !36
  %439 = load float, ptr addrspace(3) %236, align 4, !dbg !36
  %440 = load float, ptr addrspace(3) %237, align 8, !dbg !36
  %441 = load float, ptr addrspace(3) %238, align 8, !dbg !36
  %442 = load float, ptr addrspace(3) %239, align 8, !dbg !36
  %443 = load float, ptr addrspace(3) %240, align 8, !dbg !36
  %444 = load float, ptr addrspace(3) %241, align 4, !dbg !36
  %445 = load float, ptr addrspace(3) %242, align 4, !dbg !36
  %446 = load float, ptr addrspace(3) %243, align 4, !dbg !36
  %447 = load float, ptr addrspace(3) %244, align 4, !dbg !36
  %448 = load float, ptr addrspace(3) %245, align 16, !dbg !36
  %449 = load float, ptr addrspace(3) %246, align 16, !dbg !36
  %450 = load float, ptr addrspace(3) %247, align 16, !dbg !36
  %451 = load float, ptr addrspace(3) %248, align 16, !dbg !36
  %452 = load float, ptr addrspace(3) %249, align 4, !dbg !36
  %453 = load float, ptr addrspace(3) %250, align 4, !dbg !36
  %454 = load float, ptr addrspace(3) %251, align 4, !dbg !36
  %455 = load float, ptr addrspace(3) %252, align 4, !dbg !36
  %456 = load float, ptr addrspace(3) %253, align 8, !dbg !36
  %457 = load float, ptr addrspace(3) %254, align 8, !dbg !36
  %458 = load float, ptr addrspace(3) %255, align 8, !dbg !36
  %459 = load float, ptr addrspace(3) %256, align 8, !dbg !36
  %460 = load float, ptr addrspace(3) %257, align 4, !dbg !36
  %461 = load float, ptr addrspace(3) %258, align 4, !dbg !36
  %462 = load float, ptr addrspace(3) %259, align 4, !dbg !36
  %463 = load float, ptr addrspace(3) %260, align 4, !dbg !36
  %464 = insertelement <4 x float> poison, float %272, i64 0, !dbg !38
  %465 = shufflevector <4 x float> %464, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %466 = insertelement <4 x float> poison, float %400, i64 0, !dbg !38
  %467 = insertelement <4 x float> %466, float %401, i64 1, !dbg !38
  %468 = insertelement <4 x float> %467, float %402, i64 2, !dbg !38
  %469 = insertelement <4 x float> %468, float %403, i64 3, !dbg !38
  %470 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %465, <4 x float> %469, <4 x float> %270), !dbg !38
  %471 = insertelement <4 x float> poison, float %280, i64 0, !dbg !38
  %472 = shufflevector <4 x float> %471, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %473 = insertelement <4 x float> poison, float %404, i64 0, !dbg !38
  %474 = insertelement <4 x float> %473, float %405, i64 1, !dbg !38
  %475 = insertelement <4 x float> %474, float %406, i64 2, !dbg !38
  %476 = insertelement <4 x float> %475, float %407, i64 3, !dbg !38
  %477 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %472, <4 x float> %476, <4 x float> %470), !dbg !38
  %478 = insertelement <4 x float> poison, float %288, i64 0, !dbg !38
  %479 = shufflevector <4 x float> %478, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %480 = insertelement <4 x float> poison, float %408, i64 0, !dbg !38
  %481 = insertelement <4 x float> %480, float %409, i64 1, !dbg !38
  %482 = insertelement <4 x float> %481, float %410, i64 2, !dbg !38
  %483 = insertelement <4 x float> %482, float %411, i64 3, !dbg !38
  %484 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %479, <4 x float> %483, <4 x float> %477), !dbg !38
  %485 = insertelement <4 x float> poison, float %296, i64 0, !dbg !38
  %486 = shufflevector <4 x float> %485, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %487 = insertelement <4 x float> poison, float %412, i64 0, !dbg !38
  %488 = insertelement <4 x float> %487, float %413, i64 1, !dbg !38
  %489 = insertelement <4 x float> %488, float %414, i64 2, !dbg !38
  %490 = insertelement <4 x float> %489, float %415, i64 3, !dbg !38
  %491 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %486, <4 x float> %490, <4 x float> %484), !dbg !38
  %492 = insertelement <4 x float> poison, float %304, i64 0, !dbg !38
  %493 = shufflevector <4 x float> %492, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %494 = insertelement <4 x float> poison, float %416, i64 0, !dbg !38
  %495 = insertelement <4 x float> %494, float %417, i64 1, !dbg !38
  %496 = insertelement <4 x float> %495, float %418, i64 2, !dbg !38
  %497 = insertelement <4 x float> %496, float %419, i64 3, !dbg !38
  %498 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %493, <4 x float> %497, <4 x float> %491), !dbg !38
  %499 = insertelement <4 x float> poison, float %273, i64 0, !dbg !38
  %500 = shufflevector <4 x float> %499, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %501 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %500, <4 x float> %469, <4 x float> %269), !dbg !38
  %502 = insertelement <4 x float> poison, float %281, i64 0, !dbg !38
  %503 = shufflevector <4 x float> %502, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %504 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %503, <4 x float> %476, <4 x float> %501), !dbg !38
  %505 = insertelement <4 x float> poison, float %289, i64 0, !dbg !38
  %506 = shufflevector <4 x float> %505, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %507 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %506, <4 x float> %483, <4 x float> %504), !dbg !38
  %508 = insertelement <4 x float> poison, float %297, i64 0, !dbg !38
  %509 = shufflevector <4 x float> %508, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %510 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %509, <4 x float> %490, <4 x float> %507), !dbg !38
  %511 = insertelement <4 x float> poison, float %305, i64 0, !dbg !38
  %512 = shufflevector <4 x float> %511, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %513 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %512, <4 x float> %497, <4 x float> %510), !dbg !38
  %514 = insertelement <4 x float> poison, float %274, i64 0, !dbg !38
  %515 = shufflevector <4 x float> %514, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %516 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %515, <4 x float> %469, <4 x float> %268), !dbg !38
  %517 = insertelement <4 x float> poison, float %282, i64 0, !dbg !38
  %518 = shufflevector <4 x float> %517, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %519 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %518, <4 x float> %476, <4 x float> %516), !dbg !38
  %520 = insertelement <4 x float> poison, float %290, i64 0, !dbg !38
  %521 = shufflevector <4 x float> %520, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %522 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %521, <4 x float> %483, <4 x float> %519), !dbg !38
  %523 = insertelement <4 x float> poison, float %298, i64 0, !dbg !38
  %524 = shufflevector <4 x float> %523, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %525 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %524, <4 x float> %490, <4 x float> %522), !dbg !38
  %526 = insertelement <4 x float> poison, float %306, i64 0, !dbg !38
  %527 = shufflevector <4 x float> %526, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %528 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %527, <4 x float> %497, <4 x float> %525), !dbg !38
  %529 = insertelement <4 x float> poison, float %275, i64 0, !dbg !38
  %530 = shufflevector <4 x float> %529, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %531 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %530, <4 x float> %469, <4 x float> %267), !dbg !38
  %532 = insertelement <4 x float> poison, float %283, i64 0, !dbg !38
  %533 = shufflevector <4 x float> %532, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %534 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %533, <4 x float> %476, <4 x float> %531), !dbg !38
  %535 = insertelement <4 x float> poison, float %291, i64 0, !dbg !38
  %536 = shufflevector <4 x float> %535, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %537 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %536, <4 x float> %483, <4 x float> %534), !dbg !38
  %538 = insertelement <4 x float> poison, float %299, i64 0, !dbg !38
  %539 = shufflevector <4 x float> %538, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %540 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %539, <4 x float> %490, <4 x float> %537), !dbg !38
  %541 = insertelement <4 x float> poison, float %307, i64 0, !dbg !38
  %542 = shufflevector <4 x float> %541, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %543 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %542, <4 x float> %497, <4 x float> %540), !dbg !38
  %544 = insertelement <4 x float> poison, float %276, i64 0, !dbg !38
  %545 = shufflevector <4 x float> %544, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %546 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %545, <4 x float> %469, <4 x float> %266), !dbg !38
  %547 = insertelement <4 x float> poison, float %284, i64 0, !dbg !38
  %548 = shufflevector <4 x float> %547, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %549 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %548, <4 x float> %476, <4 x float> %546), !dbg !38
  %550 = insertelement <4 x float> poison, float %292, i64 0, !dbg !38
  %551 = shufflevector <4 x float> %550, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %552 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %551, <4 x float> %483, <4 x float> %549), !dbg !38
  %553 = insertelement <4 x float> poison, float %300, i64 0, !dbg !38
  %554 = shufflevector <4 x float> %553, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %555 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %554, <4 x float> %490, <4 x float> %552), !dbg !38
  %556 = insertelement <4 x float> poison, float %308, i64 0, !dbg !38
  %557 = shufflevector <4 x float> %556, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %558 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %557, <4 x float> %497, <4 x float> %555), !dbg !38
  %559 = insertelement <4 x float> poison, float %277, i64 0, !dbg !38
  %560 = shufflevector <4 x float> %559, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %561 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %560, <4 x float> %469, <4 x float> %265), !dbg !38
  %562 = insertelement <4 x float> poison, float %285, i64 0, !dbg !38
  %563 = shufflevector <4 x float> %562, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %564 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %563, <4 x float> %476, <4 x float> %561), !dbg !38
  %565 = insertelement <4 x float> poison, float %293, i64 0, !dbg !38
  %566 = shufflevector <4 x float> %565, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %567 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %566, <4 x float> %483, <4 x float> %564), !dbg !38
  %568 = insertelement <4 x float> poison, float %301, i64 0, !dbg !38
  %569 = shufflevector <4 x float> %568, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %570 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %569, <4 x float> %490, <4 x float> %567), !dbg !38
  %571 = insertelement <4 x float> poison, float %309, i64 0, !dbg !38
  %572 = shufflevector <4 x float> %571, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %573 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %572, <4 x float> %497, <4 x float> %570), !dbg !38
  %574 = insertelement <4 x float> poison, float %278, i64 0, !dbg !38
  %575 = shufflevector <4 x float> %574, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %576 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %575, <4 x float> %469, <4 x float> %264), !dbg !38
  %577 = insertelement <4 x float> poison, float %286, i64 0, !dbg !38
  %578 = shufflevector <4 x float> %577, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %579 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %578, <4 x float> %476, <4 x float> %576), !dbg !38
  %580 = insertelement <4 x float> poison, float %294, i64 0, !dbg !38
  %581 = shufflevector <4 x float> %580, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %582 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %581, <4 x float> %483, <4 x float> %579), !dbg !38
  %583 = insertelement <4 x float> poison, float %302, i64 0, !dbg !38
  %584 = shufflevector <4 x float> %583, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %585 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %584, <4 x float> %490, <4 x float> %582), !dbg !38
  %586 = insertelement <4 x float> poison, float %310, i64 0, !dbg !38
  %587 = shufflevector <4 x float> %586, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %588 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %587, <4 x float> %497, <4 x float> %585), !dbg !38
  %589 = insertelement <4 x float> poison, float %279, i64 0, !dbg !38
  %590 = shufflevector <4 x float> %589, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %591 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %590, <4 x float> %469, <4 x float> %263), !dbg !38
  %592 = insertelement <4 x float> poison, float %287, i64 0, !dbg !38
  %593 = shufflevector <4 x float> %592, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %594 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %593, <4 x float> %476, <4 x float> %591), !dbg !38
  %595 = insertelement <4 x float> poison, float %295, i64 0, !dbg !38
  %596 = shufflevector <4 x float> %595, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %597 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %596, <4 x float> %483, <4 x float> %594), !dbg !38
  %598 = insertelement <4 x float> poison, float %303, i64 0, !dbg !38
  %599 = shufflevector <4 x float> %598, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %600 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %599, <4 x float> %490, <4 x float> %597), !dbg !38
  %601 = insertelement <4 x float> poison, float %311, i64 0, !dbg !38
  %602 = shufflevector <4 x float> %601, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %603 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %602, <4 x float> %497, <4 x float> %600), !dbg !38
  %604 = insertelement <4 x float> poison, float %312, i64 0, !dbg !38
  %605 = shufflevector <4 x float> %604, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %606 = insertelement <4 x float> poison, float %420, i64 0, !dbg !38
  %607 = insertelement <4 x float> %606, float %421, i64 1, !dbg !38
  %608 = insertelement <4 x float> %607, float %422, i64 2, !dbg !38
  %609 = insertelement <4 x float> %608, float %423, i64 3, !dbg !38
  %610 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %605, <4 x float> %609, <4 x float> %498), !dbg !38
  %611 = insertelement <4 x float> poison, float %320, i64 0, !dbg !38
  %612 = shufflevector <4 x float> %611, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %613 = insertelement <4 x float> poison, float %424, i64 0, !dbg !38
  %614 = insertelement <4 x float> %613, float %425, i64 1, !dbg !38
  %615 = insertelement <4 x float> %614, float %426, i64 2, !dbg !38
  %616 = insertelement <4 x float> %615, float %427, i64 3, !dbg !38
  %617 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %612, <4 x float> %616, <4 x float> %610), !dbg !38
  %618 = insertelement <4 x float> poison, float %328, i64 0, !dbg !38
  %619 = shufflevector <4 x float> %618, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %620 = insertelement <4 x float> poison, float %428, i64 0, !dbg !38
  %621 = insertelement <4 x float> %620, float %429, i64 1, !dbg !38
  %622 = insertelement <4 x float> %621, float %430, i64 2, !dbg !38
  %623 = insertelement <4 x float> %622, float %431, i64 3, !dbg !38
  %624 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %619, <4 x float> %623, <4 x float> %617), !dbg !38
  %625 = insertelement <4 x float> poison, float %336, i64 0, !dbg !38
  %626 = shufflevector <4 x float> %625, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %627 = insertelement <4 x float> poison, float %432, i64 0, !dbg !38
  %628 = insertelement <4 x float> %627, float %433, i64 1, !dbg !38
  %629 = insertelement <4 x float> %628, float %434, i64 2, !dbg !38
  %630 = insertelement <4 x float> %629, float %435, i64 3, !dbg !38
  %631 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %626, <4 x float> %630, <4 x float> %624), !dbg !38
  %632 = insertelement <4 x float> poison, float %344, i64 0, !dbg !38
  %633 = shufflevector <4 x float> %632, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %634 = insertelement <4 x float> poison, float %436, i64 0, !dbg !38
  %635 = insertelement <4 x float> %634, float %437, i64 1, !dbg !38
  %636 = insertelement <4 x float> %635, float %438, i64 2, !dbg !38
  %637 = insertelement <4 x float> %636, float %439, i64 3, !dbg !38
  %638 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %633, <4 x float> %637, <4 x float> %631), !dbg !38
  %639 = insertelement <4 x float> poison, float %352, i64 0, !dbg !38
  %640 = shufflevector <4 x float> %639, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %641 = insertelement <4 x float> poison, float %440, i64 0, !dbg !38
  %642 = insertelement <4 x float> %641, float %441, i64 1, !dbg !38
  %643 = insertelement <4 x float> %642, float %442, i64 2, !dbg !38
  %644 = insertelement <4 x float> %643, float %443, i64 3, !dbg !38
  %645 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %640, <4 x float> %644, <4 x float> %638), !dbg !38
  %646 = insertelement <4 x float> poison, float %360, i64 0, !dbg !38
  %647 = shufflevector <4 x float> %646, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %648 = insertelement <4 x float> poison, float %444, i64 0, !dbg !38
  %649 = insertelement <4 x float> %648, float %445, i64 1, !dbg !38
  %650 = insertelement <4 x float> %649, float %446, i64 2, !dbg !38
  %651 = insertelement <4 x float> %650, float %447, i64 3, !dbg !38
  %652 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %647, <4 x float> %651, <4 x float> %645), !dbg !38
  %653 = insertelement <4 x float> poison, float %368, i64 0, !dbg !38
  %654 = shufflevector <4 x float> %653, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %655 = insertelement <4 x float> poison, float %448, i64 0, !dbg !38
  %656 = insertelement <4 x float> %655, float %449, i64 1, !dbg !38
  %657 = insertelement <4 x float> %656, float %450, i64 2, !dbg !38
  %658 = insertelement <4 x float> %657, float %451, i64 3, !dbg !38
  %659 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %654, <4 x float> %658, <4 x float> %652), !dbg !38
  %660 = insertelement <4 x float> poison, float %376, i64 0, !dbg !38
  %661 = shufflevector <4 x float> %660, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %662 = insertelement <4 x float> poison, float %452, i64 0, !dbg !38
  %663 = insertelement <4 x float> %662, float %453, i64 1, !dbg !38
  %664 = insertelement <4 x float> %663, float %454, i64 2, !dbg !38
  %665 = insertelement <4 x float> %664, float %455, i64 3, !dbg !38
  %666 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %661, <4 x float> %665, <4 x float> %659), !dbg !38
  %667 = insertelement <4 x float> poison, float %384, i64 0, !dbg !38
  %668 = shufflevector <4 x float> %667, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %669 = insertelement <4 x float> poison, float %456, i64 0, !dbg !38
  %670 = insertelement <4 x float> %669, float %457, i64 1, !dbg !38
  %671 = insertelement <4 x float> %670, float %458, i64 2, !dbg !38
  %672 = insertelement <4 x float> %671, float %459, i64 3, !dbg !38
  %673 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %668, <4 x float> %672, <4 x float> %666), !dbg !38
  %674 = insertelement <4 x float> poison, float %313, i64 0, !dbg !38
  %675 = shufflevector <4 x float> %674, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %676 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %675, <4 x float> %609, <4 x float> %513), !dbg !38
  %677 = insertelement <4 x float> poison, float %321, i64 0, !dbg !38
  %678 = shufflevector <4 x float> %677, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %679 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %678, <4 x float> %616, <4 x float> %676), !dbg !38
  %680 = insertelement <4 x float> poison, float %329, i64 0, !dbg !38
  %681 = shufflevector <4 x float> %680, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %682 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %681, <4 x float> %623, <4 x float> %679), !dbg !38
  %683 = insertelement <4 x float> poison, float %337, i64 0, !dbg !38
  %684 = shufflevector <4 x float> %683, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %685 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %684, <4 x float> %630, <4 x float> %682), !dbg !38
  %686 = insertelement <4 x float> poison, float %345, i64 0, !dbg !38
  %687 = shufflevector <4 x float> %686, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %688 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %687, <4 x float> %637, <4 x float> %685), !dbg !38
  %689 = insertelement <4 x float> poison, float %353, i64 0, !dbg !38
  %690 = shufflevector <4 x float> %689, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %691 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %690, <4 x float> %644, <4 x float> %688), !dbg !38
  %692 = insertelement <4 x float> poison, float %361, i64 0, !dbg !38
  %693 = shufflevector <4 x float> %692, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %694 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %693, <4 x float> %651, <4 x float> %691), !dbg !38
  %695 = insertelement <4 x float> poison, float %369, i64 0, !dbg !38
  %696 = shufflevector <4 x float> %695, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %697 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %696, <4 x float> %658, <4 x float> %694), !dbg !38
  %698 = insertelement <4 x float> poison, float %377, i64 0, !dbg !38
  %699 = shufflevector <4 x float> %698, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %700 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %699, <4 x float> %665, <4 x float> %697), !dbg !38
  %701 = insertelement <4 x float> poison, float %385, i64 0, !dbg !38
  %702 = shufflevector <4 x float> %701, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %703 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %702, <4 x float> %672, <4 x float> %700), !dbg !38
  %704 = insertelement <4 x float> poison, float %314, i64 0, !dbg !38
  %705 = shufflevector <4 x float> %704, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %706 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %705, <4 x float> %609, <4 x float> %528), !dbg !38
  %707 = insertelement <4 x float> poison, float %322, i64 0, !dbg !38
  %708 = shufflevector <4 x float> %707, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %709 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %708, <4 x float> %616, <4 x float> %706), !dbg !38
  %710 = insertelement <4 x float> poison, float %330, i64 0, !dbg !38
  %711 = shufflevector <4 x float> %710, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %712 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %711, <4 x float> %623, <4 x float> %709), !dbg !38
  %713 = insertelement <4 x float> poison, float %338, i64 0, !dbg !38
  %714 = shufflevector <4 x float> %713, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %715 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %714, <4 x float> %630, <4 x float> %712), !dbg !38
  %716 = insertelement <4 x float> poison, float %346, i64 0, !dbg !38
  %717 = shufflevector <4 x float> %716, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %718 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %717, <4 x float> %637, <4 x float> %715), !dbg !38
  %719 = insertelement <4 x float> poison, float %354, i64 0, !dbg !38
  %720 = shufflevector <4 x float> %719, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %721 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %720, <4 x float> %644, <4 x float> %718), !dbg !38
  %722 = insertelement <4 x float> poison, float %362, i64 0, !dbg !38
  %723 = shufflevector <4 x float> %722, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %724 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %723, <4 x float> %651, <4 x float> %721), !dbg !38
  %725 = insertelement <4 x float> poison, float %370, i64 0, !dbg !38
  %726 = shufflevector <4 x float> %725, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %727 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %726, <4 x float> %658, <4 x float> %724), !dbg !38
  %728 = insertelement <4 x float> poison, float %378, i64 0, !dbg !38
  %729 = shufflevector <4 x float> %728, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %730 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %729, <4 x float> %665, <4 x float> %727), !dbg !38
  %731 = insertelement <4 x float> poison, float %386, i64 0, !dbg !38
  %732 = shufflevector <4 x float> %731, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %733 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %732, <4 x float> %672, <4 x float> %730), !dbg !38
  %734 = insertelement <4 x float> poison, float %315, i64 0, !dbg !38
  %735 = shufflevector <4 x float> %734, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %736 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %735, <4 x float> %609, <4 x float> %543), !dbg !38
  %737 = insertelement <4 x float> poison, float %323, i64 0, !dbg !38
  %738 = shufflevector <4 x float> %737, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %739 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %738, <4 x float> %616, <4 x float> %736), !dbg !38
  %740 = insertelement <4 x float> poison, float %331, i64 0, !dbg !38
  %741 = shufflevector <4 x float> %740, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %742 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %741, <4 x float> %623, <4 x float> %739), !dbg !38
  %743 = insertelement <4 x float> poison, float %339, i64 0, !dbg !38
  %744 = shufflevector <4 x float> %743, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %745 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %744, <4 x float> %630, <4 x float> %742), !dbg !38
  %746 = insertelement <4 x float> poison, float %347, i64 0, !dbg !38
  %747 = shufflevector <4 x float> %746, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %748 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %747, <4 x float> %637, <4 x float> %745), !dbg !38
  %749 = insertelement <4 x float> poison, float %355, i64 0, !dbg !38
  %750 = shufflevector <4 x float> %749, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %751 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %750, <4 x float> %644, <4 x float> %748), !dbg !38
  %752 = insertelement <4 x float> poison, float %363, i64 0, !dbg !38
  %753 = shufflevector <4 x float> %752, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %754 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %753, <4 x float> %651, <4 x float> %751), !dbg !38
  %755 = insertelement <4 x float> poison, float %371, i64 0, !dbg !38
  %756 = shufflevector <4 x float> %755, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %757 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %756, <4 x float> %658, <4 x float> %754), !dbg !38
  %758 = insertelement <4 x float> poison, float %379, i64 0, !dbg !38
  %759 = shufflevector <4 x float> %758, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %760 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %759, <4 x float> %665, <4 x float> %757), !dbg !38
  %761 = insertelement <4 x float> poison, float %387, i64 0, !dbg !38
  %762 = shufflevector <4 x float> %761, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %763 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %762, <4 x float> %672, <4 x float> %760), !dbg !38
  %764 = insertelement <4 x float> poison, float %316, i64 0, !dbg !38
  %765 = shufflevector <4 x float> %764, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %766 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %765, <4 x float> %609, <4 x float> %558), !dbg !38
  %767 = insertelement <4 x float> poison, float %324, i64 0, !dbg !38
  %768 = shufflevector <4 x float> %767, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %769 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %768, <4 x float> %616, <4 x float> %766), !dbg !38
  %770 = insertelement <4 x float> poison, float %332, i64 0, !dbg !38
  %771 = shufflevector <4 x float> %770, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %772 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %771, <4 x float> %623, <4 x float> %769), !dbg !38
  %773 = insertelement <4 x float> poison, float %340, i64 0, !dbg !38
  %774 = shufflevector <4 x float> %773, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %775 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %774, <4 x float> %630, <4 x float> %772), !dbg !38
  %776 = insertelement <4 x float> poison, float %348, i64 0, !dbg !38
  %777 = shufflevector <4 x float> %776, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %778 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %777, <4 x float> %637, <4 x float> %775), !dbg !38
  %779 = insertelement <4 x float> poison, float %356, i64 0, !dbg !38
  %780 = shufflevector <4 x float> %779, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %781 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %780, <4 x float> %644, <4 x float> %778), !dbg !38
  %782 = insertelement <4 x float> poison, float %364, i64 0, !dbg !38
  %783 = shufflevector <4 x float> %782, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %784 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %783, <4 x float> %651, <4 x float> %781), !dbg !38
  %785 = insertelement <4 x float> poison, float %372, i64 0, !dbg !38
  %786 = shufflevector <4 x float> %785, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %787 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %786, <4 x float> %658, <4 x float> %784), !dbg !38
  %788 = insertelement <4 x float> poison, float %380, i64 0, !dbg !38
  %789 = shufflevector <4 x float> %788, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %790 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %789, <4 x float> %665, <4 x float> %787), !dbg !38
  %791 = insertelement <4 x float> poison, float %388, i64 0, !dbg !38
  %792 = shufflevector <4 x float> %791, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %793 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %792, <4 x float> %672, <4 x float> %790), !dbg !38
  %794 = insertelement <4 x float> poison, float %317, i64 0, !dbg !38
  %795 = shufflevector <4 x float> %794, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %796 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %795, <4 x float> %609, <4 x float> %573), !dbg !38
  %797 = insertelement <4 x float> poison, float %325, i64 0, !dbg !38
  %798 = shufflevector <4 x float> %797, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %799 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %798, <4 x float> %616, <4 x float> %796), !dbg !38
  %800 = insertelement <4 x float> poison, float %333, i64 0, !dbg !38
  %801 = shufflevector <4 x float> %800, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %802 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %801, <4 x float> %623, <4 x float> %799), !dbg !38
  %803 = insertelement <4 x float> poison, float %341, i64 0, !dbg !38
  %804 = shufflevector <4 x float> %803, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %805 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %804, <4 x float> %630, <4 x float> %802), !dbg !38
  %806 = insertelement <4 x float> poison, float %349, i64 0, !dbg !38
  %807 = shufflevector <4 x float> %806, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %808 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %807, <4 x float> %637, <4 x float> %805), !dbg !38
  %809 = insertelement <4 x float> poison, float %357, i64 0, !dbg !38
  %810 = shufflevector <4 x float> %809, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %811 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %810, <4 x float> %644, <4 x float> %808), !dbg !38
  %812 = insertelement <4 x float> poison, float %365, i64 0, !dbg !38
  %813 = shufflevector <4 x float> %812, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %814 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %813, <4 x float> %651, <4 x float> %811), !dbg !38
  %815 = insertelement <4 x float> poison, float %373, i64 0, !dbg !38
  %816 = shufflevector <4 x float> %815, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %817 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %816, <4 x float> %658, <4 x float> %814), !dbg !38
  %818 = insertelement <4 x float> poison, float %381, i64 0, !dbg !38
  %819 = shufflevector <4 x float> %818, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %820 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %819, <4 x float> %665, <4 x float> %817), !dbg !38
  %821 = insertelement <4 x float> poison, float %389, i64 0, !dbg !38
  %822 = shufflevector <4 x float> %821, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %823 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %822, <4 x float> %672, <4 x float> %820), !dbg !38
  %824 = insertelement <4 x float> poison, float %318, i64 0, !dbg !38
  %825 = shufflevector <4 x float> %824, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %826 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %825, <4 x float> %609, <4 x float> %588), !dbg !38
  %827 = insertelement <4 x float> poison, float %326, i64 0, !dbg !38
  %828 = shufflevector <4 x float> %827, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %829 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %828, <4 x float> %616, <4 x float> %826), !dbg !38
  %830 = insertelement <4 x float> poison, float %334, i64 0, !dbg !38
  %831 = shufflevector <4 x float> %830, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %832 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %831, <4 x float> %623, <4 x float> %829), !dbg !38
  %833 = insertelement <4 x float> poison, float %342, i64 0, !dbg !38
  %834 = shufflevector <4 x float> %833, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %835 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %834, <4 x float> %630, <4 x float> %832), !dbg !38
  %836 = insertelement <4 x float> poison, float %350, i64 0, !dbg !38
  %837 = shufflevector <4 x float> %836, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %838 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %837, <4 x float> %637, <4 x float> %835), !dbg !38
  %839 = insertelement <4 x float> poison, float %358, i64 0, !dbg !38
  %840 = shufflevector <4 x float> %839, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %841 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %840, <4 x float> %644, <4 x float> %838), !dbg !38
  %842 = insertelement <4 x float> poison, float %366, i64 0, !dbg !38
  %843 = shufflevector <4 x float> %842, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %844 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %843, <4 x float> %651, <4 x float> %841), !dbg !38
  %845 = insertelement <4 x float> poison, float %374, i64 0, !dbg !38
  %846 = shufflevector <4 x float> %845, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %847 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %846, <4 x float> %658, <4 x float> %844), !dbg !38
  %848 = insertelement <4 x float> poison, float %382, i64 0, !dbg !38
  %849 = shufflevector <4 x float> %848, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %850 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %849, <4 x float> %665, <4 x float> %847), !dbg !38
  %851 = insertelement <4 x float> poison, float %390, i64 0, !dbg !38
  %852 = shufflevector <4 x float> %851, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %853 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %852, <4 x float> %672, <4 x float> %850), !dbg !38
  %854 = insertelement <4 x float> poison, float %319, i64 0, !dbg !38
  %855 = shufflevector <4 x float> %854, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %856 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %855, <4 x float> %609, <4 x float> %603), !dbg !38
  %857 = insertelement <4 x float> poison, float %327, i64 0, !dbg !38
  %858 = shufflevector <4 x float> %857, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %859 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %858, <4 x float> %616, <4 x float> %856), !dbg !38
  %860 = insertelement <4 x float> poison, float %335, i64 0, !dbg !38
  %861 = shufflevector <4 x float> %860, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %862 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %861, <4 x float> %623, <4 x float> %859), !dbg !38
  %863 = insertelement <4 x float> poison, float %343, i64 0, !dbg !38
  %864 = shufflevector <4 x float> %863, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %865 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %864, <4 x float> %630, <4 x float> %862), !dbg !38
  %866 = insertelement <4 x float> poison, float %351, i64 0, !dbg !38
  %867 = shufflevector <4 x float> %866, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %868 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %867, <4 x float> %637, <4 x float> %865), !dbg !38
  %869 = insertelement <4 x float> poison, float %359, i64 0, !dbg !38
  %870 = shufflevector <4 x float> %869, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %871 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %870, <4 x float> %644, <4 x float> %868), !dbg !38
  %872 = insertelement <4 x float> poison, float %367, i64 0, !dbg !38
  %873 = shufflevector <4 x float> %872, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %874 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %873, <4 x float> %651, <4 x float> %871), !dbg !38
  %875 = insertelement <4 x float> poison, float %375, i64 0, !dbg !38
  %876 = shufflevector <4 x float> %875, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %877 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %876, <4 x float> %658, <4 x float> %874), !dbg !38
  %878 = insertelement <4 x float> poison, float %383, i64 0, !dbg !38
  %879 = shufflevector <4 x float> %878, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %880 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %879, <4 x float> %665, <4 x float> %877), !dbg !38
  %881 = insertelement <4 x float> poison, float %391, i64 0, !dbg !38
  %882 = shufflevector <4 x float> %881, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %883 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %882, <4 x float> %672, <4 x float> %880), !dbg !38
  %884 = insertelement <4 x float> poison, float %392, i64 0, !dbg !38
  %885 = shufflevector <4 x float> %884, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %886 = insertelement <4 x float> poison, float %460, i64 0, !dbg !38
  %887 = insertelement <4 x float> %886, float %461, i64 1, !dbg !38
  %888 = insertelement <4 x float> %887, float %462, i64 2, !dbg !38
  %889 = insertelement <4 x float> %888, float %463, i64 3, !dbg !38
  %890 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %885, <4 x float> %889, <4 x float> %673), !dbg !38
  %891 = insertelement <4 x float> poison, float %393, i64 0, !dbg !38
  %892 = shufflevector <4 x float> %891, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %893 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %892, <4 x float> %889, <4 x float> %703), !dbg !38
  %894 = insertelement <4 x float> poison, float %394, i64 0, !dbg !38
  %895 = shufflevector <4 x float> %894, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %896 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %895, <4 x float> %889, <4 x float> %733), !dbg !38
  %897 = insertelement <4 x float> poison, float %395, i64 0, !dbg !38
  %898 = shufflevector <4 x float> %897, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %899 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %898, <4 x float> %889, <4 x float> %763), !dbg !38
  %900 = insertelement <4 x float> poison, float %396, i64 0, !dbg !38
  %901 = shufflevector <4 x float> %900, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %902 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %901, <4 x float> %889, <4 x float> %793), !dbg !38
  %903 = insertelement <4 x float> poison, float %397, i64 0, !dbg !38
  %904 = shufflevector <4 x float> %903, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %905 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %904, <4 x float> %889, <4 x float> %823), !dbg !38
  %906 = insertelement <4 x float> poison, float %398, i64 0, !dbg !38
  %907 = shufflevector <4 x float> %906, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %908 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %907, <4 x float> %889, <4 x float> %853), !dbg !38
  %909 = insertelement <4 x float> poison, float %399, i64 0, !dbg !38
  %910 = shufflevector <4 x float> %909, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !38
  %911 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %910, <4 x float> %889, <4 x float> %883), !dbg !38
  %912 = getelementptr i8, ptr addrspace(1) %.pn1633, i64 64, !dbg !39
  %913 = getelementptr i8, ptr addrspace(1) %.pn834, i64 64, !dbg !39
  %914 = getelementptr i8, ptr addrspace(1) %.pn3235, i64 64, !dbg !40
  %915 = getelementptr i8, ptr addrspace(1) %.pn2436, i64 64, !dbg !40
  %916 = icmp ult i32 %262, %invariant.op, !dbg !41
  %917 = and i1 %271, %916, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %918 = select i1 %917, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %57, ptr addrspace(1) %912, i32 %918, i1 true) #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %61, ptr addrspace(1) %913, i32 %918, i1 true) #3, !dbg !35
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !35
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %62, ptr addrspace(1) %914, i32 %918, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %915, i32 %918, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !35
  %919 = add nuw nsw i32 %262, 16, !dbg !37
  br i1 %271, label %261, label %920, !dbg !37

920:                                              ; preds = %261
  %921 = or disjoint i32 %30, 8, !dbg !24
  %922 = or disjoint i32 %30, 16, !dbg !24
  %923 = or disjoint i32 %30, 24, !dbg !24
  %924 = or disjoint i32 %30, 32, !dbg !24
  %925 = or disjoint i32 %30, 40, !dbg !24
  %926 = or disjoint i32 %30, 48, !dbg !24
  %927 = or disjoint i32 %30, 56, !dbg !24
  %928 = or disjoint i32 %31, %194, !dbg !26
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %929 = and i32 %24, 7, !dbg !37
  %930 = mul nuw nsw i32 %929, 272, !dbg !37
  %931 = add nuw nsw i32 %930, %194, !dbg !37
  %932 = zext nneg i32 %931 to i64, !dbg !37
  %933 = getelementptr float, ptr addrspace(3) @global_smem, i64 %932, !dbg !37
  store <4 x float> %890, ptr addrspace(3) %933, align 16, !dbg !37
  %934 = getelementptr i8, ptr addrspace(3) %933, i64 272, !dbg !37
  store <4 x float> %893, ptr addrspace(3) %934, align 16, !dbg !37
  %935 = getelementptr i8, ptr addrspace(3) %933, i64 544, !dbg !37
  store <4 x float> %896, ptr addrspace(3) %935, align 16, !dbg !37
  %936 = getelementptr i8, ptr addrspace(3) %933, i64 816, !dbg !37
  store <4 x float> %899, ptr addrspace(3) %936, align 16, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %937 = mul nuw nsw i32 %929, 68, !dbg !37
  %938 = add nuw nsw i32 %937, %194, !dbg !37
  %939 = zext nneg i32 %938 to i64, !dbg !37
  %940 = getelementptr float, ptr addrspace(3) @global_smem, i64 %939, !dbg !37
  %941 = load float, ptr addrspace(3) %940, align 16, !dbg !37
  %942 = getelementptr inbounds i8, ptr addrspace(3) %940, i64 4, !dbg !37
  %943 = load float, ptr addrspace(3) %942, align 4, !dbg !37
  %944 = getelementptr inbounds i8, ptr addrspace(3) %940, i64 8, !dbg !37
  %945 = load float, ptr addrspace(3) %944, align 8, !dbg !37
  %946 = getelementptr inbounds i8, ptr addrspace(3) %940, i64 12, !dbg !37
  %947 = load float, ptr addrspace(3) %946, align 4, !dbg !37
  %948 = getelementptr i8, ptr addrspace(3) %940, i64 2176, !dbg !37
  %949 = load float, ptr addrspace(3) %948, align 16, !dbg !37
  %950 = getelementptr i8, ptr addrspace(3) %940, i64 2180, !dbg !37
  %951 = load float, ptr addrspace(3) %950, align 4, !dbg !37
  %952 = getelementptr i8, ptr addrspace(3) %940, i64 2184, !dbg !37
  %953 = load float, ptr addrspace(3) %952, align 8, !dbg !37
  %954 = getelementptr i8, ptr addrspace(3) %940, i64 2188, !dbg !37
  %955 = load float, ptr addrspace(3) %954, align 4, !dbg !37
  %956 = getelementptr i8, ptr addrspace(3) %940, i64 4352, !dbg !37
  %957 = load float, ptr addrspace(3) %956, align 16, !dbg !37
  %958 = getelementptr i8, ptr addrspace(3) %940, i64 4356, !dbg !37
  %959 = load float, ptr addrspace(3) %958, align 4, !dbg !37
  %960 = getelementptr i8, ptr addrspace(3) %940, i64 4360, !dbg !37
  %961 = load float, ptr addrspace(3) %960, align 8, !dbg !37
  %962 = getelementptr i8, ptr addrspace(3) %940, i64 4364, !dbg !37
  %963 = load float, ptr addrspace(3) %962, align 4, !dbg !37
  %964 = getelementptr i8, ptr addrspace(3) %940, i64 6528, !dbg !37
  %965 = load float, ptr addrspace(3) %964, align 16, !dbg !37
  %966 = getelementptr i8, ptr addrspace(3) %940, i64 6532, !dbg !37
  %967 = load float, ptr addrspace(3) %966, align 4, !dbg !37
  %968 = getelementptr i8, ptr addrspace(3) %940, i64 6536, !dbg !37
  %969 = load float, ptr addrspace(3) %968, align 8, !dbg !37
  %970 = getelementptr i8, ptr addrspace(3) %940, i64 6540, !dbg !37
  %971 = load float, ptr addrspace(3) %970, align 4, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  store <4 x float> %902, ptr addrspace(3) %933, align 16, !dbg !37
  store <4 x float> %905, ptr addrspace(3) %934, align 16, !dbg !37
  store <4 x float> %908, ptr addrspace(3) %935, align 16, !dbg !37
  store <4 x float> %911, ptr addrspace(3) %936, align 16, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %972 = load float, ptr addrspace(3) %940, align 16, !dbg !37
  %973 = load float, ptr addrspace(3) %942, align 4, !dbg !37
  %974 = load float, ptr addrspace(3) %944, align 8, !dbg !37
  %975 = load float, ptr addrspace(3) %946, align 4, !dbg !37
  %976 = load float, ptr addrspace(3) %948, align 16, !dbg !37
  %977 = load float, ptr addrspace(3) %950, align 4, !dbg !37
  %978 = load float, ptr addrspace(3) %952, align 8, !dbg !37
  %979 = load float, ptr addrspace(3) %954, align 4, !dbg !37
  %980 = load float, ptr addrspace(3) %956, align 16, !dbg !37
  %981 = load float, ptr addrspace(3) %958, align 4, !dbg !37
  %982 = load float, ptr addrspace(3) %960, align 8, !dbg !37
  %983 = load float, ptr addrspace(3) %962, align 4, !dbg !37
  %984 = load float, ptr addrspace(3) %964, align 16, !dbg !37
  %985 = load float, ptr addrspace(3) %966, align 4, !dbg !37
  %986 = load float, ptr addrspace(3) %968, align 8, !dbg !37
  %987 = load float, ptr addrspace(3) %970, align 4, !dbg !37
  %988 = icmp slt i32 %30, %4, !dbg !42
  %989 = icmp slt i32 %921, %4, !dbg !42
  %990 = icmp slt i32 %922, %4, !dbg !42
  %991 = icmp slt i32 %923, %4, !dbg !42
  %992 = icmp slt i32 %924, %4, !dbg !42
  %993 = icmp slt i32 %925, %4, !dbg !42
  %994 = icmp slt i32 %926, %4, !dbg !42
  %995 = icmp slt i32 %927, %4, !dbg !42
  %996 = icmp slt i32 %928, 128, !dbg !43
  %997 = and i1 %996, %988, !dbg !44
  %998 = and i1 %989, %996, !dbg !44
  %999 = and i1 %990, %996, !dbg !44
  %1000 = and i1 %991, %996, !dbg !44
  %1001 = and i1 %992, %996, !dbg !44
  %1002 = and i1 %993, %996, !dbg !44
  %1003 = and i1 %994, %996, !dbg !44
  %1004 = and i1 %995, %996, !dbg !44
  %1005 = shl i32 %30, 7, !dbg !45
  %1006 = shl i32 %921, 7, !dbg !45
  %1007 = shl i32 %922, 7, !dbg !45
  %1008 = shl i32 %923, 7, !dbg !45
  %1009 = shl i32 %924, 7, !dbg !45
  %1010 = shl i32 %925, 7, !dbg !45
  %1011 = shl i32 %926, 7, !dbg !45
  %1012 = shl i32 %927, 7, !dbg !45
  %1013 = add i32 %1005, %928, !dbg !46
  %1014 = add i32 %928, %1006, !dbg !46
  %1015 = add i32 %928, %1007, !dbg !46
  %1016 = add i32 %928, %1008, !dbg !46
  %1017 = add i32 %928, %1009, !dbg !46
  %1018 = add i32 %928, %1010, !dbg !46
  %1019 = add i32 %928, %1011, !dbg !46
  %1020 = add i32 %928, %1012, !dbg !46
  %1021 = sext i32 %928 to i64, !dbg !47
  %1022 = getelementptr float, ptr addrspace(1) %0, i64 %1021, !dbg !47
  %1023 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %997) #3, !dbg !48
  %1024 = extractvalue { i32, i32, i32, i32 } %1023, 0, !dbg !48
  %1025 = extractvalue { i32, i32, i32, i32 } %1023, 1, !dbg !48
  %1026 = extractvalue { i32, i32, i32, i32 } %1023, 2, !dbg !48
  %1027 = extractvalue { i32, i32, i32, i32 } %1023, 3, !dbg !48
  %1028 = bitcast i32 %1024 to float, !dbg !48
  %1029 = bitcast i32 %1025 to float, !dbg !48
  %1030 = bitcast i32 %1026 to float, !dbg !48
  %1031 = bitcast i32 %1027 to float, !dbg !48
  %1032 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %998) #3, !dbg !48
  %1033 = extractvalue { i32, i32, i32, i32 } %1032, 0, !dbg !48
  %1034 = extractvalue { i32, i32, i32, i32 } %1032, 1, !dbg !48
  %1035 = extractvalue { i32, i32, i32, i32 } %1032, 2, !dbg !48
  %1036 = extractvalue { i32, i32, i32, i32 } %1032, 3, !dbg !48
  %1037 = bitcast i32 %1033 to float, !dbg !48
  %1038 = bitcast i32 %1034 to float, !dbg !48
  %1039 = bitcast i32 %1035 to float, !dbg !48
  %1040 = bitcast i32 %1036 to float, !dbg !48
  %1041 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %999) #3, !dbg !48
  %1042 = extractvalue { i32, i32, i32, i32 } %1041, 0, !dbg !48
  %1043 = extractvalue { i32, i32, i32, i32 } %1041, 1, !dbg !48
  %1044 = extractvalue { i32, i32, i32, i32 } %1041, 2, !dbg !48
  %1045 = extractvalue { i32, i32, i32, i32 } %1041, 3, !dbg !48
  %1046 = bitcast i32 %1042 to float, !dbg !48
  %1047 = bitcast i32 %1043 to float, !dbg !48
  %1048 = bitcast i32 %1044 to float, !dbg !48
  %1049 = bitcast i32 %1045 to float, !dbg !48
  %1050 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %1000) #3, !dbg !48
  %1051 = extractvalue { i32, i32, i32, i32 } %1050, 0, !dbg !48
  %1052 = extractvalue { i32, i32, i32, i32 } %1050, 1, !dbg !48
  %1053 = extractvalue { i32, i32, i32, i32 } %1050, 2, !dbg !48
  %1054 = extractvalue { i32, i32, i32, i32 } %1050, 3, !dbg !48
  %1055 = bitcast i32 %1051 to float, !dbg !48
  %1056 = bitcast i32 %1052 to float, !dbg !48
  %1057 = bitcast i32 %1053 to float, !dbg !48
  %1058 = bitcast i32 %1054 to float, !dbg !48
  %1059 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %1001) #3, !dbg !48
  %1060 = extractvalue { i32, i32, i32, i32 } %1059, 0, !dbg !48
  %1061 = extractvalue { i32, i32, i32, i32 } %1059, 1, !dbg !48
  %1062 = extractvalue { i32, i32, i32, i32 } %1059, 2, !dbg !48
  %1063 = extractvalue { i32, i32, i32, i32 } %1059, 3, !dbg !48
  %1064 = bitcast i32 %1060 to float, !dbg !48
  %1065 = bitcast i32 %1061 to float, !dbg !48
  %1066 = bitcast i32 %1062 to float, !dbg !48
  %1067 = bitcast i32 %1063 to float, !dbg !48
  %1068 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %1002) #3, !dbg !48
  %1069 = extractvalue { i32, i32, i32, i32 } %1068, 0, !dbg !48
  %1070 = extractvalue { i32, i32, i32, i32 } %1068, 1, !dbg !48
  %1071 = extractvalue { i32, i32, i32, i32 } %1068, 2, !dbg !48
  %1072 = extractvalue { i32, i32, i32, i32 } %1068, 3, !dbg !48
  %1073 = bitcast i32 %1069 to float, !dbg !48
  %1074 = bitcast i32 %1070 to float, !dbg !48
  %1075 = bitcast i32 %1071 to float, !dbg !48
  %1076 = bitcast i32 %1072 to float, !dbg !48
  %1077 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %1003) #3, !dbg !48
  %1078 = extractvalue { i32, i32, i32, i32 } %1077, 0, !dbg !48
  %1079 = extractvalue { i32, i32, i32, i32 } %1077, 1, !dbg !48
  %1080 = extractvalue { i32, i32, i32, i32 } %1077, 2, !dbg !48
  %1081 = extractvalue { i32, i32, i32, i32 } %1077, 3, !dbg !48
  %1082 = bitcast i32 %1078 to float, !dbg !48
  %1083 = bitcast i32 %1079 to float, !dbg !48
  %1084 = bitcast i32 %1080 to float, !dbg !48
  %1085 = bitcast i32 %1081 to float, !dbg !48
  %1086 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1022, i1 %1004) #3, !dbg !48
  %1087 = extractvalue { i32, i32, i32, i32 } %1086, 0, !dbg !48
  %1088 = extractvalue { i32, i32, i32, i32 } %1086, 1, !dbg !48
  %1089 = extractvalue { i32, i32, i32, i32 } %1086, 2, !dbg !48
  %1090 = extractvalue { i32, i32, i32, i32 } %1086, 3, !dbg !48
  %1091 = bitcast i32 %1087 to float, !dbg !48
  %1092 = bitcast i32 %1088 to float, !dbg !48
  %1093 = bitcast i32 %1089 to float, !dbg !48
  %1094 = bitcast i32 %1090 to float, !dbg !48
  %1095 = fadd float %941, %1028, !dbg !49
  %1096 = fadd float %943, %1029, !dbg !49
  %1097 = fadd float %945, %1030, !dbg !49
  %1098 = fadd float %947, %1031, !dbg !49
  %1099 = fadd float %949, %1037, !dbg !49
  %1100 = fadd float %951, %1038, !dbg !49
  %1101 = fadd float %953, %1039, !dbg !49
  %1102 = fadd float %955, %1040, !dbg !49
  %1103 = fadd float %957, %1046, !dbg !49
  %1104 = fadd float %959, %1047, !dbg !49
  %1105 = fadd float %961, %1048, !dbg !49
  %1106 = fadd float %963, %1049, !dbg !49
  %1107 = fadd float %965, %1055, !dbg !49
  %1108 = fadd float %967, %1056, !dbg !49
  %1109 = fadd float %969, %1057, !dbg !49
  %1110 = fadd float %971, %1058, !dbg !49
  %1111 = fadd float %972, %1064, !dbg !49
  %1112 = fadd float %973, %1065, !dbg !49
  %1113 = fadd float %974, %1066, !dbg !49
  %1114 = fadd float %975, %1067, !dbg !49
  %1115 = fadd float %976, %1073, !dbg !49
  %1116 = fadd float %977, %1074, !dbg !49
  %1117 = fadd float %978, %1075, !dbg !49
  %1118 = fadd float %979, %1076, !dbg !49
  %1119 = fadd float %980, %1082, !dbg !49
  %1120 = fadd float %981, %1083, !dbg !49
  %1121 = fadd float %982, %1084, !dbg !49
  %1122 = fadd float %983, %1085, !dbg !49
  %1123 = fadd float %984, %1091, !dbg !49
  %1124 = fadd float %985, %1092, !dbg !49
  %1125 = fadd float %986, %1093, !dbg !49
  %1126 = fadd float %987, %1094, !dbg !49
  %1127 = sext i32 %1013 to i64, !dbg !50
  %1128 = getelementptr float, ptr addrspace(1) %3, i64 %1127, !dbg !50
  %1129 = sext i32 %1014 to i64, !dbg !50
  %1130 = getelementptr float, ptr addrspace(1) %3, i64 %1129, !dbg !50
  %1131 = sext i32 %1015 to i64, !dbg !50
  %1132 = getelementptr float, ptr addrspace(1) %3, i64 %1131, !dbg !50
  %1133 = sext i32 %1016 to i64, !dbg !50
  %1134 = getelementptr float, ptr addrspace(1) %3, i64 %1133, !dbg !50
  %1135 = sext i32 %1017 to i64, !dbg !50
  %1136 = getelementptr float, ptr addrspace(1) %3, i64 %1135, !dbg !50
  %1137 = sext i32 %1018 to i64, !dbg !50
  %1138 = getelementptr float, ptr addrspace(1) %3, i64 %1137, !dbg !50
  %1139 = sext i32 %1019 to i64, !dbg !50
  %1140 = getelementptr float, ptr addrspace(1) %3, i64 %1139, !dbg !50
  %1141 = sext i32 %1020 to i64, !dbg !50
  %1142 = getelementptr float, ptr addrspace(1) %3, i64 %1141, !dbg !50
  %1143 = bitcast float %1095 to i32, !dbg !51
  %1144 = bitcast float %1096 to i32, !dbg !51
  %1145 = bitcast float %1097 to i32, !dbg !51
  %1146 = bitcast float %1098 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1143, i32 %1144, i32 %1145, i32 %1146, ptr addrspace(1) %1128, i1 %997) #3, !dbg !51
  %1147 = bitcast float %1099 to i32, !dbg !51
  %1148 = bitcast float %1100 to i32, !dbg !51
  %1149 = bitcast float %1101 to i32, !dbg !51
  %1150 = bitcast float %1102 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1147, i32 %1148, i32 %1149, i32 %1150, ptr addrspace(1) %1130, i1 %998) #3, !dbg !51
  %1151 = bitcast float %1103 to i32, !dbg !51
  %1152 = bitcast float %1104 to i32, !dbg !51
  %1153 = bitcast float %1105 to i32, !dbg !51
  %1154 = bitcast float %1106 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1151, i32 %1152, i32 %1153, i32 %1154, ptr addrspace(1) %1132, i1 %999) #3, !dbg !51
  %1155 = bitcast float %1107 to i32, !dbg !51
  %1156 = bitcast float %1108 to i32, !dbg !51
  %1157 = bitcast float %1109 to i32, !dbg !51
  %1158 = bitcast float %1110 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1155, i32 %1156, i32 %1157, i32 %1158, ptr addrspace(1) %1134, i1 %1000) #3, !dbg !51
  %1159 = bitcast float %1111 to i32, !dbg !51
  %1160 = bitcast float %1112 to i32, !dbg !51
  %1161 = bitcast float %1113 to i32, !dbg !51
  %1162 = bitcast float %1114 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1159, i32 %1160, i32 %1161, i32 %1162, ptr addrspace(1) %1136, i1 %1001) #3, !dbg !51
  %1163 = bitcast float %1115 to i32, !dbg !51
  %1164 = bitcast float %1116 to i32, !dbg !51
  %1165 = bitcast float %1117 to i32, !dbg !51
  %1166 = bitcast float %1118 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1163, i32 %1164, i32 %1165, i32 %1166, ptr addrspace(1) %1138, i1 %1002) #3, !dbg !51
  %1167 = bitcast float %1119 to i32, !dbg !51
  %1168 = bitcast float %1120 to i32, !dbg !51
  %1169 = bitcast float %1121 to i32, !dbg !51
  %1170 = bitcast float %1122 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1167, i32 %1168, i32 %1169, i32 %1170, ptr addrspace(1) %1140, i1 %1003) #3, !dbg !51
  %1171 = bitcast float %1123 to i32, !dbg !51
  %1172 = bitcast float %1124 to i32, !dbg !51
  %1173 = bitcast float %1125 to i32, !dbg !51
  %1174 = bitcast float %1126 to i32, !dbg !51
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %1171, i32 %1172, i32 %1173, i32 %1174, ptr addrspace(1) %1142, i1 %1004) #3, !dbg !51
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.fmuladd.v4f32(<4 x float>, <4 x float>, <4 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czpq7gi7kzczrzz7q66x274bmlhdovndvcd5bbffbuoveorrc3kj.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/zp")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 16, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 42, column: 24, scope: !7)
!13 = !DILocation(line: 43, column: 28, scope: !7)
!14 = !DILocation(line: 43, column: 34, scope: !7)
!15 = !DILocation(line: 48, column: 22, scope: !7)
!16 = !DILocation(line: 49, column: 41, scope: !7)
!17 = !DILocation(line: 49, column: 30, scope: !7)
!18 = !DILocation(line: 49, column: 50, scope: !7)
!19 = !DILocation(line: 50, column: 40, scope: !7)
!20 = !DILocation(line: 50, column: 34, scope: !7)
!21 = !DILocation(line: 51, column: 30, scope: !7)
!22 = !DILocation(line: 53, column: 17, scope: !7)
!23 = !DILocation(line: 53, column: 40, scope: !7)
!24 = !DILocation(line: 53, column: 27, scope: !7)
!25 = !DILocation(line: 54, column: 17, scope: !7)
!26 = !DILocation(line: 54, column: 27, scope: !7)
!27 = !DILocation(line: 56, column: 52, scope: !7)
!28 = !DILocation(line: 60, column: 52, scope: !7)
!29 = !DILocation(line: 64, column: 28, scope: !7)
!30 = !DILocation(line: 64, column: 40, scope: !7)
!31 = !DILocation(line: 64, column: 13, scope: !7)
!32 = !DILocation(line: 65, column: 54, scope: !7)
!33 = !DILocation(line: 65, column: 39, scope: !7)
!34 = !DILocation(line: 65, column: 13, scope: !7)
!35 = !DILocation(line: 73, column: 24, scope: !7)
!36 = !DILocation(line: 74, column: 24, scope: !7)
!37 = !DILocation(line: 68, column: 25, scope: !7)
!38 = !DILocation(line: 77, column: 25, scope: !7)
!39 = !DILocation(line: 78, column: 13, scope: !7)
!40 = !DILocation(line: 79, column: 13, scope: !7)
!41 = !DILocation(line: 73, column: 46, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 30, scope: !7)
!48 = !DILocation(line: 90, column: 66, scope: !7)
!49 = !DILocation(line: 91, column: 17, scope: !7)
!50 = !DILocation(line: 92, column: 25, scope: !7)
!51 = !DILocation(line: 92, column: 68, scope: !7)
