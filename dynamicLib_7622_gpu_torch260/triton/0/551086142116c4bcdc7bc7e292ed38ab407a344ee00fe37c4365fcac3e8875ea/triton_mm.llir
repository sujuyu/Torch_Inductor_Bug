; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = mul i32 %3, 50, !dbg !10
  %6 = mul i32 %3, 8800, !dbg !11
  %7 = icmp eq i32 %6, 0, !dbg !12
  br i1 %7, label %common.ret, label %8, !dbg !12

common.ret:                                       ; preds = %4, %919
  ret void, !dbg !11

8:                                                ; preds = %4
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !13
  %10 = add i32 %5, 63, !dbg !14
  %11 = sdiv i32 %10, 64, !dbg !15
  %.frozen = freeze i32 %9
  %12 = sdiv i32 %.frozen, 24, !dbg !16
  %13 = shl nsw i32 %12, 3, !dbg !17
  %14 = sub nsw i32 %11, %13, !dbg !18
  %15 = tail call i32 @llvm.smin.i32(i32 %14, i32 8), !dbg !19
  %16 = srem i32 %9, %15, !dbg !20
  %17 = add nsw i32 %13, %16, !dbg !21
  %18 = mul i32 %12, 24
  %.decomposed = sub i32 %.frozen, %18
  %19 = sdiv i32 %.decomposed, %15, !dbg !22
  %20 = shl i32 %17, 6, !dbg !23
  %21 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !24
  %22 = lshr i32 %21, 2, !dbg !24
  %23 = and i32 %22, 31, !dbg !24
  %24 = or disjoint i32 %23, 32, !dbg !24
  %25 = lshr i32 %21, 4, !dbg !24
  %26 = and i32 %25, 7, !dbg !24
  %27 = shl i32 %21, 2, !dbg !24
  %28 = and i32 %27, 12, !dbg !24
  %29 = or disjoint i32 %20, %23, !dbg !25
  %30 = or disjoint i32 %20, %24, !dbg !25
  %31 = or disjoint i32 %20, %26, !dbg !24
  %32 = shl nsw i32 %19, 6, !dbg !26
  %33 = or disjoint i32 %32, %23, !dbg !27
  %34 = or disjoint i32 %32, %24, !dbg !27
  %35 = srem i32 %29, %5, !dbg !28
  %36 = srem i32 %30, %5, !dbg !28
  %37 = srem i32 %33, 176, !dbg !29
  %38 = srem i32 %34, 176, !dbg !29
  %39 = mul i32 %35, 176, !dbg !30
  %40 = mul i32 %36, 176, !dbg !30
  %41 = or disjoint i32 %39, %28, !dbg !31
  %42 = or disjoint i32 %40, %28, !dbg !31
  %43 = sext i32 %41 to i64, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !32
  %45 = sext i32 %42 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !32
  %47 = mul nsw i32 %37, 176, !dbg !33
  %48 = mul nsw i32 %38, 176, !dbg !33
  %49 = or disjoint i32 %47, %28, !dbg !34
  %50 = or disjoint i32 %48, %28, !dbg !34
  %51 = sext i32 %49 to i64, !dbg !35
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !35
  %53 = sext i32 %50 to i64, !dbg !35
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !35
  %55 = shl nuw nsw i32 %23, 4, !dbg !36
  %56 = or disjoint i32 %55, %28, !dbg !36
  %57 = zext nneg i32 %56 to i64, !dbg !36
  %58 = getelementptr float, ptr addrspace(3) @global_smem, i64 %57, !dbg !36
  %59 = shl nuw nsw i32 %24, 4, !dbg !36
  %60 = or disjoint i32 %59, %28, !dbg !36
  %61 = zext nneg i32 %60 to i64, !dbg !36
  %62 = getelementptr float, ptr addrspace(3) @global_smem, i64 %61, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %58, ptr addrspace(1) %44, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %62, ptr addrspace(1) %46, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %63 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %57, !dbg !37
  %64 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %61, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %52, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %64, ptr addrspace(1) %54, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %65 = and i32 %27, 1984
  %66 = zext nneg i32 %65 to i64
  %67 = getelementptr float, ptr addrspace(3) @global_smem, i64 %66
  %68 = getelementptr i8, ptr addrspace(3) %67, i64 64
  %69 = getelementptr i8, ptr addrspace(3) %67, i64 128
  %70 = getelementptr i8, ptr addrspace(3) %67, i64 192
  %71 = getelementptr i8, ptr addrspace(3) %67, i64 2048
  %72 = getelementptr i8, ptr addrspace(3) %67, i64 2112
  %73 = getelementptr i8, ptr addrspace(3) %67, i64 2176
  %74 = getelementptr i8, ptr addrspace(3) %67, i64 2240
  %75 = getelementptr i8, ptr addrspace(3) %67, i64 4
  %76 = getelementptr i8, ptr addrspace(3) %67, i64 68
  %77 = getelementptr i8, ptr addrspace(3) %67, i64 132
  %78 = getelementptr i8, ptr addrspace(3) %67, i64 196
  %79 = getelementptr i8, ptr addrspace(3) %67, i64 2052
  %80 = getelementptr i8, ptr addrspace(3) %67, i64 2116
  %81 = getelementptr i8, ptr addrspace(3) %67, i64 2180
  %82 = getelementptr i8, ptr addrspace(3) %67, i64 2244
  %83 = getelementptr i8, ptr addrspace(3) %67, i64 8
  %84 = getelementptr i8, ptr addrspace(3) %67, i64 72
  %85 = getelementptr i8, ptr addrspace(3) %67, i64 136
  %86 = getelementptr i8, ptr addrspace(3) %67, i64 200
  %87 = getelementptr i8, ptr addrspace(3) %67, i64 2056
  %88 = getelementptr i8, ptr addrspace(3) %67, i64 2120
  %89 = getelementptr i8, ptr addrspace(3) %67, i64 2184
  %90 = getelementptr i8, ptr addrspace(3) %67, i64 2248
  %91 = getelementptr i8, ptr addrspace(3) %67, i64 12
  %92 = getelementptr i8, ptr addrspace(3) %67, i64 76
  %93 = getelementptr i8, ptr addrspace(3) %67, i64 140
  %94 = getelementptr i8, ptr addrspace(3) %67, i64 204
  %95 = getelementptr i8, ptr addrspace(3) %67, i64 2060
  %96 = getelementptr i8, ptr addrspace(3) %67, i64 2124
  %97 = getelementptr i8, ptr addrspace(3) %67, i64 2188
  %98 = getelementptr i8, ptr addrspace(3) %67, i64 2252
  %99 = getelementptr i8, ptr addrspace(3) %67, i64 16
  %100 = getelementptr i8, ptr addrspace(3) %67, i64 80
  %101 = getelementptr i8, ptr addrspace(3) %67, i64 144
  %102 = getelementptr i8, ptr addrspace(3) %67, i64 208
  %103 = getelementptr i8, ptr addrspace(3) %67, i64 2064
  %104 = getelementptr i8, ptr addrspace(3) %67, i64 2128
  %105 = getelementptr i8, ptr addrspace(3) %67, i64 2192
  %106 = getelementptr i8, ptr addrspace(3) %67, i64 2256
  %107 = getelementptr i8, ptr addrspace(3) %67, i64 20
  %108 = getelementptr i8, ptr addrspace(3) %67, i64 84
  %109 = getelementptr i8, ptr addrspace(3) %67, i64 148
  %110 = getelementptr i8, ptr addrspace(3) %67, i64 212
  %111 = getelementptr i8, ptr addrspace(3) %67, i64 2068
  %112 = getelementptr i8, ptr addrspace(3) %67, i64 2132
  %113 = getelementptr i8, ptr addrspace(3) %67, i64 2196
  %114 = getelementptr i8, ptr addrspace(3) %67, i64 2260
  %115 = getelementptr i8, ptr addrspace(3) %67, i64 24
  %116 = getelementptr i8, ptr addrspace(3) %67, i64 88
  %117 = getelementptr i8, ptr addrspace(3) %67, i64 152
  %118 = getelementptr i8, ptr addrspace(3) %67, i64 216
  %119 = getelementptr i8, ptr addrspace(3) %67, i64 2072
  %120 = getelementptr i8, ptr addrspace(3) %67, i64 2136
  %121 = getelementptr i8, ptr addrspace(3) %67, i64 2200
  %122 = getelementptr i8, ptr addrspace(3) %67, i64 2264
  %123 = getelementptr i8, ptr addrspace(3) %67, i64 28
  %124 = getelementptr i8, ptr addrspace(3) %67, i64 92
  %125 = getelementptr i8, ptr addrspace(3) %67, i64 156
  %126 = getelementptr i8, ptr addrspace(3) %67, i64 220
  %127 = getelementptr i8, ptr addrspace(3) %67, i64 2076
  %128 = getelementptr i8, ptr addrspace(3) %67, i64 2140
  %129 = getelementptr i8, ptr addrspace(3) %67, i64 2204
  %130 = getelementptr i8, ptr addrspace(3) %67, i64 2268
  %131 = getelementptr i8, ptr addrspace(3) %67, i64 32
  %132 = getelementptr i8, ptr addrspace(3) %67, i64 96
  %133 = getelementptr i8, ptr addrspace(3) %67, i64 160
  %134 = getelementptr i8, ptr addrspace(3) %67, i64 224
  %135 = getelementptr i8, ptr addrspace(3) %67, i64 2080
  %136 = getelementptr i8, ptr addrspace(3) %67, i64 2144
  %137 = getelementptr i8, ptr addrspace(3) %67, i64 2208
  %138 = getelementptr i8, ptr addrspace(3) %67, i64 2272
  %139 = getelementptr i8, ptr addrspace(3) %67, i64 36
  %140 = getelementptr i8, ptr addrspace(3) %67, i64 100
  %141 = getelementptr i8, ptr addrspace(3) %67, i64 164
  %142 = getelementptr i8, ptr addrspace(3) %67, i64 228
  %143 = getelementptr i8, ptr addrspace(3) %67, i64 2084
  %144 = getelementptr i8, ptr addrspace(3) %67, i64 2148
  %145 = getelementptr i8, ptr addrspace(3) %67, i64 2212
  %146 = getelementptr i8, ptr addrspace(3) %67, i64 2276
  %147 = getelementptr i8, ptr addrspace(3) %67, i64 40
  %148 = getelementptr i8, ptr addrspace(3) %67, i64 104
  %149 = getelementptr i8, ptr addrspace(3) %67, i64 168
  %150 = getelementptr i8, ptr addrspace(3) %67, i64 232
  %151 = getelementptr i8, ptr addrspace(3) %67, i64 2088
  %152 = getelementptr i8, ptr addrspace(3) %67, i64 2152
  %153 = getelementptr i8, ptr addrspace(3) %67, i64 2216
  %154 = getelementptr i8, ptr addrspace(3) %67, i64 2280
  %155 = getelementptr i8, ptr addrspace(3) %67, i64 44
  %156 = getelementptr i8, ptr addrspace(3) %67, i64 108
  %157 = getelementptr i8, ptr addrspace(3) %67, i64 172
  %158 = getelementptr i8, ptr addrspace(3) %67, i64 236
  %159 = getelementptr i8, ptr addrspace(3) %67, i64 2092
  %160 = getelementptr i8, ptr addrspace(3) %67, i64 2156
  %161 = getelementptr i8, ptr addrspace(3) %67, i64 2220
  %162 = getelementptr i8, ptr addrspace(3) %67, i64 2284
  %163 = getelementptr i8, ptr addrspace(3) %67, i64 48
  %164 = getelementptr i8, ptr addrspace(3) %67, i64 112
  %165 = getelementptr i8, ptr addrspace(3) %67, i64 176
  %166 = getelementptr i8, ptr addrspace(3) %67, i64 240
  %167 = getelementptr i8, ptr addrspace(3) %67, i64 2096
  %168 = getelementptr i8, ptr addrspace(3) %67, i64 2160
  %169 = getelementptr i8, ptr addrspace(3) %67, i64 2224
  %170 = getelementptr i8, ptr addrspace(3) %67, i64 2288
  %171 = getelementptr i8, ptr addrspace(3) %67, i64 52
  %172 = getelementptr i8, ptr addrspace(3) %67, i64 116
  %173 = getelementptr i8, ptr addrspace(3) %67, i64 180
  %174 = getelementptr i8, ptr addrspace(3) %67, i64 244
  %175 = getelementptr i8, ptr addrspace(3) %67, i64 2100
  %176 = getelementptr i8, ptr addrspace(3) %67, i64 2164
  %177 = getelementptr i8, ptr addrspace(3) %67, i64 2228
  %178 = getelementptr i8, ptr addrspace(3) %67, i64 2292
  %179 = getelementptr i8, ptr addrspace(3) %67, i64 56
  %180 = getelementptr i8, ptr addrspace(3) %67, i64 120
  %181 = getelementptr i8, ptr addrspace(3) %67, i64 184
  %182 = getelementptr i8, ptr addrspace(3) %67, i64 248
  %183 = getelementptr i8, ptr addrspace(3) %67, i64 2104
  %184 = getelementptr i8, ptr addrspace(3) %67, i64 2168
  %185 = getelementptr i8, ptr addrspace(3) %67, i64 2232
  %186 = getelementptr i8, ptr addrspace(3) %67, i64 2296
  %187 = getelementptr i8, ptr addrspace(3) %67, i64 60
  %188 = getelementptr i8, ptr addrspace(3) %67, i64 124
  %189 = getelementptr i8, ptr addrspace(3) %67, i64 188
  %190 = getelementptr i8, ptr addrspace(3) %67, i64 252
  %191 = getelementptr i8, ptr addrspace(3) %67, i64 2108
  %192 = getelementptr i8, ptr addrspace(3) %67, i64 2172
  %193 = getelementptr i8, ptr addrspace(3) %67, i64 2236
  %194 = getelementptr i8, ptr addrspace(3) %67, i64 2300
  %195 = and i32 %27, 60
  %196 = shl nuw nsw i32 %195, 4
  %197 = zext nneg i32 %196 to i64
  %198 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %197
  %199 = getelementptr i8, ptr addrspace(3) %198, i64 64
  %200 = getelementptr i8, ptr addrspace(3) %198, i64 128
  %201 = getelementptr i8, ptr addrspace(3) %198, i64 192
  %202 = getelementptr i8, ptr addrspace(3) %198, i64 4
  %203 = getelementptr i8, ptr addrspace(3) %198, i64 68
  %204 = getelementptr i8, ptr addrspace(3) %198, i64 132
  %205 = getelementptr i8, ptr addrspace(3) %198, i64 196
  %206 = getelementptr i8, ptr addrspace(3) %198, i64 8
  %207 = getelementptr i8, ptr addrspace(3) %198, i64 72
  %208 = getelementptr i8, ptr addrspace(3) %198, i64 136
  %209 = getelementptr i8, ptr addrspace(3) %198, i64 200
  %210 = getelementptr i8, ptr addrspace(3) %198, i64 12
  %211 = getelementptr i8, ptr addrspace(3) %198, i64 76
  %212 = getelementptr i8, ptr addrspace(3) %198, i64 140
  %213 = getelementptr i8, ptr addrspace(3) %198, i64 204
  %214 = getelementptr i8, ptr addrspace(3) %198, i64 16
  %215 = getelementptr i8, ptr addrspace(3) %198, i64 80
  %216 = getelementptr i8, ptr addrspace(3) %198, i64 144
  %217 = getelementptr i8, ptr addrspace(3) %198, i64 208
  %218 = getelementptr i8, ptr addrspace(3) %198, i64 20
  %219 = getelementptr i8, ptr addrspace(3) %198, i64 84
  %220 = getelementptr i8, ptr addrspace(3) %198, i64 148
  %221 = getelementptr i8, ptr addrspace(3) %198, i64 212
  %222 = getelementptr i8, ptr addrspace(3) %198, i64 24
  %223 = getelementptr i8, ptr addrspace(3) %198, i64 88
  %224 = getelementptr i8, ptr addrspace(3) %198, i64 152
  %225 = getelementptr i8, ptr addrspace(3) %198, i64 216
  %226 = getelementptr i8, ptr addrspace(3) %198, i64 28
  %227 = getelementptr i8, ptr addrspace(3) %198, i64 92
  %228 = getelementptr i8, ptr addrspace(3) %198, i64 156
  %229 = getelementptr i8, ptr addrspace(3) %198, i64 220
  %230 = getelementptr i8, ptr addrspace(3) %198, i64 32
  %231 = getelementptr i8, ptr addrspace(3) %198, i64 96
  %232 = getelementptr i8, ptr addrspace(3) %198, i64 160
  %233 = getelementptr i8, ptr addrspace(3) %198, i64 224
  %234 = getelementptr i8, ptr addrspace(3) %198, i64 36
  %235 = getelementptr i8, ptr addrspace(3) %198, i64 100
  %236 = getelementptr i8, ptr addrspace(3) %198, i64 164
  %237 = getelementptr i8, ptr addrspace(3) %198, i64 228
  %238 = getelementptr i8, ptr addrspace(3) %198, i64 40
  %239 = getelementptr i8, ptr addrspace(3) %198, i64 104
  %240 = getelementptr i8, ptr addrspace(3) %198, i64 168
  %241 = getelementptr i8, ptr addrspace(3) %198, i64 232
  %242 = getelementptr i8, ptr addrspace(3) %198, i64 44
  %243 = getelementptr i8, ptr addrspace(3) %198, i64 108
  %244 = getelementptr i8, ptr addrspace(3) %198, i64 172
  %245 = getelementptr i8, ptr addrspace(3) %198, i64 236
  %246 = getelementptr i8, ptr addrspace(3) %198, i64 48
  %247 = getelementptr i8, ptr addrspace(3) %198, i64 112
  %248 = getelementptr i8, ptr addrspace(3) %198, i64 176
  %249 = getelementptr i8, ptr addrspace(3) %198, i64 240
  %250 = getelementptr i8, ptr addrspace(3) %198, i64 52
  %251 = getelementptr i8, ptr addrspace(3) %198, i64 116
  %252 = getelementptr i8, ptr addrspace(3) %198, i64 180
  %253 = getelementptr i8, ptr addrspace(3) %198, i64 244
  %254 = getelementptr i8, ptr addrspace(3) %198, i64 56
  %255 = getelementptr i8, ptr addrspace(3) %198, i64 120
  %256 = getelementptr i8, ptr addrspace(3) %198, i64 184
  %257 = getelementptr i8, ptr addrspace(3) %198, i64 248
  %258 = getelementptr i8, ptr addrspace(3) %198, i64 60
  %259 = getelementptr i8, ptr addrspace(3) %198, i64 124
  %260 = getelementptr i8, ptr addrspace(3) %198, i64 188
  %261 = getelementptr i8, ptr addrspace(3) %198, i64 252
  br label %262, !dbg !38

262:                                              ; preds = %8, %262
  %.pn2498 = phi ptr addrspace(1) [ %54, %8 ], [ %916, %262 ]
  %.pn3297 = phi ptr addrspace(1) [ %52, %8 ], [ %915, %262 ]
  %.pn896 = phi ptr addrspace(1) [ %46, %8 ], [ %914, %262 ]
  %.pn1695 = phi ptr addrspace(1) [ %44, %8 ], [ %913, %262 ]
  %263 = phi i32 [ 0, %8 ], [ %918, %262 ]
  %264 = phi <4 x float> [ zeroinitializer, %8 ], [ %912, %262 ]
  %265 = phi <4 x float> [ zeroinitializer, %8 ], [ %909, %262 ]
  %266 = phi <4 x float> [ zeroinitializer, %8 ], [ %906, %262 ]
  %267 = phi <4 x float> [ zeroinitializer, %8 ], [ %903, %262 ]
  %268 = phi <4 x float> [ zeroinitializer, %8 ], [ %900, %262 ]
  %269 = phi <4 x float> [ zeroinitializer, %8 ], [ %897, %262 ]
  %270 = phi <4 x float> [ zeroinitializer, %8 ], [ %894, %262 ]
  %271 = phi <4 x float> [ zeroinitializer, %8 ], [ %891, %262 ]
  %272 = icmp ult i32 %263, 160, !dbg !38
  %273 = load float, ptr addrspace(3) %67, align 16, !dbg !36
  %274 = load float, ptr addrspace(3) %68, align 16, !dbg !36
  %275 = load float, ptr addrspace(3) %69, align 16, !dbg !36
  %276 = load float, ptr addrspace(3) %70, align 16, !dbg !36
  %277 = load float, ptr addrspace(3) %71, align 16, !dbg !36
  %278 = load float, ptr addrspace(3) %72, align 16, !dbg !36
  %279 = load float, ptr addrspace(3) %73, align 16, !dbg !36
  %280 = load float, ptr addrspace(3) %74, align 16, !dbg !36
  %281 = load float, ptr addrspace(3) %75, align 4, !dbg !36
  %282 = load float, ptr addrspace(3) %76, align 4, !dbg !36
  %283 = load float, ptr addrspace(3) %77, align 4, !dbg !36
  %284 = load float, ptr addrspace(3) %78, align 4, !dbg !36
  %285 = load float, ptr addrspace(3) %79, align 4, !dbg !36
  %286 = load float, ptr addrspace(3) %80, align 4, !dbg !36
  %287 = load float, ptr addrspace(3) %81, align 4, !dbg !36
  %288 = load float, ptr addrspace(3) %82, align 4, !dbg !36
  %289 = load float, ptr addrspace(3) %83, align 8, !dbg !36
  %290 = load float, ptr addrspace(3) %84, align 8, !dbg !36
  %291 = load float, ptr addrspace(3) %85, align 8, !dbg !36
  %292 = load float, ptr addrspace(3) %86, align 8, !dbg !36
  %293 = load float, ptr addrspace(3) %87, align 8, !dbg !36
  %294 = load float, ptr addrspace(3) %88, align 8, !dbg !36
  %295 = load float, ptr addrspace(3) %89, align 8, !dbg !36
  %296 = load float, ptr addrspace(3) %90, align 8, !dbg !36
  %297 = load float, ptr addrspace(3) %91, align 4, !dbg !36
  %298 = load float, ptr addrspace(3) %92, align 4, !dbg !36
  %299 = load float, ptr addrspace(3) %93, align 4, !dbg !36
  %300 = load float, ptr addrspace(3) %94, align 4, !dbg !36
  %301 = load float, ptr addrspace(3) %95, align 4, !dbg !36
  %302 = load float, ptr addrspace(3) %96, align 4, !dbg !36
  %303 = load float, ptr addrspace(3) %97, align 4, !dbg !36
  %304 = load float, ptr addrspace(3) %98, align 4, !dbg !36
  %305 = load float, ptr addrspace(3) %99, align 16, !dbg !36
  %306 = load float, ptr addrspace(3) %100, align 16, !dbg !36
  %307 = load float, ptr addrspace(3) %101, align 16, !dbg !36
  %308 = load float, ptr addrspace(3) %102, align 16, !dbg !36
  %309 = load float, ptr addrspace(3) %103, align 16, !dbg !36
  %310 = load float, ptr addrspace(3) %104, align 16, !dbg !36
  %311 = load float, ptr addrspace(3) %105, align 16, !dbg !36
  %312 = load float, ptr addrspace(3) %106, align 16, !dbg !36
  %313 = load float, ptr addrspace(3) %107, align 4, !dbg !36
  %314 = load float, ptr addrspace(3) %108, align 4, !dbg !36
  %315 = load float, ptr addrspace(3) %109, align 4, !dbg !36
  %316 = load float, ptr addrspace(3) %110, align 4, !dbg !36
  %317 = load float, ptr addrspace(3) %111, align 4, !dbg !36
  %318 = load float, ptr addrspace(3) %112, align 4, !dbg !36
  %319 = load float, ptr addrspace(3) %113, align 4, !dbg !36
  %320 = load float, ptr addrspace(3) %114, align 4, !dbg !36
  %321 = load float, ptr addrspace(3) %115, align 8, !dbg !36
  %322 = load float, ptr addrspace(3) %116, align 8, !dbg !36
  %323 = load float, ptr addrspace(3) %117, align 8, !dbg !36
  %324 = load float, ptr addrspace(3) %118, align 8, !dbg !36
  %325 = load float, ptr addrspace(3) %119, align 8, !dbg !36
  %326 = load float, ptr addrspace(3) %120, align 8, !dbg !36
  %327 = load float, ptr addrspace(3) %121, align 8, !dbg !36
  %328 = load float, ptr addrspace(3) %122, align 8, !dbg !36
  %329 = load float, ptr addrspace(3) %123, align 4, !dbg !36
  %330 = load float, ptr addrspace(3) %124, align 4, !dbg !36
  %331 = load float, ptr addrspace(3) %125, align 4, !dbg !36
  %332 = load float, ptr addrspace(3) %126, align 4, !dbg !36
  %333 = load float, ptr addrspace(3) %127, align 4, !dbg !36
  %334 = load float, ptr addrspace(3) %128, align 4, !dbg !36
  %335 = load float, ptr addrspace(3) %129, align 4, !dbg !36
  %336 = load float, ptr addrspace(3) %130, align 4, !dbg !36
  %337 = load float, ptr addrspace(3) %131, align 16, !dbg !36
  %338 = load float, ptr addrspace(3) %132, align 16, !dbg !36
  %339 = load float, ptr addrspace(3) %133, align 16, !dbg !36
  %340 = load float, ptr addrspace(3) %134, align 16, !dbg !36
  %341 = load float, ptr addrspace(3) %135, align 16, !dbg !36
  %342 = load float, ptr addrspace(3) %136, align 16, !dbg !36
  %343 = load float, ptr addrspace(3) %137, align 16, !dbg !36
  %344 = load float, ptr addrspace(3) %138, align 16, !dbg !36
  %345 = load float, ptr addrspace(3) %139, align 4, !dbg !36
  %346 = load float, ptr addrspace(3) %140, align 4, !dbg !36
  %347 = load float, ptr addrspace(3) %141, align 4, !dbg !36
  %348 = load float, ptr addrspace(3) %142, align 4, !dbg !36
  %349 = load float, ptr addrspace(3) %143, align 4, !dbg !36
  %350 = load float, ptr addrspace(3) %144, align 4, !dbg !36
  %351 = load float, ptr addrspace(3) %145, align 4, !dbg !36
  %352 = load float, ptr addrspace(3) %146, align 4, !dbg !36
  %353 = load float, ptr addrspace(3) %147, align 8, !dbg !36
  %354 = load float, ptr addrspace(3) %148, align 8, !dbg !36
  %355 = load float, ptr addrspace(3) %149, align 8, !dbg !36
  %356 = load float, ptr addrspace(3) %150, align 8, !dbg !36
  %357 = load float, ptr addrspace(3) %151, align 8, !dbg !36
  %358 = load float, ptr addrspace(3) %152, align 8, !dbg !36
  %359 = load float, ptr addrspace(3) %153, align 8, !dbg !36
  %360 = load float, ptr addrspace(3) %154, align 8, !dbg !36
  %361 = load float, ptr addrspace(3) %155, align 4, !dbg !36
  %362 = load float, ptr addrspace(3) %156, align 4, !dbg !36
  %363 = load float, ptr addrspace(3) %157, align 4, !dbg !36
  %364 = load float, ptr addrspace(3) %158, align 4, !dbg !36
  %365 = load float, ptr addrspace(3) %159, align 4, !dbg !36
  %366 = load float, ptr addrspace(3) %160, align 4, !dbg !36
  %367 = load float, ptr addrspace(3) %161, align 4, !dbg !36
  %368 = load float, ptr addrspace(3) %162, align 4, !dbg !36
  %369 = load float, ptr addrspace(3) %163, align 16, !dbg !36
  %370 = load float, ptr addrspace(3) %164, align 16, !dbg !36
  %371 = load float, ptr addrspace(3) %165, align 16, !dbg !36
  %372 = load float, ptr addrspace(3) %166, align 16, !dbg !36
  %373 = load float, ptr addrspace(3) %167, align 16, !dbg !36
  %374 = load float, ptr addrspace(3) %168, align 16, !dbg !36
  %375 = load float, ptr addrspace(3) %169, align 16, !dbg !36
  %376 = load float, ptr addrspace(3) %170, align 16, !dbg !36
  %377 = load float, ptr addrspace(3) %171, align 4, !dbg !36
  %378 = load float, ptr addrspace(3) %172, align 4, !dbg !36
  %379 = load float, ptr addrspace(3) %173, align 4, !dbg !36
  %380 = load float, ptr addrspace(3) %174, align 4, !dbg !36
  %381 = load float, ptr addrspace(3) %175, align 4, !dbg !36
  %382 = load float, ptr addrspace(3) %176, align 4, !dbg !36
  %383 = load float, ptr addrspace(3) %177, align 4, !dbg !36
  %384 = load float, ptr addrspace(3) %178, align 4, !dbg !36
  %385 = load float, ptr addrspace(3) %179, align 8, !dbg !36
  %386 = load float, ptr addrspace(3) %180, align 8, !dbg !36
  %387 = load float, ptr addrspace(3) %181, align 8, !dbg !36
  %388 = load float, ptr addrspace(3) %182, align 8, !dbg !36
  %389 = load float, ptr addrspace(3) %183, align 8, !dbg !36
  %390 = load float, ptr addrspace(3) %184, align 8, !dbg !36
  %391 = load float, ptr addrspace(3) %185, align 8, !dbg !36
  %392 = load float, ptr addrspace(3) %186, align 8, !dbg !36
  %393 = load float, ptr addrspace(3) %187, align 4, !dbg !36
  %394 = load float, ptr addrspace(3) %188, align 4, !dbg !36
  %395 = load float, ptr addrspace(3) %189, align 4, !dbg !36
  %396 = load float, ptr addrspace(3) %190, align 4, !dbg !36
  %397 = load float, ptr addrspace(3) %191, align 4, !dbg !36
  %398 = load float, ptr addrspace(3) %192, align 4, !dbg !36
  %399 = load float, ptr addrspace(3) %193, align 4, !dbg !36
  %400 = load float, ptr addrspace(3) %194, align 4, !dbg !36
  %401 = load float, ptr addrspace(3) %198, align 16, !dbg !37
  %402 = load float, ptr addrspace(3) %199, align 16, !dbg !37
  %403 = load float, ptr addrspace(3) %200, align 16, !dbg !37
  %404 = load float, ptr addrspace(3) %201, align 16, !dbg !37
  %405 = load float, ptr addrspace(3) %202, align 4, !dbg !37
  %406 = load float, ptr addrspace(3) %203, align 4, !dbg !37
  %407 = load float, ptr addrspace(3) %204, align 4, !dbg !37
  %408 = load float, ptr addrspace(3) %205, align 4, !dbg !37
  %409 = load float, ptr addrspace(3) %206, align 8, !dbg !37
  %410 = load float, ptr addrspace(3) %207, align 8, !dbg !37
  %411 = load float, ptr addrspace(3) %208, align 8, !dbg !37
  %412 = load float, ptr addrspace(3) %209, align 8, !dbg !37
  %413 = load float, ptr addrspace(3) %210, align 4, !dbg !37
  %414 = load float, ptr addrspace(3) %211, align 4, !dbg !37
  %415 = load float, ptr addrspace(3) %212, align 4, !dbg !37
  %416 = load float, ptr addrspace(3) %213, align 4, !dbg !37
  %417 = load float, ptr addrspace(3) %214, align 16, !dbg !37
  %418 = load float, ptr addrspace(3) %215, align 16, !dbg !37
  %419 = load float, ptr addrspace(3) %216, align 16, !dbg !37
  %420 = load float, ptr addrspace(3) %217, align 16, !dbg !37
  %421 = load float, ptr addrspace(3) %218, align 4, !dbg !37
  %422 = load float, ptr addrspace(3) %219, align 4, !dbg !37
  %423 = load float, ptr addrspace(3) %220, align 4, !dbg !37
  %424 = load float, ptr addrspace(3) %221, align 4, !dbg !37
  %425 = load float, ptr addrspace(3) %222, align 8, !dbg !37
  %426 = load float, ptr addrspace(3) %223, align 8, !dbg !37
  %427 = load float, ptr addrspace(3) %224, align 8, !dbg !37
  %428 = load float, ptr addrspace(3) %225, align 8, !dbg !37
  %429 = load float, ptr addrspace(3) %226, align 4, !dbg !37
  %430 = load float, ptr addrspace(3) %227, align 4, !dbg !37
  %431 = load float, ptr addrspace(3) %228, align 4, !dbg !37
  %432 = load float, ptr addrspace(3) %229, align 4, !dbg !37
  %433 = load float, ptr addrspace(3) %230, align 16, !dbg !37
  %434 = load float, ptr addrspace(3) %231, align 16, !dbg !37
  %435 = load float, ptr addrspace(3) %232, align 16, !dbg !37
  %436 = load float, ptr addrspace(3) %233, align 16, !dbg !37
  %437 = load float, ptr addrspace(3) %234, align 4, !dbg !37
  %438 = load float, ptr addrspace(3) %235, align 4, !dbg !37
  %439 = load float, ptr addrspace(3) %236, align 4, !dbg !37
  %440 = load float, ptr addrspace(3) %237, align 4, !dbg !37
  %441 = load float, ptr addrspace(3) %238, align 8, !dbg !37
  %442 = load float, ptr addrspace(3) %239, align 8, !dbg !37
  %443 = load float, ptr addrspace(3) %240, align 8, !dbg !37
  %444 = load float, ptr addrspace(3) %241, align 8, !dbg !37
  %445 = load float, ptr addrspace(3) %242, align 4, !dbg !37
  %446 = load float, ptr addrspace(3) %243, align 4, !dbg !37
  %447 = load float, ptr addrspace(3) %244, align 4, !dbg !37
  %448 = load float, ptr addrspace(3) %245, align 4, !dbg !37
  %449 = load float, ptr addrspace(3) %246, align 16, !dbg !37
  %450 = load float, ptr addrspace(3) %247, align 16, !dbg !37
  %451 = load float, ptr addrspace(3) %248, align 16, !dbg !37
  %452 = load float, ptr addrspace(3) %249, align 16, !dbg !37
  %453 = load float, ptr addrspace(3) %250, align 4, !dbg !37
  %454 = load float, ptr addrspace(3) %251, align 4, !dbg !37
  %455 = load float, ptr addrspace(3) %252, align 4, !dbg !37
  %456 = load float, ptr addrspace(3) %253, align 4, !dbg !37
  %457 = load float, ptr addrspace(3) %254, align 8, !dbg !37
  %458 = load float, ptr addrspace(3) %255, align 8, !dbg !37
  %459 = load float, ptr addrspace(3) %256, align 8, !dbg !37
  %460 = load float, ptr addrspace(3) %257, align 8, !dbg !37
  %461 = load float, ptr addrspace(3) %258, align 4, !dbg !37
  %462 = load float, ptr addrspace(3) %259, align 4, !dbg !37
  %463 = load float, ptr addrspace(3) %260, align 4, !dbg !37
  %464 = load float, ptr addrspace(3) %261, align 4, !dbg !37
  %465 = insertelement <4 x float> poison, float %273, i64 0, !dbg !39
  %466 = shufflevector <4 x float> %465, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %467 = insertelement <4 x float> poison, float %401, i64 0, !dbg !39
  %468 = insertelement <4 x float> %467, float %402, i64 1, !dbg !39
  %469 = insertelement <4 x float> %468, float %403, i64 2, !dbg !39
  %470 = insertelement <4 x float> %469, float %404, i64 3, !dbg !39
  %471 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %466, <4 x float> %470, <4 x float> %271), !dbg !39
  %472 = insertelement <4 x float> poison, float %281, i64 0, !dbg !39
  %473 = shufflevector <4 x float> %472, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %474 = insertelement <4 x float> poison, float %405, i64 0, !dbg !39
  %475 = insertelement <4 x float> %474, float %406, i64 1, !dbg !39
  %476 = insertelement <4 x float> %475, float %407, i64 2, !dbg !39
  %477 = insertelement <4 x float> %476, float %408, i64 3, !dbg !39
  %478 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %473, <4 x float> %477, <4 x float> %471), !dbg !39
  %479 = insertelement <4 x float> poison, float %289, i64 0, !dbg !39
  %480 = shufflevector <4 x float> %479, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %481 = insertelement <4 x float> poison, float %409, i64 0, !dbg !39
  %482 = insertelement <4 x float> %481, float %410, i64 1, !dbg !39
  %483 = insertelement <4 x float> %482, float %411, i64 2, !dbg !39
  %484 = insertelement <4 x float> %483, float %412, i64 3, !dbg !39
  %485 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %480, <4 x float> %484, <4 x float> %478), !dbg !39
  %486 = insertelement <4 x float> poison, float %297, i64 0, !dbg !39
  %487 = shufflevector <4 x float> %486, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %488 = insertelement <4 x float> poison, float %413, i64 0, !dbg !39
  %489 = insertelement <4 x float> %488, float %414, i64 1, !dbg !39
  %490 = insertelement <4 x float> %489, float %415, i64 2, !dbg !39
  %491 = insertelement <4 x float> %490, float %416, i64 3, !dbg !39
  %492 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %487, <4 x float> %491, <4 x float> %485), !dbg !39
  %493 = insertelement <4 x float> poison, float %305, i64 0, !dbg !39
  %494 = shufflevector <4 x float> %493, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %495 = insertelement <4 x float> poison, float %417, i64 0, !dbg !39
  %496 = insertelement <4 x float> %495, float %418, i64 1, !dbg !39
  %497 = insertelement <4 x float> %496, float %419, i64 2, !dbg !39
  %498 = insertelement <4 x float> %497, float %420, i64 3, !dbg !39
  %499 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %494, <4 x float> %498, <4 x float> %492), !dbg !39
  %500 = insertelement <4 x float> poison, float %274, i64 0, !dbg !39
  %501 = shufflevector <4 x float> %500, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %502 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %501, <4 x float> %470, <4 x float> %270), !dbg !39
  %503 = insertelement <4 x float> poison, float %282, i64 0, !dbg !39
  %504 = shufflevector <4 x float> %503, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %505 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %504, <4 x float> %477, <4 x float> %502), !dbg !39
  %506 = insertelement <4 x float> poison, float %290, i64 0, !dbg !39
  %507 = shufflevector <4 x float> %506, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %508 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %507, <4 x float> %484, <4 x float> %505), !dbg !39
  %509 = insertelement <4 x float> poison, float %298, i64 0, !dbg !39
  %510 = shufflevector <4 x float> %509, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %511 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %510, <4 x float> %491, <4 x float> %508), !dbg !39
  %512 = insertelement <4 x float> poison, float %306, i64 0, !dbg !39
  %513 = shufflevector <4 x float> %512, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %514 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %513, <4 x float> %498, <4 x float> %511), !dbg !39
  %515 = insertelement <4 x float> poison, float %275, i64 0, !dbg !39
  %516 = shufflevector <4 x float> %515, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %517 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %516, <4 x float> %470, <4 x float> %269), !dbg !39
  %518 = insertelement <4 x float> poison, float %283, i64 0, !dbg !39
  %519 = shufflevector <4 x float> %518, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %520 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %519, <4 x float> %477, <4 x float> %517), !dbg !39
  %521 = insertelement <4 x float> poison, float %291, i64 0, !dbg !39
  %522 = shufflevector <4 x float> %521, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %523 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %522, <4 x float> %484, <4 x float> %520), !dbg !39
  %524 = insertelement <4 x float> poison, float %299, i64 0, !dbg !39
  %525 = shufflevector <4 x float> %524, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %526 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %525, <4 x float> %491, <4 x float> %523), !dbg !39
  %527 = insertelement <4 x float> poison, float %307, i64 0, !dbg !39
  %528 = shufflevector <4 x float> %527, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %529 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %528, <4 x float> %498, <4 x float> %526), !dbg !39
  %530 = insertelement <4 x float> poison, float %276, i64 0, !dbg !39
  %531 = shufflevector <4 x float> %530, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %532 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %531, <4 x float> %470, <4 x float> %268), !dbg !39
  %533 = insertelement <4 x float> poison, float %284, i64 0, !dbg !39
  %534 = shufflevector <4 x float> %533, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %535 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %534, <4 x float> %477, <4 x float> %532), !dbg !39
  %536 = insertelement <4 x float> poison, float %292, i64 0, !dbg !39
  %537 = shufflevector <4 x float> %536, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %538 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %537, <4 x float> %484, <4 x float> %535), !dbg !39
  %539 = insertelement <4 x float> poison, float %300, i64 0, !dbg !39
  %540 = shufflevector <4 x float> %539, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %541 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %540, <4 x float> %491, <4 x float> %538), !dbg !39
  %542 = insertelement <4 x float> poison, float %308, i64 0, !dbg !39
  %543 = shufflevector <4 x float> %542, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %544 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %543, <4 x float> %498, <4 x float> %541), !dbg !39
  %545 = insertelement <4 x float> poison, float %277, i64 0, !dbg !39
  %546 = shufflevector <4 x float> %545, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %547 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %546, <4 x float> %470, <4 x float> %267), !dbg !39
  %548 = insertelement <4 x float> poison, float %285, i64 0, !dbg !39
  %549 = shufflevector <4 x float> %548, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %550 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %549, <4 x float> %477, <4 x float> %547), !dbg !39
  %551 = insertelement <4 x float> poison, float %293, i64 0, !dbg !39
  %552 = shufflevector <4 x float> %551, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %553 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %552, <4 x float> %484, <4 x float> %550), !dbg !39
  %554 = insertelement <4 x float> poison, float %301, i64 0, !dbg !39
  %555 = shufflevector <4 x float> %554, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %556 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %555, <4 x float> %491, <4 x float> %553), !dbg !39
  %557 = insertelement <4 x float> poison, float %309, i64 0, !dbg !39
  %558 = shufflevector <4 x float> %557, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %559 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %558, <4 x float> %498, <4 x float> %556), !dbg !39
  %560 = insertelement <4 x float> poison, float %278, i64 0, !dbg !39
  %561 = shufflevector <4 x float> %560, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %562 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %561, <4 x float> %470, <4 x float> %266), !dbg !39
  %563 = insertelement <4 x float> poison, float %286, i64 0, !dbg !39
  %564 = shufflevector <4 x float> %563, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %565 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %564, <4 x float> %477, <4 x float> %562), !dbg !39
  %566 = insertelement <4 x float> poison, float %294, i64 0, !dbg !39
  %567 = shufflevector <4 x float> %566, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %568 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %567, <4 x float> %484, <4 x float> %565), !dbg !39
  %569 = insertelement <4 x float> poison, float %302, i64 0, !dbg !39
  %570 = shufflevector <4 x float> %569, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %571 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %570, <4 x float> %491, <4 x float> %568), !dbg !39
  %572 = insertelement <4 x float> poison, float %310, i64 0, !dbg !39
  %573 = shufflevector <4 x float> %572, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %574 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %573, <4 x float> %498, <4 x float> %571), !dbg !39
  %575 = insertelement <4 x float> poison, float %279, i64 0, !dbg !39
  %576 = shufflevector <4 x float> %575, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %577 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %576, <4 x float> %470, <4 x float> %265), !dbg !39
  %578 = insertelement <4 x float> poison, float %287, i64 0, !dbg !39
  %579 = shufflevector <4 x float> %578, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %580 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %579, <4 x float> %477, <4 x float> %577), !dbg !39
  %581 = insertelement <4 x float> poison, float %295, i64 0, !dbg !39
  %582 = shufflevector <4 x float> %581, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %583 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %582, <4 x float> %484, <4 x float> %580), !dbg !39
  %584 = insertelement <4 x float> poison, float %303, i64 0, !dbg !39
  %585 = shufflevector <4 x float> %584, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %586 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %585, <4 x float> %491, <4 x float> %583), !dbg !39
  %587 = insertelement <4 x float> poison, float %311, i64 0, !dbg !39
  %588 = shufflevector <4 x float> %587, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %589 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %588, <4 x float> %498, <4 x float> %586), !dbg !39
  %590 = insertelement <4 x float> poison, float %280, i64 0, !dbg !39
  %591 = shufflevector <4 x float> %590, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %592 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %591, <4 x float> %470, <4 x float> %264), !dbg !39
  %593 = insertelement <4 x float> poison, float %288, i64 0, !dbg !39
  %594 = shufflevector <4 x float> %593, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %595 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %594, <4 x float> %477, <4 x float> %592), !dbg !39
  %596 = insertelement <4 x float> poison, float %296, i64 0, !dbg !39
  %597 = shufflevector <4 x float> %596, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %598 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %597, <4 x float> %484, <4 x float> %595), !dbg !39
  %599 = insertelement <4 x float> poison, float %304, i64 0, !dbg !39
  %600 = shufflevector <4 x float> %599, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %601 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %600, <4 x float> %491, <4 x float> %598), !dbg !39
  %602 = insertelement <4 x float> poison, float %312, i64 0, !dbg !39
  %603 = shufflevector <4 x float> %602, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %604 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %603, <4 x float> %498, <4 x float> %601), !dbg !39
  %605 = insertelement <4 x float> poison, float %313, i64 0, !dbg !39
  %606 = shufflevector <4 x float> %605, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %607 = insertelement <4 x float> poison, float %421, i64 0, !dbg !39
  %608 = insertelement <4 x float> %607, float %422, i64 1, !dbg !39
  %609 = insertelement <4 x float> %608, float %423, i64 2, !dbg !39
  %610 = insertelement <4 x float> %609, float %424, i64 3, !dbg !39
  %611 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %606, <4 x float> %610, <4 x float> %499), !dbg !39
  %612 = insertelement <4 x float> poison, float %321, i64 0, !dbg !39
  %613 = shufflevector <4 x float> %612, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %614 = insertelement <4 x float> poison, float %425, i64 0, !dbg !39
  %615 = insertelement <4 x float> %614, float %426, i64 1, !dbg !39
  %616 = insertelement <4 x float> %615, float %427, i64 2, !dbg !39
  %617 = insertelement <4 x float> %616, float %428, i64 3, !dbg !39
  %618 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %613, <4 x float> %617, <4 x float> %611), !dbg !39
  %619 = insertelement <4 x float> poison, float %329, i64 0, !dbg !39
  %620 = shufflevector <4 x float> %619, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %621 = insertelement <4 x float> poison, float %429, i64 0, !dbg !39
  %622 = insertelement <4 x float> %621, float %430, i64 1, !dbg !39
  %623 = insertelement <4 x float> %622, float %431, i64 2, !dbg !39
  %624 = insertelement <4 x float> %623, float %432, i64 3, !dbg !39
  %625 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %620, <4 x float> %624, <4 x float> %618), !dbg !39
  %626 = insertelement <4 x float> poison, float %337, i64 0, !dbg !39
  %627 = shufflevector <4 x float> %626, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %628 = insertelement <4 x float> poison, float %433, i64 0, !dbg !39
  %629 = insertelement <4 x float> %628, float %434, i64 1, !dbg !39
  %630 = insertelement <4 x float> %629, float %435, i64 2, !dbg !39
  %631 = insertelement <4 x float> %630, float %436, i64 3, !dbg !39
  %632 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %627, <4 x float> %631, <4 x float> %625), !dbg !39
  %633 = insertelement <4 x float> poison, float %345, i64 0, !dbg !39
  %634 = shufflevector <4 x float> %633, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %635 = insertelement <4 x float> poison, float %437, i64 0, !dbg !39
  %636 = insertelement <4 x float> %635, float %438, i64 1, !dbg !39
  %637 = insertelement <4 x float> %636, float %439, i64 2, !dbg !39
  %638 = insertelement <4 x float> %637, float %440, i64 3, !dbg !39
  %639 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %634, <4 x float> %638, <4 x float> %632), !dbg !39
  %640 = insertelement <4 x float> poison, float %353, i64 0, !dbg !39
  %641 = shufflevector <4 x float> %640, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %642 = insertelement <4 x float> poison, float %441, i64 0, !dbg !39
  %643 = insertelement <4 x float> %642, float %442, i64 1, !dbg !39
  %644 = insertelement <4 x float> %643, float %443, i64 2, !dbg !39
  %645 = insertelement <4 x float> %644, float %444, i64 3, !dbg !39
  %646 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %641, <4 x float> %645, <4 x float> %639), !dbg !39
  %647 = insertelement <4 x float> poison, float %361, i64 0, !dbg !39
  %648 = shufflevector <4 x float> %647, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %649 = insertelement <4 x float> poison, float %445, i64 0, !dbg !39
  %650 = insertelement <4 x float> %649, float %446, i64 1, !dbg !39
  %651 = insertelement <4 x float> %650, float %447, i64 2, !dbg !39
  %652 = insertelement <4 x float> %651, float %448, i64 3, !dbg !39
  %653 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %648, <4 x float> %652, <4 x float> %646), !dbg !39
  %654 = insertelement <4 x float> poison, float %369, i64 0, !dbg !39
  %655 = shufflevector <4 x float> %654, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %656 = insertelement <4 x float> poison, float %449, i64 0, !dbg !39
  %657 = insertelement <4 x float> %656, float %450, i64 1, !dbg !39
  %658 = insertelement <4 x float> %657, float %451, i64 2, !dbg !39
  %659 = insertelement <4 x float> %658, float %452, i64 3, !dbg !39
  %660 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %655, <4 x float> %659, <4 x float> %653), !dbg !39
  %661 = insertelement <4 x float> poison, float %377, i64 0, !dbg !39
  %662 = shufflevector <4 x float> %661, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %663 = insertelement <4 x float> poison, float %453, i64 0, !dbg !39
  %664 = insertelement <4 x float> %663, float %454, i64 1, !dbg !39
  %665 = insertelement <4 x float> %664, float %455, i64 2, !dbg !39
  %666 = insertelement <4 x float> %665, float %456, i64 3, !dbg !39
  %667 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %662, <4 x float> %666, <4 x float> %660), !dbg !39
  %668 = insertelement <4 x float> poison, float %385, i64 0, !dbg !39
  %669 = shufflevector <4 x float> %668, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %670 = insertelement <4 x float> poison, float %457, i64 0, !dbg !39
  %671 = insertelement <4 x float> %670, float %458, i64 1, !dbg !39
  %672 = insertelement <4 x float> %671, float %459, i64 2, !dbg !39
  %673 = insertelement <4 x float> %672, float %460, i64 3, !dbg !39
  %674 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %669, <4 x float> %673, <4 x float> %667), !dbg !39
  %675 = insertelement <4 x float> poison, float %314, i64 0, !dbg !39
  %676 = shufflevector <4 x float> %675, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %677 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %676, <4 x float> %610, <4 x float> %514), !dbg !39
  %678 = insertelement <4 x float> poison, float %322, i64 0, !dbg !39
  %679 = shufflevector <4 x float> %678, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %680 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %679, <4 x float> %617, <4 x float> %677), !dbg !39
  %681 = insertelement <4 x float> poison, float %330, i64 0, !dbg !39
  %682 = shufflevector <4 x float> %681, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %683 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %682, <4 x float> %624, <4 x float> %680), !dbg !39
  %684 = insertelement <4 x float> poison, float %338, i64 0, !dbg !39
  %685 = shufflevector <4 x float> %684, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %686 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %685, <4 x float> %631, <4 x float> %683), !dbg !39
  %687 = insertelement <4 x float> poison, float %346, i64 0, !dbg !39
  %688 = shufflevector <4 x float> %687, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %689 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %688, <4 x float> %638, <4 x float> %686), !dbg !39
  %690 = insertelement <4 x float> poison, float %354, i64 0, !dbg !39
  %691 = shufflevector <4 x float> %690, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %692 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %691, <4 x float> %645, <4 x float> %689), !dbg !39
  %693 = insertelement <4 x float> poison, float %362, i64 0, !dbg !39
  %694 = shufflevector <4 x float> %693, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %695 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %694, <4 x float> %652, <4 x float> %692), !dbg !39
  %696 = insertelement <4 x float> poison, float %370, i64 0, !dbg !39
  %697 = shufflevector <4 x float> %696, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %698 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %697, <4 x float> %659, <4 x float> %695), !dbg !39
  %699 = insertelement <4 x float> poison, float %378, i64 0, !dbg !39
  %700 = shufflevector <4 x float> %699, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %701 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %700, <4 x float> %666, <4 x float> %698), !dbg !39
  %702 = insertelement <4 x float> poison, float %386, i64 0, !dbg !39
  %703 = shufflevector <4 x float> %702, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %704 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %703, <4 x float> %673, <4 x float> %701), !dbg !39
  %705 = insertelement <4 x float> poison, float %315, i64 0, !dbg !39
  %706 = shufflevector <4 x float> %705, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %707 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %706, <4 x float> %610, <4 x float> %529), !dbg !39
  %708 = insertelement <4 x float> poison, float %323, i64 0, !dbg !39
  %709 = shufflevector <4 x float> %708, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %710 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %709, <4 x float> %617, <4 x float> %707), !dbg !39
  %711 = insertelement <4 x float> poison, float %331, i64 0, !dbg !39
  %712 = shufflevector <4 x float> %711, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %713 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %712, <4 x float> %624, <4 x float> %710), !dbg !39
  %714 = insertelement <4 x float> poison, float %339, i64 0, !dbg !39
  %715 = shufflevector <4 x float> %714, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %716 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %715, <4 x float> %631, <4 x float> %713), !dbg !39
  %717 = insertelement <4 x float> poison, float %347, i64 0, !dbg !39
  %718 = shufflevector <4 x float> %717, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %719 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %718, <4 x float> %638, <4 x float> %716), !dbg !39
  %720 = insertelement <4 x float> poison, float %355, i64 0, !dbg !39
  %721 = shufflevector <4 x float> %720, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %722 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %721, <4 x float> %645, <4 x float> %719), !dbg !39
  %723 = insertelement <4 x float> poison, float %363, i64 0, !dbg !39
  %724 = shufflevector <4 x float> %723, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %725 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %724, <4 x float> %652, <4 x float> %722), !dbg !39
  %726 = insertelement <4 x float> poison, float %371, i64 0, !dbg !39
  %727 = shufflevector <4 x float> %726, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %728 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %727, <4 x float> %659, <4 x float> %725), !dbg !39
  %729 = insertelement <4 x float> poison, float %379, i64 0, !dbg !39
  %730 = shufflevector <4 x float> %729, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %731 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %730, <4 x float> %666, <4 x float> %728), !dbg !39
  %732 = insertelement <4 x float> poison, float %387, i64 0, !dbg !39
  %733 = shufflevector <4 x float> %732, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %734 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %733, <4 x float> %673, <4 x float> %731), !dbg !39
  %735 = insertelement <4 x float> poison, float %316, i64 0, !dbg !39
  %736 = shufflevector <4 x float> %735, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %737 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %736, <4 x float> %610, <4 x float> %544), !dbg !39
  %738 = insertelement <4 x float> poison, float %324, i64 0, !dbg !39
  %739 = shufflevector <4 x float> %738, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %740 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %739, <4 x float> %617, <4 x float> %737), !dbg !39
  %741 = insertelement <4 x float> poison, float %332, i64 0, !dbg !39
  %742 = shufflevector <4 x float> %741, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %743 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %742, <4 x float> %624, <4 x float> %740), !dbg !39
  %744 = insertelement <4 x float> poison, float %340, i64 0, !dbg !39
  %745 = shufflevector <4 x float> %744, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %746 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %745, <4 x float> %631, <4 x float> %743), !dbg !39
  %747 = insertelement <4 x float> poison, float %348, i64 0, !dbg !39
  %748 = shufflevector <4 x float> %747, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %749 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %748, <4 x float> %638, <4 x float> %746), !dbg !39
  %750 = insertelement <4 x float> poison, float %356, i64 0, !dbg !39
  %751 = shufflevector <4 x float> %750, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %752 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %751, <4 x float> %645, <4 x float> %749), !dbg !39
  %753 = insertelement <4 x float> poison, float %364, i64 0, !dbg !39
  %754 = shufflevector <4 x float> %753, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %755 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %754, <4 x float> %652, <4 x float> %752), !dbg !39
  %756 = insertelement <4 x float> poison, float %372, i64 0, !dbg !39
  %757 = shufflevector <4 x float> %756, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %758 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %757, <4 x float> %659, <4 x float> %755), !dbg !39
  %759 = insertelement <4 x float> poison, float %380, i64 0, !dbg !39
  %760 = shufflevector <4 x float> %759, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %761 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %760, <4 x float> %666, <4 x float> %758), !dbg !39
  %762 = insertelement <4 x float> poison, float %388, i64 0, !dbg !39
  %763 = shufflevector <4 x float> %762, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %764 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %763, <4 x float> %673, <4 x float> %761), !dbg !39
  %765 = insertelement <4 x float> poison, float %317, i64 0, !dbg !39
  %766 = shufflevector <4 x float> %765, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %767 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %766, <4 x float> %610, <4 x float> %559), !dbg !39
  %768 = insertelement <4 x float> poison, float %325, i64 0, !dbg !39
  %769 = shufflevector <4 x float> %768, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %770 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %769, <4 x float> %617, <4 x float> %767), !dbg !39
  %771 = insertelement <4 x float> poison, float %333, i64 0, !dbg !39
  %772 = shufflevector <4 x float> %771, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %773 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %772, <4 x float> %624, <4 x float> %770), !dbg !39
  %774 = insertelement <4 x float> poison, float %341, i64 0, !dbg !39
  %775 = shufflevector <4 x float> %774, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %776 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %775, <4 x float> %631, <4 x float> %773), !dbg !39
  %777 = insertelement <4 x float> poison, float %349, i64 0, !dbg !39
  %778 = shufflevector <4 x float> %777, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %779 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %778, <4 x float> %638, <4 x float> %776), !dbg !39
  %780 = insertelement <4 x float> poison, float %357, i64 0, !dbg !39
  %781 = shufflevector <4 x float> %780, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %782 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %781, <4 x float> %645, <4 x float> %779), !dbg !39
  %783 = insertelement <4 x float> poison, float %365, i64 0, !dbg !39
  %784 = shufflevector <4 x float> %783, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %785 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %784, <4 x float> %652, <4 x float> %782), !dbg !39
  %786 = insertelement <4 x float> poison, float %373, i64 0, !dbg !39
  %787 = shufflevector <4 x float> %786, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %788 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %787, <4 x float> %659, <4 x float> %785), !dbg !39
  %789 = insertelement <4 x float> poison, float %381, i64 0, !dbg !39
  %790 = shufflevector <4 x float> %789, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %791 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %790, <4 x float> %666, <4 x float> %788), !dbg !39
  %792 = insertelement <4 x float> poison, float %389, i64 0, !dbg !39
  %793 = shufflevector <4 x float> %792, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %794 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %793, <4 x float> %673, <4 x float> %791), !dbg !39
  %795 = insertelement <4 x float> poison, float %318, i64 0, !dbg !39
  %796 = shufflevector <4 x float> %795, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %797 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %796, <4 x float> %610, <4 x float> %574), !dbg !39
  %798 = insertelement <4 x float> poison, float %326, i64 0, !dbg !39
  %799 = shufflevector <4 x float> %798, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %800 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %799, <4 x float> %617, <4 x float> %797), !dbg !39
  %801 = insertelement <4 x float> poison, float %334, i64 0, !dbg !39
  %802 = shufflevector <4 x float> %801, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %803 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %802, <4 x float> %624, <4 x float> %800), !dbg !39
  %804 = insertelement <4 x float> poison, float %342, i64 0, !dbg !39
  %805 = shufflevector <4 x float> %804, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %806 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %805, <4 x float> %631, <4 x float> %803), !dbg !39
  %807 = insertelement <4 x float> poison, float %350, i64 0, !dbg !39
  %808 = shufflevector <4 x float> %807, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %809 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %808, <4 x float> %638, <4 x float> %806), !dbg !39
  %810 = insertelement <4 x float> poison, float %358, i64 0, !dbg !39
  %811 = shufflevector <4 x float> %810, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %812 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %811, <4 x float> %645, <4 x float> %809), !dbg !39
  %813 = insertelement <4 x float> poison, float %366, i64 0, !dbg !39
  %814 = shufflevector <4 x float> %813, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %815 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %814, <4 x float> %652, <4 x float> %812), !dbg !39
  %816 = insertelement <4 x float> poison, float %374, i64 0, !dbg !39
  %817 = shufflevector <4 x float> %816, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %818 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %817, <4 x float> %659, <4 x float> %815), !dbg !39
  %819 = insertelement <4 x float> poison, float %382, i64 0, !dbg !39
  %820 = shufflevector <4 x float> %819, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %821 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %820, <4 x float> %666, <4 x float> %818), !dbg !39
  %822 = insertelement <4 x float> poison, float %390, i64 0, !dbg !39
  %823 = shufflevector <4 x float> %822, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %824 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %823, <4 x float> %673, <4 x float> %821), !dbg !39
  %825 = insertelement <4 x float> poison, float %319, i64 0, !dbg !39
  %826 = shufflevector <4 x float> %825, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %827 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %826, <4 x float> %610, <4 x float> %589), !dbg !39
  %828 = insertelement <4 x float> poison, float %327, i64 0, !dbg !39
  %829 = shufflevector <4 x float> %828, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %830 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %829, <4 x float> %617, <4 x float> %827), !dbg !39
  %831 = insertelement <4 x float> poison, float %335, i64 0, !dbg !39
  %832 = shufflevector <4 x float> %831, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %833 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %832, <4 x float> %624, <4 x float> %830), !dbg !39
  %834 = insertelement <4 x float> poison, float %343, i64 0, !dbg !39
  %835 = shufflevector <4 x float> %834, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %836 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %835, <4 x float> %631, <4 x float> %833), !dbg !39
  %837 = insertelement <4 x float> poison, float %351, i64 0, !dbg !39
  %838 = shufflevector <4 x float> %837, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %839 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %838, <4 x float> %638, <4 x float> %836), !dbg !39
  %840 = insertelement <4 x float> poison, float %359, i64 0, !dbg !39
  %841 = shufflevector <4 x float> %840, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %842 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %841, <4 x float> %645, <4 x float> %839), !dbg !39
  %843 = insertelement <4 x float> poison, float %367, i64 0, !dbg !39
  %844 = shufflevector <4 x float> %843, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %845 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %844, <4 x float> %652, <4 x float> %842), !dbg !39
  %846 = insertelement <4 x float> poison, float %375, i64 0, !dbg !39
  %847 = shufflevector <4 x float> %846, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %848 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %847, <4 x float> %659, <4 x float> %845), !dbg !39
  %849 = insertelement <4 x float> poison, float %383, i64 0, !dbg !39
  %850 = shufflevector <4 x float> %849, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %851 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %850, <4 x float> %666, <4 x float> %848), !dbg !39
  %852 = insertelement <4 x float> poison, float %391, i64 0, !dbg !39
  %853 = shufflevector <4 x float> %852, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %854 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %853, <4 x float> %673, <4 x float> %851), !dbg !39
  %855 = insertelement <4 x float> poison, float %320, i64 0, !dbg !39
  %856 = shufflevector <4 x float> %855, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %857 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %856, <4 x float> %610, <4 x float> %604), !dbg !39
  %858 = insertelement <4 x float> poison, float %328, i64 0, !dbg !39
  %859 = shufflevector <4 x float> %858, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %860 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %859, <4 x float> %617, <4 x float> %857), !dbg !39
  %861 = insertelement <4 x float> poison, float %336, i64 0, !dbg !39
  %862 = shufflevector <4 x float> %861, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %863 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %862, <4 x float> %624, <4 x float> %860), !dbg !39
  %864 = insertelement <4 x float> poison, float %344, i64 0, !dbg !39
  %865 = shufflevector <4 x float> %864, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %866 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %865, <4 x float> %631, <4 x float> %863), !dbg !39
  %867 = insertelement <4 x float> poison, float %352, i64 0, !dbg !39
  %868 = shufflevector <4 x float> %867, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %869 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %868, <4 x float> %638, <4 x float> %866), !dbg !39
  %870 = insertelement <4 x float> poison, float %360, i64 0, !dbg !39
  %871 = shufflevector <4 x float> %870, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %872 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %871, <4 x float> %645, <4 x float> %869), !dbg !39
  %873 = insertelement <4 x float> poison, float %368, i64 0, !dbg !39
  %874 = shufflevector <4 x float> %873, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %875 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %874, <4 x float> %652, <4 x float> %872), !dbg !39
  %876 = insertelement <4 x float> poison, float %376, i64 0, !dbg !39
  %877 = shufflevector <4 x float> %876, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %878 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %877, <4 x float> %659, <4 x float> %875), !dbg !39
  %879 = insertelement <4 x float> poison, float %384, i64 0, !dbg !39
  %880 = shufflevector <4 x float> %879, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %881 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %880, <4 x float> %666, <4 x float> %878), !dbg !39
  %882 = insertelement <4 x float> poison, float %392, i64 0, !dbg !39
  %883 = shufflevector <4 x float> %882, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %884 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %883, <4 x float> %673, <4 x float> %881), !dbg !39
  %885 = insertelement <4 x float> poison, float %393, i64 0, !dbg !39
  %886 = shufflevector <4 x float> %885, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %887 = insertelement <4 x float> poison, float %461, i64 0, !dbg !39
  %888 = insertelement <4 x float> %887, float %462, i64 1, !dbg !39
  %889 = insertelement <4 x float> %888, float %463, i64 2, !dbg !39
  %890 = insertelement <4 x float> %889, float %464, i64 3, !dbg !39
  %891 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %886, <4 x float> %890, <4 x float> %674), !dbg !39
  %892 = insertelement <4 x float> poison, float %394, i64 0, !dbg !39
  %893 = shufflevector <4 x float> %892, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %894 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %893, <4 x float> %890, <4 x float> %704), !dbg !39
  %895 = insertelement <4 x float> poison, float %395, i64 0, !dbg !39
  %896 = shufflevector <4 x float> %895, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %897 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %896, <4 x float> %890, <4 x float> %734), !dbg !39
  %898 = insertelement <4 x float> poison, float %396, i64 0, !dbg !39
  %899 = shufflevector <4 x float> %898, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %900 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %899, <4 x float> %890, <4 x float> %764), !dbg !39
  %901 = insertelement <4 x float> poison, float %397, i64 0, !dbg !39
  %902 = shufflevector <4 x float> %901, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %903 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %902, <4 x float> %890, <4 x float> %794), !dbg !39
  %904 = insertelement <4 x float> poison, float %398, i64 0, !dbg !39
  %905 = shufflevector <4 x float> %904, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %906 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %905, <4 x float> %890, <4 x float> %824), !dbg !39
  %907 = insertelement <4 x float> poison, float %399, i64 0, !dbg !39
  %908 = shufflevector <4 x float> %907, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %909 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %908, <4 x float> %890, <4 x float> %854), !dbg !39
  %910 = insertelement <4 x float> poison, float %400, i64 0, !dbg !39
  %911 = shufflevector <4 x float> %910, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !39
  %912 = tail call <4 x float> @llvm.fmuladd.v4f32(<4 x float> %911, <4 x float> %890, <4 x float> %884), !dbg !39
  %913 = getelementptr i8, ptr addrspace(1) %.pn1695, i64 64, !dbg !40
  %914 = getelementptr i8, ptr addrspace(1) %.pn896, i64 64, !dbg !40
  %915 = getelementptr i8, ptr addrspace(1) %.pn3297, i64 64, !dbg !41
  %916 = getelementptr i8, ptr addrspace(1) %.pn2498, i64 64, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %917 = select i1 %272, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %58, ptr addrspace(1) %913, i32 %917, i1 true) #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %62, ptr addrspace(1) %914, i32 %917, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %915, i32 %917, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %64, ptr addrspace(1) %916, i32 %917, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %918 = add nuw nsw i32 %263, 16, !dbg !38
  br i1 %272, label %262, label %919, !dbg !38

919:                                              ; preds = %262
  %920 = or disjoint i32 %31, 8, !dbg !25
  %921 = or disjoint i32 %31, 16, !dbg !25
  %922 = or disjoint i32 %31, 24, !dbg !25
  %923 = or disjoint i32 %31, 32, !dbg !25
  %924 = or disjoint i32 %31, 40, !dbg !25
  %925 = or disjoint i32 %31, 48, !dbg !25
  %926 = or disjoint i32 %31, 56, !dbg !25
  %927 = or disjoint i32 %32, %195, !dbg !27
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %928 = icmp slt i32 %31, %5, !dbg !42
  %929 = icmp slt i32 %920, %5, !dbg !42
  %930 = icmp slt i32 %921, %5, !dbg !42
  %931 = icmp slt i32 %922, %5, !dbg !42
  %932 = icmp slt i32 %923, %5, !dbg !42
  %933 = icmp slt i32 %924, %5, !dbg !42
  %934 = icmp slt i32 %925, %5, !dbg !42
  %935 = icmp slt i32 %926, %5, !dbg !42
  %936 = icmp slt i32 %927, 176, !dbg !43
  %937 = and i1 %936, %928, !dbg !44
  %938 = and i1 %929, %936, !dbg !44
  %939 = and i1 %930, %936, !dbg !44
  %940 = and i1 %931, %936, !dbg !44
  %941 = and i1 %932, %936, !dbg !44
  %942 = and i1 %933, %936, !dbg !44
  %943 = and i1 %934, %936, !dbg !44
  %944 = and i1 %935, %936, !dbg !44
  %945 = mul i32 %31, 176, !dbg !45
  %946 = mul i32 %920, 176, !dbg !45
  %947 = mul i32 %921, 176, !dbg !45
  %948 = mul i32 %922, 176, !dbg !45
  %949 = mul i32 %923, 176, !dbg !45
  %950 = mul i32 %924, 176, !dbg !45
  %951 = mul i32 %925, 176, !dbg !45
  %952 = mul i32 %926, 176, !dbg !45
  %953 = add i32 %945, %927, !dbg !46
  %954 = add i32 %927, %946, !dbg !46
  %955 = add i32 %927, %947, !dbg !46
  %956 = add i32 %927, %948, !dbg !46
  %957 = add i32 %927, %949, !dbg !46
  %958 = add i32 %927, %950, !dbg !46
  %959 = add i32 %927, %951, !dbg !46
  %960 = add i32 %927, %952, !dbg !46
  %961 = sext i32 %953 to i64, !dbg !47
  %962 = getelementptr float, ptr addrspace(1) %2, i64 %961, !dbg !47
  %963 = sext i32 %954 to i64, !dbg !47
  %964 = getelementptr float, ptr addrspace(1) %2, i64 %963, !dbg !47
  %965 = sext i32 %955 to i64, !dbg !47
  %966 = getelementptr float, ptr addrspace(1) %2, i64 %965, !dbg !47
  %967 = sext i32 %956 to i64, !dbg !47
  %968 = getelementptr float, ptr addrspace(1) %2, i64 %967, !dbg !47
  %969 = sext i32 %957 to i64, !dbg !47
  %970 = getelementptr float, ptr addrspace(1) %2, i64 %969, !dbg !47
  %971 = sext i32 %958 to i64, !dbg !47
  %972 = getelementptr float, ptr addrspace(1) %2, i64 %971, !dbg !47
  %973 = sext i32 %959 to i64, !dbg !47
  %974 = getelementptr float, ptr addrspace(1) %2, i64 %973, !dbg !47
  %975 = sext i32 %960 to i64, !dbg !47
  %976 = getelementptr float, ptr addrspace(1) %2, i64 %975, !dbg !47
  %977 = and i32 %25, 7, !dbg !48
  %978 = mul nuw nsw i32 %977, 272, !dbg !48
  %979 = add nuw nsw i32 %978, %195, !dbg !48
  %980 = zext nneg i32 %979 to i64, !dbg !48
  %981 = getelementptr float, ptr addrspace(3) @global_smem, i64 %980, !dbg !48
  store <4 x float> %891, ptr addrspace(3) %981, align 16, !dbg !48
  %982 = getelementptr i8, ptr addrspace(3) %981, i64 272, !dbg !48
  store <4 x float> %894, ptr addrspace(3) %982, align 16, !dbg !48
  %983 = getelementptr i8, ptr addrspace(3) %981, i64 544, !dbg !48
  store <4 x float> %897, ptr addrspace(3) %983, align 16, !dbg !48
  %984 = getelementptr i8, ptr addrspace(3) %981, i64 816, !dbg !48
  store <4 x float> %900, ptr addrspace(3) %984, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %985 = mul nuw nsw i32 %977, 68, !dbg !48
  %986 = add nuw nsw i32 %985, %195, !dbg !48
  %987 = zext nneg i32 %986 to i64, !dbg !48
  %988 = getelementptr float, ptr addrspace(3) @global_smem, i64 %987, !dbg !48
  %989 = load <4 x i32>, ptr addrspace(3) %988, align 16, !dbg !48
  %990 = getelementptr i8, ptr addrspace(3) %988, i64 2176, !dbg !48
  %991 = load <4 x i32>, ptr addrspace(3) %990, align 16, !dbg !48
  %992 = getelementptr i8, ptr addrspace(3) %988, i64 4352, !dbg !48
  %993 = load <4 x i32>, ptr addrspace(3) %992, align 16, !dbg !48
  %994 = getelementptr i8, ptr addrspace(3) %988, i64 6528, !dbg !48
  %995 = load <4 x i32>, ptr addrspace(3) %994, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  store <4 x float> %903, ptr addrspace(3) %981, align 16, !dbg !48
  store <4 x float> %906, ptr addrspace(3) %982, align 16, !dbg !48
  store <4 x float> %909, ptr addrspace(3) %983, align 16, !dbg !48
  store <4 x float> %912, ptr addrspace(3) %984, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %996 = load <4 x i32>, ptr addrspace(3) %988, align 16, !dbg !48
  %997 = load <4 x i32>, ptr addrspace(3) %990, align 16, !dbg !48
  %998 = load <4 x i32>, ptr addrspace(3) %992, align 16, !dbg !48
  %999 = load <4 x i32>, ptr addrspace(3) %994, align 16, !dbg !48
  %.extract = extractelement <4 x i32> %989, i64 0, !dbg !48
  %.extract34 = extractelement <4 x i32> %989, i64 1, !dbg !48
  %.extract36 = extractelement <4 x i32> %989, i64 2, !dbg !48
  %.extract38 = extractelement <4 x i32> %989, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract34, i32 %.extract36, i32 %.extract38, ptr addrspace(1) %962, i1 %937) #3, !dbg !48
  %.extract40 = extractelement <4 x i32> %991, i64 0, !dbg !48
  %.extract42 = extractelement <4 x i32> %991, i64 1, !dbg !48
  %.extract44 = extractelement <4 x i32> %991, i64 2, !dbg !48
  %.extract46 = extractelement <4 x i32> %991, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract40, i32 %.extract42, i32 %.extract44, i32 %.extract46, ptr addrspace(1) %964, i1 %938) #3, !dbg !48
  %.extract48 = extractelement <4 x i32> %993, i64 0, !dbg !48
  %.extract50 = extractelement <4 x i32> %993, i64 1, !dbg !48
  %.extract52 = extractelement <4 x i32> %993, i64 2, !dbg !48
  %.extract54 = extractelement <4 x i32> %993, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract48, i32 %.extract50, i32 %.extract52, i32 %.extract54, ptr addrspace(1) %966, i1 %939) #3, !dbg !48
  %.extract56 = extractelement <4 x i32> %995, i64 0, !dbg !48
  %.extract58 = extractelement <4 x i32> %995, i64 1, !dbg !48
  %.extract60 = extractelement <4 x i32> %995, i64 2, !dbg !48
  %.extract62 = extractelement <4 x i32> %995, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract56, i32 %.extract58, i32 %.extract60, i32 %.extract62, ptr addrspace(1) %968, i1 %940) #3, !dbg !48
  %.extract64 = extractelement <4 x i32> %996, i64 0, !dbg !48
  %.extract66 = extractelement <4 x i32> %996, i64 1, !dbg !48
  %.extract68 = extractelement <4 x i32> %996, i64 2, !dbg !48
  %.extract70 = extractelement <4 x i32> %996, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract64, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %970, i1 %941) #3, !dbg !48
  %.extract72 = extractelement <4 x i32> %997, i64 0, !dbg !48
  %.extract74 = extractelement <4 x i32> %997, i64 1, !dbg !48
  %.extract76 = extractelement <4 x i32> %997, i64 2, !dbg !48
  %.extract78 = extractelement <4 x i32> %997, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %972, i1 %942) #3, !dbg !48
  %.extract80 = extractelement <4 x i32> %998, i64 0, !dbg !48
  %.extract82 = extractelement <4 x i32> %998, i64 1, !dbg !48
  %.extract84 = extractelement <4 x i32> %998, i64 2, !dbg !48
  %.extract86 = extractelement <4 x i32> %998, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract80, i32 %.extract82, i32 %.extract84, i32 %.extract86, ptr addrspace(1) %974, i1 %943) #3, !dbg !48
  %.extract88 = extractelement <4 x i32> %999, i64 0, !dbg !48
  %.extract90 = extractelement <4 x i32> %999, i64 1, !dbg !48
  %.extract92 = extractelement <4 x i32> %999, i64 2, !dbg !48
  %.extract94 = extractelement <4 x i32> %999, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract88, i32 %.extract90, i32 %.extract92, i32 %.extract94, ptr addrspace(1) %976, i1 %944) #3, !dbg !48
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <4 x float> @llvm.fmuladd.v4f32(<4 x float>, <4 x float>, <4 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4dvg6wvnboxkjuzknjtzjqpv5gnr6jb4xhdurb5duzk7cinhmge.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/4d")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 30, column: 11, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 33, column: 16, scope: !7)
!13 = !DILocation(line: 42, column: 24, scope: !7)
!14 = !DILocation(line: 43, column: 28, scope: !7)
!15 = !DILocation(line: 43, column: 34, scope: !7)
!16 = !DILocation(line: 48, column: 22, scope: !7)
!17 = !DILocation(line: 49, column: 41, scope: !7)
!18 = !DILocation(line: 49, column: 30, scope: !7)
!19 = !DILocation(line: 49, column: 50, scope: !7)
!20 = !DILocation(line: 50, column: 40, scope: !7)
!21 = !DILocation(line: 50, column: 34, scope: !7)
!22 = !DILocation(line: 51, column: 30, scope: !7)
!23 = !DILocation(line: 53, column: 17, scope: !7)
!24 = !DILocation(line: 53, column: 40, scope: !7)
!25 = !DILocation(line: 53, column: 27, scope: !7)
!26 = !DILocation(line: 54, column: 17, scope: !7)
!27 = !DILocation(line: 54, column: 27, scope: !7)
!28 = !DILocation(line: 56, column: 52, scope: !7)
!29 = !DILocation(line: 60, column: 52, scope: !7)
!30 = !DILocation(line: 64, column: 28, scope: !7)
!31 = !DILocation(line: 64, column: 40, scope: !7)
!32 = !DILocation(line: 64, column: 13, scope: !7)
!33 = !DILocation(line: 65, column: 54, scope: !7)
!34 = !DILocation(line: 65, column: 39, scope: !7)
!35 = !DILocation(line: 65, column: 13, scope: !7)
!36 = !DILocation(line: 70, column: 24, scope: !7)
!37 = !DILocation(line: 71, column: 24, scope: !7)
!38 = !DILocation(line: 68, column: 25, scope: !7)
!39 = !DILocation(line: 77, column: 25, scope: !7)
!40 = !DILocation(line: 78, column: 13, scope: !7)
!41 = !DILocation(line: 79, column: 13, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 25, scope: !7)
!48 = !DILocation(line: 90, column: 67, scope: !7)
