; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 5, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 5, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 8, !dbg !13
  %12 = or disjoint i32 %10, 16, !dbg !13
  %13 = or disjoint i32 %10, 24, !dbg !13
  %14 = icmp slt i32 %10, %2, !dbg !14
  %15 = icmp slt i32 %11, %2, !dbg !14
  %16 = icmp slt i32 %12, %2, !dbg !14
  %17 = icmp slt i32 %13, %2, !dbg !14
  %18 = shl i32 %7, 1, !dbg !15
  %19 = and i32 %18, 62, !dbg !15
  %20 = icmp ult i32 %19, 50, !dbg !16
  %21 = mul i32 %10, 50, !dbg !17
  %22 = mul i32 %11, 50, !dbg !17
  %23 = mul i32 %12, 50, !dbg !17
  %24 = mul i32 %13, 50, !dbg !17
  %25 = add i32 %21, %19, !dbg !18
  %26 = add i32 %22, %19, !dbg !18
  %27 = add i32 %23, %19, !dbg !18
  %28 = add i32 %24, %19, !dbg !18
  %29 = sext i32 %25 to i64, !dbg !19
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !19
  %31 = sext i32 %26 to i64, !dbg !19
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !19
  %33 = sext i32 %27 to i64, !dbg !19
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !19
  %35 = sext i32 %28 to i64, !dbg !19
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !19
  %37 = and i1 %20, %14, !dbg !20
  %38 = and i1 %20, %15, !dbg !20
  %39 = and i1 %20, %16, !dbg !20
  %40 = and i1 %20, %17, !dbg !20
  %41 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %30, i1 %37, i32 0, i1 %37, i32 0, i1 %37) #2, !dbg !21
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !21
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !21
  %44 = bitcast i32 %42 to float, !dbg !21
  %45 = bitcast i32 %43 to float, !dbg !21
  %46 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %32, i1 %38, i32 0, i1 %38, i32 0, i1 %38) #2, !dbg !21
  %47 = extractvalue { i32, i32 } %46, 0, !dbg !21
  %48 = extractvalue { i32, i32 } %46, 1, !dbg !21
  %49 = bitcast i32 %47 to float, !dbg !21
  %50 = bitcast i32 %48 to float, !dbg !21
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %34, i1 %39, i32 0, i1 %39, i32 0, i1 %39) #2, !dbg !21
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !21
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !21
  %54 = bitcast i32 %52 to float, !dbg !21
  %55 = bitcast i32 %53 to float, !dbg !21
  %56 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %36, i1 %40, i32 0, i1 %40, i32 0, i1 %40) #2, !dbg !21
  %57 = extractvalue { i32, i32 } %56, 0, !dbg !21
  %58 = extractvalue { i32, i32 } %56, 1, !dbg !21
  %59 = bitcast i32 %57 to float, !dbg !21
  %60 = bitcast i32 %58 to float, !dbg !21
  %61 = select i1 %37, float %44, float 0xFFF0000000000000, !dbg !22
  %62 = select i1 %37, float %45, float 0xFFF0000000000000, !dbg !22
  %63 = select i1 %38, float %49, float 0xFFF0000000000000, !dbg !22
  %64 = select i1 %38, float %50, float 0xFFF0000000000000, !dbg !22
  %65 = select i1 %39, float %54, float 0xFFF0000000000000, !dbg !22
  %66 = select i1 %39, float %55, float 0xFFF0000000000000, !dbg !22
  %67 = select i1 %40, float %59, float 0xFFF0000000000000, !dbg !22
  %68 = select i1 %40, float %60, float 0xFFF0000000000000, !dbg !22
  %69 = fcmp ogt float %61, %62, !dbg !23
  %70 = fcmp uno float %61, 0.000000e+00, !dbg !28
  %71 = or i1 %69, %70, !dbg !29
  %72 = select i1 %71, float %61, float %62, !dbg !30
  %73 = fcmp ogt float %63, %64, !dbg !23
  %74 = fcmp uno float %63, 0.000000e+00, !dbg !28
  %75 = or i1 %73, %74, !dbg !29
  %76 = select i1 %75, float %63, float %64, !dbg !30
  %77 = fcmp ogt float %65, %66, !dbg !23
  %78 = fcmp uno float %65, 0.000000e+00, !dbg !28
  %79 = or i1 %77, %78, !dbg !29
  %80 = select i1 %79, float %65, float %66, !dbg !30
  %81 = fcmp ogt float %67, %68, !dbg !23
  %82 = fcmp uno float %67, 0.000000e+00, !dbg !28
  %83 = or i1 %81, %82, !dbg !29
  %84 = select i1 %83, float %67, float %68, !dbg !30
  %85 = bitcast float %72 to i32, !dbg !31
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 16, i32 31), !dbg !31
  %87 = bitcast i32 %86 to float, !dbg !31
  %88 = fcmp ogt float %72, %87, !dbg !23
  %89 = fcmp uno float %72, 0.000000e+00, !dbg !28
  %90 = or i1 %88, %89, !dbg !29
  %91 = select i1 %90, float %72, float %87, !dbg !30
  %92 = bitcast float %91 to i32, !dbg !31
  %93 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %92, i32 8, i32 31), !dbg !31
  %94 = bitcast i32 %93 to float, !dbg !31
  %95 = fcmp ogt float %91, %94, !dbg !23
  %96 = fcmp uno float %91, 0.000000e+00, !dbg !28
  %97 = or i1 %95, %96, !dbg !29
  %98 = select i1 %97, float %91, float %94, !dbg !30
  %99 = bitcast float %98 to i32, !dbg !31
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 4, i32 31), !dbg !31
  %101 = bitcast i32 %100 to float, !dbg !31
  %102 = fcmp ogt float %98, %101, !dbg !23
  %103 = fcmp uno float %98, 0.000000e+00, !dbg !28
  %104 = or i1 %102, %103, !dbg !29
  %105 = select i1 %104, float %98, float %101, !dbg !30
  %106 = bitcast float %105 to i32, !dbg !31
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 2, i32 31), !dbg !31
  %108 = bitcast i32 %107 to float, !dbg !31
  %109 = fcmp ogt float %105, %108, !dbg !23
  %110 = fcmp uno float %105, 0.000000e+00, !dbg !28
  %111 = or i1 %109, %110, !dbg !29
  %112 = select i1 %111, float %105, float %108, !dbg !30
  %113 = bitcast float %112 to i32, !dbg !31
  %114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %113, i32 1, i32 31), !dbg !31
  %115 = bitcast i32 %114 to float, !dbg !31
  %116 = fcmp ogt float %112, %115, !dbg !23
  %117 = fcmp uno float %112, 0.000000e+00, !dbg !28
  %118 = or i1 %116, %117, !dbg !29
  %119 = select i1 %118, float %112, float %115, !dbg !30
  %120 = bitcast float %76 to i32, !dbg !31
  %121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %120, i32 16, i32 31), !dbg !31
  %122 = bitcast i32 %121 to float, !dbg !31
  %123 = fcmp ogt float %76, %122, !dbg !23
  %124 = fcmp uno float %76, 0.000000e+00, !dbg !28
  %125 = or i1 %124, %123, !dbg !29
  %126 = select i1 %125, float %76, float %122, !dbg !30
  %127 = bitcast float %126 to i32, !dbg !31
  %128 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %127, i32 8, i32 31), !dbg !31
  %129 = bitcast i32 %128 to float, !dbg !31
  %130 = fcmp ogt float %126, %129, !dbg !23
  %131 = fcmp uno float %126, 0.000000e+00, !dbg !28
  %132 = or i1 %130, %131, !dbg !29
  %133 = select i1 %132, float %126, float %129, !dbg !30
  %134 = bitcast float %133 to i32, !dbg !31
  %135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %134, i32 4, i32 31), !dbg !31
  %136 = bitcast i32 %135 to float, !dbg !31
  %137 = fcmp ogt float %133, %136, !dbg !23
  %138 = fcmp uno float %133, 0.000000e+00, !dbg !28
  %139 = or i1 %137, %138, !dbg !29
  %140 = select i1 %139, float %133, float %136, !dbg !30
  %141 = bitcast float %140 to i32, !dbg !31
  %142 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %141, i32 2, i32 31), !dbg !31
  %143 = bitcast i32 %142 to float, !dbg !31
  %144 = fcmp ogt float %140, %143, !dbg !23
  %145 = fcmp uno float %140, 0.000000e+00, !dbg !28
  %146 = or i1 %144, %145, !dbg !29
  %147 = select i1 %146, float %140, float %143, !dbg !30
  %148 = bitcast float %147 to i32, !dbg !31
  %149 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %148, i32 1, i32 31), !dbg !31
  %150 = bitcast i32 %149 to float, !dbg !31
  %151 = fcmp ogt float %147, %150, !dbg !23
  %152 = fcmp uno float %147, 0.000000e+00, !dbg !28
  %153 = or i1 %151, %152, !dbg !29
  %154 = select i1 %153, float %147, float %150, !dbg !30
  %155 = bitcast float %80 to i32, !dbg !31
  %156 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %155, i32 16, i32 31), !dbg !31
  %157 = bitcast i32 %156 to float, !dbg !31
  %158 = fcmp ogt float %80, %157, !dbg !23
  %159 = fcmp uno float %80, 0.000000e+00, !dbg !28
  %160 = or i1 %159, %158, !dbg !29
  %161 = select i1 %160, float %80, float %157, !dbg !30
  %162 = bitcast float %161 to i32, !dbg !31
  %163 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %162, i32 8, i32 31), !dbg !31
  %164 = bitcast i32 %163 to float, !dbg !31
  %165 = fcmp ogt float %161, %164, !dbg !23
  %166 = fcmp uno float %161, 0.000000e+00, !dbg !28
  %167 = or i1 %165, %166, !dbg !29
  %168 = select i1 %167, float %161, float %164, !dbg !30
  %169 = bitcast float %168 to i32, !dbg !31
  %170 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %169, i32 4, i32 31), !dbg !31
  %171 = bitcast i32 %170 to float, !dbg !31
  %172 = fcmp ogt float %168, %171, !dbg !23
  %173 = fcmp uno float %168, 0.000000e+00, !dbg !28
  %174 = or i1 %172, %173, !dbg !29
  %175 = select i1 %174, float %168, float %171, !dbg !30
  %176 = bitcast float %175 to i32, !dbg !31
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %176, i32 2, i32 31), !dbg !31
  %178 = bitcast i32 %177 to float, !dbg !31
  %179 = fcmp ogt float %175, %178, !dbg !23
  %180 = fcmp uno float %175, 0.000000e+00, !dbg !28
  %181 = or i1 %179, %180, !dbg !29
  %182 = select i1 %181, float %175, float %178, !dbg !30
  %183 = bitcast float %182 to i32, !dbg !31
  %184 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %183, i32 1, i32 31), !dbg !31
  %185 = bitcast i32 %184 to float, !dbg !31
  %186 = fcmp ogt float %182, %185, !dbg !23
  %187 = fcmp uno float %182, 0.000000e+00, !dbg !28
  %188 = or i1 %186, %187, !dbg !29
  %189 = select i1 %188, float %182, float %185, !dbg !30
  %190 = bitcast float %84 to i32, !dbg !31
  %191 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %190, i32 16, i32 31), !dbg !31
  %192 = bitcast i32 %191 to float, !dbg !31
  %193 = fcmp ogt float %84, %192, !dbg !23
  %194 = fcmp uno float %84, 0.000000e+00, !dbg !28
  %195 = or i1 %194, %193, !dbg !29
  %196 = select i1 %195, float %84, float %192, !dbg !30
  %197 = bitcast float %196 to i32, !dbg !31
  %198 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %197, i32 8, i32 31), !dbg !31
  %199 = bitcast i32 %198 to float, !dbg !31
  %200 = fcmp ogt float %196, %199, !dbg !23
  %201 = fcmp uno float %196, 0.000000e+00, !dbg !28
  %202 = or i1 %200, %201, !dbg !29
  %203 = select i1 %202, float %196, float %199, !dbg !30
  %204 = bitcast float %203 to i32, !dbg !31
  %205 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %204, i32 4, i32 31), !dbg !31
  %206 = bitcast i32 %205 to float, !dbg !31
  %207 = fcmp ogt float %203, %206, !dbg !23
  %208 = fcmp uno float %203, 0.000000e+00, !dbg !28
  %209 = or i1 %207, %208, !dbg !29
  %210 = select i1 %209, float %203, float %206, !dbg !30
  %211 = bitcast float %210 to i32, !dbg !31
  %212 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %211, i32 2, i32 31), !dbg !31
  %213 = bitcast i32 %212 to float, !dbg !31
  %214 = fcmp ogt float %210, %213, !dbg !23
  %215 = fcmp uno float %210, 0.000000e+00, !dbg !28
  %216 = or i1 %214, %215, !dbg !29
  %217 = select i1 %216, float %210, float %213, !dbg !30
  %218 = bitcast float %217 to i32, !dbg !31
  %219 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %218, i32 1, i32 31), !dbg !31
  %220 = bitcast i32 %219 to float, !dbg !31
  %221 = fcmp ogt float %217, %220, !dbg !23
  %222 = fcmp uno float %217, 0.000000e+00, !dbg !28
  %223 = or i1 %221, %222, !dbg !29
  %224 = select i1 %223, float %217, float %220, !dbg !30
  %225 = fsub float %44, %119, !dbg !32
  %226 = fsub float %45, %119, !dbg !32
  %227 = fsub float %49, %154, !dbg !32
  %228 = fsub float %50, %154, !dbg !32
  %229 = fsub float %54, %189, !dbg !32
  %230 = fsub float %55, %189, !dbg !32
  %231 = fsub float %59, %224, !dbg !32
  %232 = fsub float %60, %224, !dbg !32
  %233 = fmul float %225, 2.500000e-01, !dbg !33
  %234 = fmul float %226, 2.500000e-01, !dbg !33
  %235 = fmul float %227, 2.500000e-01, !dbg !33
  %236 = fmul float %228, 2.500000e-01, !dbg !33
  %237 = fmul float %229, 2.500000e-01, !dbg !33
  %238 = fmul float %230, 2.500000e-01, !dbg !33
  %239 = fmul float %231, 2.500000e-01, !dbg !33
  %240 = fmul float %232, 2.500000e-01, !dbg !33
  %241 = fmul float %233, 0x3FF7154760000000, !dbg !34
  %242 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %241) #2, !dbg !34
  %243 = fmul float %234, 0x3FF7154760000000, !dbg !34
  %244 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %243) #2, !dbg !34
  %245 = fmul float %235, 0x3FF7154760000000, !dbg !34
  %246 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %245) #2, !dbg !34
  %247 = fmul float %236, 0x3FF7154760000000, !dbg !34
  %248 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %247) #2, !dbg !34
  %249 = fmul float %237, 0x3FF7154760000000, !dbg !34
  %250 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %249) #2, !dbg !34
  %251 = fmul float %238, 0x3FF7154760000000, !dbg !34
  %252 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %251) #2, !dbg !34
  %253 = fmul float %239, 0x3FF7154760000000, !dbg !34
  %254 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %253) #2, !dbg !34
  %255 = fmul float %240, 0x3FF7154760000000, !dbg !34
  %256 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %255) #2, !dbg !34
  %257 = fadd float %242, %244, !dbg !35
  %258 = select i1 %37, float %257, float 0.000000e+00, !dbg !35
  %259 = fadd float %246, %248, !dbg !35
  %260 = select i1 %38, float %259, float 0.000000e+00, !dbg !35
  %261 = fadd float %250, %252, !dbg !35
  %262 = select i1 %39, float %261, float 0.000000e+00, !dbg !35
  %263 = fadd float %254, %256, !dbg !35
  %264 = select i1 %40, float %263, float 0.000000e+00, !dbg !35
  %265 = bitcast float %258 to i32, !dbg !40
  %266 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %265, i32 16, i32 31), !dbg !40
  %267 = bitcast i32 %266 to float, !dbg !40
  %268 = fadd float %258, %267, !dbg !35
  %269 = bitcast float %268 to i32, !dbg !40
  %270 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %269, i32 8, i32 31), !dbg !40
  %271 = bitcast i32 %270 to float, !dbg !40
  %272 = fadd float %268, %271, !dbg !35
  %273 = bitcast float %272 to i32, !dbg !40
  %274 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %273, i32 4, i32 31), !dbg !40
  %275 = bitcast i32 %274 to float, !dbg !40
  %276 = fadd float %272, %275, !dbg !35
  %277 = bitcast float %276 to i32, !dbg !40
  %278 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %277, i32 2, i32 31), !dbg !40
  %279 = bitcast i32 %278 to float, !dbg !40
  %280 = fadd float %276, %279, !dbg !35
  %281 = bitcast float %280 to i32, !dbg !40
  %282 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %281, i32 1, i32 31), !dbg !40
  %283 = bitcast i32 %282 to float, !dbg !40
  %284 = fadd float %280, %283, !dbg !35
  %285 = bitcast float %260 to i32, !dbg !40
  %286 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %285, i32 16, i32 31), !dbg !40
  %287 = bitcast i32 %286 to float, !dbg !40
  %288 = fadd float %260, %287, !dbg !35
  %289 = bitcast float %288 to i32, !dbg !40
  %290 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %289, i32 8, i32 31), !dbg !40
  %291 = bitcast i32 %290 to float, !dbg !40
  %292 = fadd float %288, %291, !dbg !35
  %293 = bitcast float %292 to i32, !dbg !40
  %294 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %293, i32 4, i32 31), !dbg !40
  %295 = bitcast i32 %294 to float, !dbg !40
  %296 = fadd float %292, %295, !dbg !35
  %297 = bitcast float %296 to i32, !dbg !40
  %298 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %297, i32 2, i32 31), !dbg !40
  %299 = bitcast i32 %298 to float, !dbg !40
  %300 = fadd float %296, %299, !dbg !35
  %301 = bitcast float %300 to i32, !dbg !40
  %302 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %301, i32 1, i32 31), !dbg !40
  %303 = bitcast i32 %302 to float, !dbg !40
  %304 = fadd float %300, %303, !dbg !35
  %305 = bitcast float %262 to i32, !dbg !40
  %306 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %305, i32 16, i32 31), !dbg !40
  %307 = bitcast i32 %306 to float, !dbg !40
  %308 = fadd float %262, %307, !dbg !35
  %309 = bitcast float %308 to i32, !dbg !40
  %310 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %309, i32 8, i32 31), !dbg !40
  %311 = bitcast i32 %310 to float, !dbg !40
  %312 = fadd float %308, %311, !dbg !35
  %313 = bitcast float %312 to i32, !dbg !40
  %314 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %313, i32 4, i32 31), !dbg !40
  %315 = bitcast i32 %314 to float, !dbg !40
  %316 = fadd float %312, %315, !dbg !35
  %317 = bitcast float %316 to i32, !dbg !40
  %318 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %317, i32 2, i32 31), !dbg !40
  %319 = bitcast i32 %318 to float, !dbg !40
  %320 = fadd float %316, %319, !dbg !35
  %321 = bitcast float %320 to i32, !dbg !40
  %322 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %321, i32 1, i32 31), !dbg !40
  %323 = bitcast i32 %322 to float, !dbg !40
  %324 = fadd float %320, %323, !dbg !35
  %325 = bitcast float %264 to i32, !dbg !40
  %326 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %325, i32 16, i32 31), !dbg !40
  %327 = bitcast i32 %326 to float, !dbg !40
  %328 = fadd float %264, %327, !dbg !35
  %329 = bitcast float %328 to i32, !dbg !40
  %330 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %329, i32 8, i32 31), !dbg !40
  %331 = bitcast i32 %330 to float, !dbg !40
  %332 = fadd float %328, %331, !dbg !35
  %333 = bitcast float %332 to i32, !dbg !40
  %334 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %333, i32 4, i32 31), !dbg !40
  %335 = bitcast i32 %334 to float, !dbg !40
  %336 = fadd float %332, %335, !dbg !35
  %337 = bitcast float %336 to i32, !dbg !40
  %338 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %337, i32 2, i32 31), !dbg !40
  %339 = bitcast i32 %338 to float, !dbg !40
  %340 = fadd float %336, %339, !dbg !35
  %341 = bitcast float %340 to i32, !dbg !40
  %342 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %341, i32 1, i32 31), !dbg !40
  %343 = bitcast i32 %342 to float, !dbg !40
  %344 = fadd float %340, %343, !dbg !35
  %345 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %242, float %284) #2, !dbg !41
  %346 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %244, float %284) #2, !dbg !41
  %347 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %246, float %304) #2, !dbg !41
  %348 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %248, float %304) #2, !dbg !41
  %349 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %250, float %324) #2, !dbg !41
  %350 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %252, float %324) #2, !dbg !41
  %351 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %254, float %344) #2, !dbg !41
  %352 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %256, float %344) #2, !dbg !41
  %353 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !42
  %354 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !42
  %355 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !42
  %356 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !42
  %357 = bitcast float %345 to i32, !dbg !43
  %358 = bitcast float %346 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %357, i32 %358, ptr addrspace(1) %353, i1 %37) #2, !dbg !43
  %359 = bitcast float %347 to i32, !dbg !43
  %360 = bitcast float %348 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %359, i32 %360, ptr addrspace(1) %354, i1 %38) #2, !dbg !43
  %361 = bitcast float %349 to i32, !dbg !43
  %362 = bitcast float %350 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %361, i32 %362, ptr addrspace(1) %355, i1 %39) #2, !dbg !43
  %363 = bitcast float %351 to i32, !dbg !43
  %364 = bitcast float %352 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %363, i32 %364, ptr addrspace(1) %356, i1 %40) #2, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cji6genlqlzfsvy7mazgz5dxtagx7gskl2ny2a5wxmn3a4b7nbin.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ji")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 44, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 29, column: 39, scope: !7)
!18 = !DILocation(line: 29, column: 36, scope: !7)
!19 = !DILocation(line: 29, column: 30, scope: !7)
!20 = !DILocation(line: 29, column: 53, scope: !7)
!21 = !DILocation(line: 29, column: 45, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 82, column: 15, scope: !24, inlinedAt: !27)
!24 = distinct !DILexicalBlockFile(scope: !26, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/torch/_inductor/runtime")
!26 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!27 = !DILocation(line: 34, column: 37, scope: !7)
!28 = !DILocation(line: 84, column: 21, scope: !24, inlinedAt: !27)
!29 = !DILocation(line: 84, column: 16, scope: !24, inlinedAt: !27)
!30 = !DILocation(line: 85, column: 29, scope: !24, inlinedAt: !27)
!31 = !DILocation(line: 95, column: 29, scope: !26, inlinedAt: !27)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 18, scope: !7)
!34 = !DILocation(line: 38, column: 24, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !39)
!36 = distinct !DILexicalBlockFile(scope: !38, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/torch_preview_0924/lib/python3.10/site-packages/triton/language")
!38 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!39 = !DILocation(line: 41, column: 26, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !38, inlinedAt: !39)
!41 = !DILocation(line: 42, column: 20, scope: !7)
!42 = !DILocation(line: 43, column: 25, scope: !7)
!43 = !DILocation(line: 43, column: 47, scope: !7)
!44 = !DILocation(line: 43, column: 4, scope: !7)
