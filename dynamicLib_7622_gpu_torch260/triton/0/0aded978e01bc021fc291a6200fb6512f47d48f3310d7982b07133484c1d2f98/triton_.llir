; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %.frozen = freeze i32 %4
  %5 = sdiv i32 %.frozen, 8, !dbg !11
  %6 = shl nsw i32 %5, 3, !dbg !12
  %7 = sub i32 1, %6, !dbg !13
  %8 = tail call i32 @llvm.smin.i32(i32 %7, i32 8), !dbg !14
  %9 = mul i32 %5, 8
  %.decomposed = sub i32 %.frozen, %9
  %10 = sdiv i32 %.decomposed, %8, !dbg !15
  %11 = shl nsw i32 %10, 4, !dbg !16
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !17
  %13 = shl i32 %12, 2, !dbg !17
  %14 = and i32 %13, 12, !dbg !17
  %15 = lshr i32 %12, 2, !dbg !17
  %16 = and i32 %15, 7, !dbg !17
  %17 = or disjoint i32 %16, 8, !dbg !17
  %18 = or disjoint i32 %11, %14, !dbg !18
  %19 = srem i32 %18, 16, !dbg !19
  %20 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !20
  %21 = shl i32 %12, 1, !dbg !21
  %22 = and i32 %21, 30, !dbg !21
  %23 = mul i32 %20, 50, !dbg !22
  %24 = add i32 %23, %22, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !24
  %27 = or disjoint i32 %16, 16, !dbg !25
  %28 = shl nuw nsw i32 %16, 4, !dbg !26
  %29 = shl nuw nsw i32 %17, 4, !dbg !26
  %30 = shl nuw nsw i32 %27, 4, !dbg !26
  %31 = or disjoint i32 %28, 384, !dbg !26
  %32 = mul i32 %20, 800, !dbg !27
  %33 = add i32 %19, %32, !dbg !28
  %34 = add i32 %33, %28, !dbg !29
  %35 = add i32 %33, %29, !dbg !29
  %36 = add i32 %33, %30, !dbg !29
  %37 = add i32 %33, %31, !dbg !29
  %38 = sext i32 %34 to i64, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !30
  %40 = sext i32 %35 to i64, !dbg !30
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !30
  %42 = sext i32 %36 to i64, !dbg !30
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !30
  %44 = sext i32 %37 to i64, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !30
  %46 = and i32 %21, 62, !dbg !31
  %47 = zext nneg i32 %46 to i64, !dbg !31
  %48 = getelementptr float, ptr addrspace(3) @global_smem, i64 %47, !dbg !31
  %49 = or disjoint i32 %46, 64, !dbg !31
  %50 = zext nneg i32 %49 to i64, !dbg !31
  %51 = getelementptr float, ptr addrspace(3) @global_smem, i64 %50, !dbg !31
  %52 = or disjoint i32 %46, 128, !dbg !31
  %53 = zext nneg i32 %52 to i64, !dbg !31
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !31
  %55 = or disjoint i32 %46, 192, !dbg !31
  %56 = zext nneg i32 %55 to i64, !dbg !31
  %57 = getelementptr float, ptr addrspace(3) @global_smem, i64 %56, !dbg !31
  %58 = or disjoint i32 %46, 256, !dbg !31
  %59 = zext nneg i32 %58 to i64, !dbg !31
  %60 = getelementptr float, ptr addrspace(3) @global_smem, i64 %59, !dbg !31
  %61 = or disjoint i32 %46, 320, !dbg !31
  %62 = zext nneg i32 %61 to i64, !dbg !31
  %63 = getelementptr float, ptr addrspace(3) @global_smem, i64 %62, !dbg !31
  %64 = or disjoint i32 %46, 384, !dbg !31
  %65 = zext nneg i32 %64 to i64, !dbg !31
  %66 = getelementptr float, ptr addrspace(3) @global_smem, i64 %65, !dbg !31
  %67 = or disjoint i32 %46, 448, !dbg !31
  %68 = zext nneg i32 %67 to i64, !dbg !31
  %69 = getelementptr float, ptr addrspace(3) @global_smem, i64 %68, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %48, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %51, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %54, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %57, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %60, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %66, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %69, ptr addrspace(1) %26, i32 8, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %70 = or disjoint i32 %28, %14, !dbg !32
  %71 = zext nneg i32 %70 to i64, !dbg !32
  %72 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %71, !dbg !32
  %73 = or disjoint i32 %29, %14, !dbg !32
  %74 = zext nneg i32 %73 to i64, !dbg !32
  %75 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %74, !dbg !32
  %76 = or disjoint i32 %30, %14, !dbg !32
  %77 = zext nneg i32 %76 to i64, !dbg !32
  %78 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %77, !dbg !32
  %79 = or disjoint i32 %31, %14, !dbg !32
  %80 = zext nneg i32 %79 to i64, !dbg !32
  %81 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %80, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %72, ptr addrspace(1) %39, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %75, ptr addrspace(1) %41, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %78, ptr addrspace(1) %43, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %81, ptr addrspace(1) %45, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %82 = getelementptr i8, ptr addrspace(1) %26, i64 128, !dbg !33
  %83 = getelementptr i8, ptr addrspace(1) %39, i64 2048, !dbg !34
  %84 = getelementptr i8, ptr addrspace(1) %41, i64 2048, !dbg !34
  %85 = getelementptr i8, ptr addrspace(1) %43, i64 2048, !dbg !34
  %86 = getelementptr i8, ptr addrspace(1) %45, i64 2048, !dbg !34
  %87 = icmp ult i32 %22, 18, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %88 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %47, !dbg !31
  %89 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %50, !dbg !31
  %90 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %53, !dbg !31
  %91 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %56, !dbg !31
  %92 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %59, !dbg !31
  %93 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %62, !dbg !31
  %94 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %65, !dbg !31
  %95 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 2048), i64 %68, !dbg !31
  %96 = select i1 %87, i32 8, i32 0, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %88, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %89, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %90, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %91, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %92, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %93, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %94, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %95, ptr addrspace(1) %82, i32 %96, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %97 = icmp ult i32 %27, 18, !dbg !36
  %98 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %71, !dbg !32
  %99 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %74, !dbg !32
  %100 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %77, !dbg !32
  %101 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %80, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %98, ptr addrspace(1) %83, i32 16, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %99, ptr addrspace(1) %84, i32 16, i1 true) #3, !dbg !32
  %102 = select i1 %97, i32 16, i32 0, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %100, ptr addrspace(1) %85, i32 %102, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %101, ptr addrspace(1) %86, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %103 = getelementptr i8, ptr addrspace(1) %26, i64 256, !dbg !33
  %104 = getelementptr i8, ptr addrspace(1) %39, i64 4096, !dbg !34
  %105 = getelementptr i8, ptr addrspace(1) %41, i64 4096, !dbg !34
  %106 = getelementptr i8, ptr addrspace(1) %43, i64 4096, !dbg !34
  %107 = getelementptr i8, ptr addrspace(1) %45, i64 4096, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %108 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %47, !dbg !31
  %109 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %50, !dbg !31
  %110 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %53, !dbg !31
  %111 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %56, !dbg !31
  %112 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %59, !dbg !31
  %113 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %62, !dbg !31
  %114 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %65, !dbg !31
  %115 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %68, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %108, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %109, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %110, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %111, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %112, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %113, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %114, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %115, ptr addrspace(1) %103, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %116 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 10240), i64 %71, !dbg !32
  %117 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 10240), i64 %74, !dbg !32
  %118 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 10240), i64 %77, !dbg !32
  %119 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 10240), i64 %80, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %116, ptr addrspace(1) %104, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %117, ptr addrspace(1) %105, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %118, ptr addrspace(1) %106, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %119, ptr addrspace(1) %107, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  tail call void asm sideeffect "cp.async.wait_group 0x4;", ""() #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %120 = and i32 %21, 14
  %121 = shl i32 %15, 5
  %122 = and i32 %121, 448
  %123 = zext nneg i32 %122 to i64
  %124 = zext nneg i32 %120 to i64
  br label %125, !dbg !37

125:                                              ; preds = %3, %125
  %126 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), %3 ], [ %706, %125 ]
  %127 = phi ptr addrspace(3) [ @global_smem, %3 ], [ %705, %125 ]
  %128 = phi i32 [ 0, %3 ], [ %702, %125 ]
  %129 = phi i32 [ 2, %3 ], [ %683, %125 ]
  %.pn4090 = phi ptr addrspace(1) [ %107, %3 ], [ %680, %125 ]
  %.pn4889 = phi ptr addrspace(1) [ %106, %3 ], [ %679, %125 ]
  %.pn5688 = phi ptr addrspace(1) [ %105, %3 ], [ %678, %125 ]
  %.pn6487 = phi ptr addrspace(1) [ %104, %3 ], [ %677, %125 ]
  %.pn486 = phi ptr addrspace(1) [ %103, %3 ], [ %676, %125 ]
  %130 = phi i1 [ true, %3 ], [ false, %125 ]
  %131 = phi <8 x float> [ zeroinitializer, %3 ], [ %675, %125 ]
  %132 = getelementptr float, ptr addrspace(3) %127, i64 %123, !dbg !31
  %133 = load float, ptr addrspace(3) %132, align 4, !dbg !31
  %134 = getelementptr i8, ptr addrspace(3) %132, i64 128, !dbg !31
  %135 = load float, ptr addrspace(3) %134, align 4, !dbg !31
  %136 = getelementptr i8, ptr addrspace(3) %132, i64 1024, !dbg !31
  %137 = load float, ptr addrspace(3) %136, align 4, !dbg !31
  %138 = getelementptr i8, ptr addrspace(3) %132, i64 1152, !dbg !31
  %139 = load float, ptr addrspace(3) %138, align 4, !dbg !31
  %140 = getelementptr i8, ptr addrspace(3) %132, i64 4, !dbg !31
  %141 = load float, ptr addrspace(3) %140, align 4, !dbg !31
  %142 = getelementptr i8, ptr addrspace(3) %132, i64 132, !dbg !31
  %143 = load float, ptr addrspace(3) %142, align 4, !dbg !31
  %144 = getelementptr i8, ptr addrspace(3) %132, i64 1028, !dbg !31
  %145 = load float, ptr addrspace(3) %144, align 4, !dbg !31
  %146 = getelementptr i8, ptr addrspace(3) %132, i64 1156, !dbg !31
  %147 = load float, ptr addrspace(3) %146, align 4, !dbg !31
  %148 = getelementptr i8, ptr addrspace(3) %132, i64 8, !dbg !31
  %149 = load float, ptr addrspace(3) %148, align 4, !dbg !31
  %150 = getelementptr i8, ptr addrspace(3) %132, i64 136, !dbg !31
  %151 = load float, ptr addrspace(3) %150, align 4, !dbg !31
  %152 = getelementptr i8, ptr addrspace(3) %132, i64 1032, !dbg !31
  %153 = load float, ptr addrspace(3) %152, align 4, !dbg !31
  %154 = getelementptr i8, ptr addrspace(3) %132, i64 1160, !dbg !31
  %155 = load float, ptr addrspace(3) %154, align 4, !dbg !31
  %156 = getelementptr i8, ptr addrspace(3) %132, i64 12, !dbg !31
  %157 = load float, ptr addrspace(3) %156, align 4, !dbg !31
  %158 = getelementptr i8, ptr addrspace(3) %132, i64 140, !dbg !31
  %159 = load float, ptr addrspace(3) %158, align 4, !dbg !31
  %160 = getelementptr i8, ptr addrspace(3) %132, i64 1036, !dbg !31
  %161 = load float, ptr addrspace(3) %160, align 4, !dbg !31
  %162 = getelementptr i8, ptr addrspace(3) %132, i64 1164, !dbg !31
  %163 = load float, ptr addrspace(3) %162, align 4, !dbg !31
  %164 = getelementptr i8, ptr addrspace(3) %132, i64 16, !dbg !31
  %165 = load float, ptr addrspace(3) %164, align 4, !dbg !31
  %166 = getelementptr i8, ptr addrspace(3) %132, i64 144, !dbg !31
  %167 = load float, ptr addrspace(3) %166, align 4, !dbg !31
  %168 = getelementptr i8, ptr addrspace(3) %132, i64 1040, !dbg !31
  %169 = load float, ptr addrspace(3) %168, align 4, !dbg !31
  %170 = getelementptr i8, ptr addrspace(3) %132, i64 1168, !dbg !31
  %171 = load float, ptr addrspace(3) %170, align 4, !dbg !31
  %172 = getelementptr i8, ptr addrspace(3) %132, i64 20, !dbg !31
  %173 = load float, ptr addrspace(3) %172, align 4, !dbg !31
  %174 = getelementptr i8, ptr addrspace(3) %132, i64 148, !dbg !31
  %175 = load float, ptr addrspace(3) %174, align 4, !dbg !31
  %176 = getelementptr i8, ptr addrspace(3) %132, i64 1044, !dbg !31
  %177 = load float, ptr addrspace(3) %176, align 4, !dbg !31
  %178 = getelementptr i8, ptr addrspace(3) %132, i64 1172, !dbg !31
  %179 = load float, ptr addrspace(3) %178, align 4, !dbg !31
  %180 = getelementptr i8, ptr addrspace(3) %132, i64 24, !dbg !31
  %181 = load float, ptr addrspace(3) %180, align 4, !dbg !31
  %182 = getelementptr i8, ptr addrspace(3) %132, i64 152, !dbg !31
  %183 = load float, ptr addrspace(3) %182, align 4, !dbg !31
  %184 = getelementptr i8, ptr addrspace(3) %132, i64 1048, !dbg !31
  %185 = load float, ptr addrspace(3) %184, align 4, !dbg !31
  %186 = getelementptr i8, ptr addrspace(3) %132, i64 1176, !dbg !31
  %187 = load float, ptr addrspace(3) %186, align 4, !dbg !31
  %188 = getelementptr i8, ptr addrspace(3) %132, i64 28, !dbg !31
  %189 = load float, ptr addrspace(3) %188, align 4, !dbg !31
  %190 = getelementptr i8, ptr addrspace(3) %132, i64 156, !dbg !31
  %191 = load float, ptr addrspace(3) %190, align 4, !dbg !31
  %192 = getelementptr i8, ptr addrspace(3) %132, i64 1052, !dbg !31
  %193 = load float, ptr addrspace(3) %192, align 4, !dbg !31
  %194 = getelementptr i8, ptr addrspace(3) %132, i64 1180, !dbg !31
  %195 = load float, ptr addrspace(3) %194, align 4, !dbg !31
  %196 = getelementptr i8, ptr addrspace(3) %132, i64 32, !dbg !31
  %197 = load float, ptr addrspace(3) %196, align 4, !dbg !31
  %198 = getelementptr i8, ptr addrspace(3) %132, i64 160, !dbg !31
  %199 = load float, ptr addrspace(3) %198, align 4, !dbg !31
  %200 = getelementptr i8, ptr addrspace(3) %132, i64 1056, !dbg !31
  %201 = load float, ptr addrspace(3) %200, align 4, !dbg !31
  %202 = getelementptr i8, ptr addrspace(3) %132, i64 1184, !dbg !31
  %203 = load float, ptr addrspace(3) %202, align 4, !dbg !31
  %204 = getelementptr i8, ptr addrspace(3) %132, i64 36, !dbg !31
  %205 = load float, ptr addrspace(3) %204, align 4, !dbg !31
  %206 = getelementptr i8, ptr addrspace(3) %132, i64 164, !dbg !31
  %207 = load float, ptr addrspace(3) %206, align 4, !dbg !31
  %208 = getelementptr i8, ptr addrspace(3) %132, i64 1060, !dbg !31
  %209 = load float, ptr addrspace(3) %208, align 4, !dbg !31
  %210 = getelementptr i8, ptr addrspace(3) %132, i64 1188, !dbg !31
  %211 = load float, ptr addrspace(3) %210, align 4, !dbg !31
  %212 = getelementptr i8, ptr addrspace(3) %132, i64 40, !dbg !31
  %213 = load float, ptr addrspace(3) %212, align 4, !dbg !31
  %214 = getelementptr i8, ptr addrspace(3) %132, i64 168, !dbg !31
  %215 = load float, ptr addrspace(3) %214, align 4, !dbg !31
  %216 = getelementptr i8, ptr addrspace(3) %132, i64 1064, !dbg !31
  %217 = load float, ptr addrspace(3) %216, align 4, !dbg !31
  %218 = getelementptr i8, ptr addrspace(3) %132, i64 1192, !dbg !31
  %219 = load float, ptr addrspace(3) %218, align 4, !dbg !31
  %220 = getelementptr i8, ptr addrspace(3) %132, i64 44, !dbg !31
  %221 = load float, ptr addrspace(3) %220, align 4, !dbg !31
  %222 = getelementptr i8, ptr addrspace(3) %132, i64 172, !dbg !31
  %223 = load float, ptr addrspace(3) %222, align 4, !dbg !31
  %224 = getelementptr i8, ptr addrspace(3) %132, i64 1068, !dbg !31
  %225 = load float, ptr addrspace(3) %224, align 4, !dbg !31
  %226 = getelementptr i8, ptr addrspace(3) %132, i64 1196, !dbg !31
  %227 = load float, ptr addrspace(3) %226, align 4, !dbg !31
  %228 = getelementptr i8, ptr addrspace(3) %132, i64 48, !dbg !31
  %229 = load float, ptr addrspace(3) %228, align 4, !dbg !31
  %230 = getelementptr i8, ptr addrspace(3) %132, i64 176, !dbg !31
  %231 = load float, ptr addrspace(3) %230, align 4, !dbg !31
  %232 = getelementptr i8, ptr addrspace(3) %132, i64 1072, !dbg !31
  %233 = load float, ptr addrspace(3) %232, align 4, !dbg !31
  %234 = getelementptr i8, ptr addrspace(3) %132, i64 1200, !dbg !31
  %235 = load float, ptr addrspace(3) %234, align 4, !dbg !31
  %236 = getelementptr i8, ptr addrspace(3) %132, i64 52, !dbg !31
  %237 = load float, ptr addrspace(3) %236, align 4, !dbg !31
  %238 = getelementptr i8, ptr addrspace(3) %132, i64 180, !dbg !31
  %239 = load float, ptr addrspace(3) %238, align 4, !dbg !31
  %240 = getelementptr i8, ptr addrspace(3) %132, i64 1076, !dbg !31
  %241 = load float, ptr addrspace(3) %240, align 4, !dbg !31
  %242 = getelementptr i8, ptr addrspace(3) %132, i64 1204, !dbg !31
  %243 = load float, ptr addrspace(3) %242, align 4, !dbg !31
  %244 = getelementptr i8, ptr addrspace(3) %132, i64 56, !dbg !31
  %245 = load float, ptr addrspace(3) %244, align 4, !dbg !31
  %246 = getelementptr i8, ptr addrspace(3) %132, i64 184, !dbg !31
  %247 = load float, ptr addrspace(3) %246, align 4, !dbg !31
  %248 = getelementptr i8, ptr addrspace(3) %132, i64 1080, !dbg !31
  %249 = load float, ptr addrspace(3) %248, align 4, !dbg !31
  %250 = getelementptr i8, ptr addrspace(3) %132, i64 1208, !dbg !31
  %251 = load float, ptr addrspace(3) %250, align 4, !dbg !31
  %252 = getelementptr i8, ptr addrspace(3) %132, i64 60, !dbg !31
  %253 = load float, ptr addrspace(3) %252, align 4, !dbg !31
  %254 = getelementptr i8, ptr addrspace(3) %132, i64 188, !dbg !31
  %255 = load float, ptr addrspace(3) %254, align 4, !dbg !31
  %256 = getelementptr i8, ptr addrspace(3) %132, i64 1084, !dbg !31
  %257 = load float, ptr addrspace(3) %256, align 4, !dbg !31
  %258 = getelementptr i8, ptr addrspace(3) %132, i64 1212, !dbg !31
  %259 = load float, ptr addrspace(3) %258, align 4, !dbg !31
  %260 = getelementptr i8, ptr addrspace(3) %132, i64 64, !dbg !31
  %261 = load float, ptr addrspace(3) %260, align 4, !dbg !31
  %262 = getelementptr i8, ptr addrspace(3) %132, i64 192, !dbg !31
  %263 = load float, ptr addrspace(3) %262, align 4, !dbg !31
  %264 = getelementptr i8, ptr addrspace(3) %132, i64 1088, !dbg !31
  %265 = load float, ptr addrspace(3) %264, align 4, !dbg !31
  %266 = getelementptr i8, ptr addrspace(3) %132, i64 1216, !dbg !31
  %267 = load float, ptr addrspace(3) %266, align 4, !dbg !31
  %268 = getelementptr i8, ptr addrspace(3) %132, i64 68, !dbg !31
  %269 = load float, ptr addrspace(3) %268, align 4, !dbg !31
  %270 = getelementptr i8, ptr addrspace(3) %132, i64 196, !dbg !31
  %271 = load float, ptr addrspace(3) %270, align 4, !dbg !31
  %272 = getelementptr i8, ptr addrspace(3) %132, i64 1092, !dbg !31
  %273 = load float, ptr addrspace(3) %272, align 4, !dbg !31
  %274 = getelementptr i8, ptr addrspace(3) %132, i64 1220, !dbg !31
  %275 = load float, ptr addrspace(3) %274, align 4, !dbg !31
  %276 = getelementptr i8, ptr addrspace(3) %132, i64 72, !dbg !31
  %277 = load float, ptr addrspace(3) %276, align 4, !dbg !31
  %278 = getelementptr i8, ptr addrspace(3) %132, i64 200, !dbg !31
  %279 = load float, ptr addrspace(3) %278, align 4, !dbg !31
  %280 = getelementptr i8, ptr addrspace(3) %132, i64 1096, !dbg !31
  %281 = load float, ptr addrspace(3) %280, align 4, !dbg !31
  %282 = getelementptr i8, ptr addrspace(3) %132, i64 1224, !dbg !31
  %283 = load float, ptr addrspace(3) %282, align 4, !dbg !31
  %284 = getelementptr i8, ptr addrspace(3) %132, i64 76, !dbg !31
  %285 = load float, ptr addrspace(3) %284, align 4, !dbg !31
  %286 = getelementptr i8, ptr addrspace(3) %132, i64 204, !dbg !31
  %287 = load float, ptr addrspace(3) %286, align 4, !dbg !31
  %288 = getelementptr i8, ptr addrspace(3) %132, i64 1100, !dbg !31
  %289 = load float, ptr addrspace(3) %288, align 4, !dbg !31
  %290 = getelementptr i8, ptr addrspace(3) %132, i64 1228, !dbg !31
  %291 = load float, ptr addrspace(3) %290, align 4, !dbg !31
  %292 = getelementptr i8, ptr addrspace(3) %132, i64 80, !dbg !31
  %293 = load float, ptr addrspace(3) %292, align 4, !dbg !31
  %294 = getelementptr i8, ptr addrspace(3) %132, i64 208, !dbg !31
  %295 = load float, ptr addrspace(3) %294, align 4, !dbg !31
  %296 = getelementptr i8, ptr addrspace(3) %132, i64 1104, !dbg !31
  %297 = load float, ptr addrspace(3) %296, align 4, !dbg !31
  %298 = getelementptr i8, ptr addrspace(3) %132, i64 1232, !dbg !31
  %299 = load float, ptr addrspace(3) %298, align 4, !dbg !31
  %300 = getelementptr i8, ptr addrspace(3) %132, i64 84, !dbg !31
  %301 = load float, ptr addrspace(3) %300, align 4, !dbg !31
  %302 = getelementptr i8, ptr addrspace(3) %132, i64 212, !dbg !31
  %303 = load float, ptr addrspace(3) %302, align 4, !dbg !31
  %304 = getelementptr i8, ptr addrspace(3) %132, i64 1108, !dbg !31
  %305 = load float, ptr addrspace(3) %304, align 4, !dbg !31
  %306 = getelementptr i8, ptr addrspace(3) %132, i64 1236, !dbg !31
  %307 = load float, ptr addrspace(3) %306, align 4, !dbg !31
  %308 = getelementptr i8, ptr addrspace(3) %132, i64 88, !dbg !31
  %309 = load float, ptr addrspace(3) %308, align 4, !dbg !31
  %310 = getelementptr i8, ptr addrspace(3) %132, i64 216, !dbg !31
  %311 = load float, ptr addrspace(3) %310, align 4, !dbg !31
  %312 = getelementptr i8, ptr addrspace(3) %132, i64 1112, !dbg !31
  %313 = load float, ptr addrspace(3) %312, align 4, !dbg !31
  %314 = getelementptr i8, ptr addrspace(3) %132, i64 1240, !dbg !31
  %315 = load float, ptr addrspace(3) %314, align 4, !dbg !31
  %316 = getelementptr i8, ptr addrspace(3) %132, i64 92, !dbg !31
  %317 = load float, ptr addrspace(3) %316, align 4, !dbg !31
  %318 = getelementptr i8, ptr addrspace(3) %132, i64 220, !dbg !31
  %319 = load float, ptr addrspace(3) %318, align 4, !dbg !31
  %320 = getelementptr i8, ptr addrspace(3) %132, i64 1116, !dbg !31
  %321 = load float, ptr addrspace(3) %320, align 4, !dbg !31
  %322 = getelementptr i8, ptr addrspace(3) %132, i64 1244, !dbg !31
  %323 = load float, ptr addrspace(3) %322, align 4, !dbg !31
  %324 = getelementptr i8, ptr addrspace(3) %132, i64 96, !dbg !31
  %325 = load float, ptr addrspace(3) %324, align 4, !dbg !31
  %326 = getelementptr i8, ptr addrspace(3) %132, i64 224, !dbg !31
  %327 = load float, ptr addrspace(3) %326, align 4, !dbg !31
  %328 = getelementptr i8, ptr addrspace(3) %132, i64 1120, !dbg !31
  %329 = load float, ptr addrspace(3) %328, align 4, !dbg !31
  %330 = getelementptr i8, ptr addrspace(3) %132, i64 1248, !dbg !31
  %331 = load float, ptr addrspace(3) %330, align 4, !dbg !31
  %332 = getelementptr i8, ptr addrspace(3) %132, i64 100, !dbg !31
  %333 = load float, ptr addrspace(3) %332, align 4, !dbg !31
  %334 = getelementptr i8, ptr addrspace(3) %132, i64 228, !dbg !31
  %335 = load float, ptr addrspace(3) %334, align 4, !dbg !31
  %336 = getelementptr i8, ptr addrspace(3) %132, i64 1124, !dbg !31
  %337 = load float, ptr addrspace(3) %336, align 4, !dbg !31
  %338 = getelementptr i8, ptr addrspace(3) %132, i64 1252, !dbg !31
  %339 = load float, ptr addrspace(3) %338, align 4, !dbg !31
  %340 = getelementptr i8, ptr addrspace(3) %132, i64 104, !dbg !31
  %341 = load float, ptr addrspace(3) %340, align 4, !dbg !31
  %342 = getelementptr i8, ptr addrspace(3) %132, i64 232, !dbg !31
  %343 = load float, ptr addrspace(3) %342, align 4, !dbg !31
  %344 = getelementptr i8, ptr addrspace(3) %132, i64 1128, !dbg !31
  %345 = load float, ptr addrspace(3) %344, align 4, !dbg !31
  %346 = getelementptr i8, ptr addrspace(3) %132, i64 1256, !dbg !31
  %347 = load float, ptr addrspace(3) %346, align 4, !dbg !31
  %348 = getelementptr i8, ptr addrspace(3) %132, i64 108, !dbg !31
  %349 = load float, ptr addrspace(3) %348, align 4, !dbg !31
  %350 = getelementptr i8, ptr addrspace(3) %132, i64 236, !dbg !31
  %351 = load float, ptr addrspace(3) %350, align 4, !dbg !31
  %352 = getelementptr i8, ptr addrspace(3) %132, i64 1132, !dbg !31
  %353 = load float, ptr addrspace(3) %352, align 4, !dbg !31
  %354 = getelementptr i8, ptr addrspace(3) %132, i64 1260, !dbg !31
  %355 = load float, ptr addrspace(3) %354, align 4, !dbg !31
  %356 = getelementptr i8, ptr addrspace(3) %132, i64 112, !dbg !31
  %357 = load float, ptr addrspace(3) %356, align 4, !dbg !31
  %358 = getelementptr i8, ptr addrspace(3) %132, i64 240, !dbg !31
  %359 = load float, ptr addrspace(3) %358, align 4, !dbg !31
  %360 = getelementptr i8, ptr addrspace(3) %132, i64 1136, !dbg !31
  %361 = load float, ptr addrspace(3) %360, align 4, !dbg !31
  %362 = getelementptr i8, ptr addrspace(3) %132, i64 1264, !dbg !31
  %363 = load float, ptr addrspace(3) %362, align 4, !dbg !31
  %364 = getelementptr i8, ptr addrspace(3) %132, i64 116, !dbg !31
  %365 = load float, ptr addrspace(3) %364, align 4, !dbg !31
  %366 = getelementptr i8, ptr addrspace(3) %132, i64 244, !dbg !31
  %367 = load float, ptr addrspace(3) %366, align 4, !dbg !31
  %368 = getelementptr i8, ptr addrspace(3) %132, i64 1140, !dbg !31
  %369 = load float, ptr addrspace(3) %368, align 4, !dbg !31
  %370 = getelementptr i8, ptr addrspace(3) %132, i64 1268, !dbg !31
  %371 = load float, ptr addrspace(3) %370, align 4, !dbg !31
  %372 = getelementptr i8, ptr addrspace(3) %132, i64 120, !dbg !31
  %373 = load float, ptr addrspace(3) %372, align 4, !dbg !31
  %374 = getelementptr i8, ptr addrspace(3) %132, i64 248, !dbg !31
  %375 = load float, ptr addrspace(3) %374, align 4, !dbg !31
  %376 = getelementptr i8, ptr addrspace(3) %132, i64 1144, !dbg !31
  %377 = load float, ptr addrspace(3) %376, align 4, !dbg !31
  %378 = getelementptr i8, ptr addrspace(3) %132, i64 1272, !dbg !31
  %379 = load float, ptr addrspace(3) %378, align 4, !dbg !31
  %380 = getelementptr i8, ptr addrspace(3) %132, i64 124, !dbg !31
  %381 = load float, ptr addrspace(3) %380, align 4, !dbg !31
  %382 = getelementptr i8, ptr addrspace(3) %132, i64 252, !dbg !31
  %383 = load float, ptr addrspace(3) %382, align 4, !dbg !31
  %384 = getelementptr i8, ptr addrspace(3) %132, i64 1148, !dbg !31
  %385 = load float, ptr addrspace(3) %384, align 4, !dbg !31
  %386 = getelementptr i8, ptr addrspace(3) %132, i64 1276, !dbg !31
  %387 = load float, ptr addrspace(3) %386, align 4, !dbg !31
  %388 = getelementptr float, ptr addrspace(3) %126, i64 %124, !dbg !32
  %389 = getelementptr i8, ptr addrspace(3) %388, i64 64, !dbg !32
  %390 = getelementptr i8, ptr addrspace(3) %388, i64 128, !dbg !32
  %391 = getelementptr i8, ptr addrspace(3) %388, i64 192, !dbg !32
  %392 = getelementptr i8, ptr addrspace(3) %388, i64 256, !dbg !32
  %393 = getelementptr i8, ptr addrspace(3) %388, i64 320, !dbg !32
  %394 = getelementptr i8, ptr addrspace(3) %388, i64 384, !dbg !32
  %395 = getelementptr i8, ptr addrspace(3) %388, i64 448, !dbg !32
  %396 = getelementptr i8, ptr addrspace(3) %388, i64 512, !dbg !32
  %397 = getelementptr i8, ptr addrspace(3) %388, i64 576, !dbg !32
  %398 = getelementptr i8, ptr addrspace(3) %388, i64 640, !dbg !32
  %399 = getelementptr i8, ptr addrspace(3) %388, i64 704, !dbg !32
  %400 = getelementptr i8, ptr addrspace(3) %388, i64 768, !dbg !32
  %401 = getelementptr i8, ptr addrspace(3) %388, i64 832, !dbg !32
  %402 = getelementptr i8, ptr addrspace(3) %388, i64 896, !dbg !32
  %403 = getelementptr i8, ptr addrspace(3) %388, i64 960, !dbg !32
  %404 = getelementptr i8, ptr addrspace(3) %388, i64 1024, !dbg !32
  %405 = getelementptr i8, ptr addrspace(3) %388, i64 1088, !dbg !32
  %406 = getelementptr i8, ptr addrspace(3) %388, i64 1152, !dbg !32
  %407 = getelementptr i8, ptr addrspace(3) %388, i64 1216, !dbg !32
  %408 = getelementptr i8, ptr addrspace(3) %388, i64 1280, !dbg !32
  %409 = getelementptr i8, ptr addrspace(3) %388, i64 1344, !dbg !32
  %410 = getelementptr i8, ptr addrspace(3) %388, i64 1408, !dbg !32
  %411 = getelementptr i8, ptr addrspace(3) %388, i64 1472, !dbg !32
  %412 = getelementptr i8, ptr addrspace(3) %388, i64 1536, !dbg !32
  %413 = getelementptr i8, ptr addrspace(3) %388, i64 1600, !dbg !32
  %414 = getelementptr i8, ptr addrspace(3) %388, i64 1664, !dbg !32
  %415 = getelementptr i8, ptr addrspace(3) %388, i64 1728, !dbg !32
  %416 = getelementptr i8, ptr addrspace(3) %388, i64 1792, !dbg !32
  %417 = getelementptr i8, ptr addrspace(3) %388, i64 1856, !dbg !32
  %418 = getelementptr i8, ptr addrspace(3) %388, i64 1920, !dbg !32
  %419 = getelementptr i8, ptr addrspace(3) %388, i64 1984, !dbg !32
  %420 = load <2 x float>, ptr addrspace(3) %388, align 4, !dbg !32
  %421 = shufflevector <2 x float> %420, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %422 = load <2 x float>, ptr addrspace(3) %389, align 4, !dbg !32
  %423 = shufflevector <2 x float> %422, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %424 = load <2 x float>, ptr addrspace(3) %390, align 4, !dbg !32
  %425 = shufflevector <2 x float> %424, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %426 = load <2 x float>, ptr addrspace(3) %391, align 4, !dbg !32
  %427 = shufflevector <2 x float> %426, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %428 = load <2 x float>, ptr addrspace(3) %392, align 4, !dbg !32
  %429 = shufflevector <2 x float> %428, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %430 = load <2 x float>, ptr addrspace(3) %393, align 4, !dbg !32
  %431 = shufflevector <2 x float> %430, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %432 = load <2 x float>, ptr addrspace(3) %394, align 4, !dbg !32
  %433 = shufflevector <2 x float> %432, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %434 = load <2 x float>, ptr addrspace(3) %395, align 4, !dbg !32
  %435 = shufflevector <2 x float> %434, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %436 = load <2 x float>, ptr addrspace(3) %396, align 4, !dbg !32
  %437 = shufflevector <2 x float> %436, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %438 = load <2 x float>, ptr addrspace(3) %397, align 4, !dbg !32
  %439 = shufflevector <2 x float> %438, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %440 = insertelement <8 x float> poison, float %133, i64 0, !dbg !38
  %441 = insertelement <8 x float> %440, float %135, i64 1, !dbg !38
  %442 = insertelement <8 x float> %441, float %137, i64 2, !dbg !38
  %443 = insertelement <8 x float> %442, float %139, i64 3, !dbg !38
  %444 = shufflevector <8 x float> %443, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %445 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %444, <8 x float> %421, <8 x float> %131), !dbg !38
  %446 = insertelement <8 x float> poison, float %141, i64 0, !dbg !38
  %447 = insertelement <8 x float> %446, float %143, i64 1, !dbg !38
  %448 = insertelement <8 x float> %447, float %145, i64 2, !dbg !38
  %449 = insertelement <8 x float> %448, float %147, i64 3, !dbg !38
  %450 = shufflevector <8 x float> %449, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %451 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %450, <8 x float> %423, <8 x float> %445), !dbg !38
  %452 = insertelement <8 x float> poison, float %149, i64 0, !dbg !38
  %453 = insertelement <8 x float> %452, float %151, i64 1, !dbg !38
  %454 = insertelement <8 x float> %453, float %153, i64 2, !dbg !38
  %455 = insertelement <8 x float> %454, float %155, i64 3, !dbg !38
  %456 = shufflevector <8 x float> %455, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %457 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %456, <8 x float> %425, <8 x float> %451), !dbg !38
  %458 = insertelement <8 x float> poison, float %157, i64 0, !dbg !38
  %459 = insertelement <8 x float> %458, float %159, i64 1, !dbg !38
  %460 = insertelement <8 x float> %459, float %161, i64 2, !dbg !38
  %461 = insertelement <8 x float> %460, float %163, i64 3, !dbg !38
  %462 = shufflevector <8 x float> %461, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %463 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %462, <8 x float> %427, <8 x float> %457), !dbg !38
  %464 = insertelement <8 x float> poison, float %165, i64 0, !dbg !38
  %465 = insertelement <8 x float> %464, float %167, i64 1, !dbg !38
  %466 = insertelement <8 x float> %465, float %169, i64 2, !dbg !38
  %467 = insertelement <8 x float> %466, float %171, i64 3, !dbg !38
  %468 = shufflevector <8 x float> %467, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %469 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %468, <8 x float> %429, <8 x float> %463), !dbg !38
  %470 = insertelement <8 x float> poison, float %173, i64 0, !dbg !38
  %471 = insertelement <8 x float> %470, float %175, i64 1, !dbg !38
  %472 = insertelement <8 x float> %471, float %177, i64 2, !dbg !38
  %473 = insertelement <8 x float> %472, float %179, i64 3, !dbg !38
  %474 = shufflevector <8 x float> %473, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %475 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %474, <8 x float> %431, <8 x float> %469), !dbg !38
  %476 = insertelement <8 x float> poison, float %181, i64 0, !dbg !38
  %477 = insertelement <8 x float> %476, float %183, i64 1, !dbg !38
  %478 = insertelement <8 x float> %477, float %185, i64 2, !dbg !38
  %479 = insertelement <8 x float> %478, float %187, i64 3, !dbg !38
  %480 = shufflevector <8 x float> %479, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %481 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %480, <8 x float> %433, <8 x float> %475), !dbg !38
  %482 = insertelement <8 x float> poison, float %189, i64 0, !dbg !38
  %483 = insertelement <8 x float> %482, float %191, i64 1, !dbg !38
  %484 = insertelement <8 x float> %483, float %193, i64 2, !dbg !38
  %485 = insertelement <8 x float> %484, float %195, i64 3, !dbg !38
  %486 = shufflevector <8 x float> %485, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %487 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %486, <8 x float> %435, <8 x float> %481), !dbg !38
  %488 = insertelement <8 x float> poison, float %197, i64 0, !dbg !38
  %489 = insertelement <8 x float> %488, float %199, i64 1, !dbg !38
  %490 = insertelement <8 x float> %489, float %201, i64 2, !dbg !38
  %491 = insertelement <8 x float> %490, float %203, i64 3, !dbg !38
  %492 = shufflevector <8 x float> %491, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %493 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %492, <8 x float> %437, <8 x float> %487), !dbg !38
  %494 = insertelement <8 x float> poison, float %205, i64 0, !dbg !38
  %495 = insertelement <8 x float> %494, float %207, i64 1, !dbg !38
  %496 = insertelement <8 x float> %495, float %209, i64 2, !dbg !38
  %497 = insertelement <8 x float> %496, float %211, i64 3, !dbg !38
  %498 = shufflevector <8 x float> %497, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %499 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %498, <8 x float> %439, <8 x float> %493), !dbg !38
  %500 = load <2 x float>, ptr addrspace(3) %398, align 4, !dbg !32
  %501 = shufflevector <2 x float> %500, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %502 = load <2 x float>, ptr addrspace(3) %399, align 4, !dbg !32
  %503 = shufflevector <2 x float> %502, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %504 = load <2 x float>, ptr addrspace(3) %400, align 4, !dbg !32
  %505 = shufflevector <2 x float> %504, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %506 = load <2 x float>, ptr addrspace(3) %401, align 4, !dbg !32
  %507 = shufflevector <2 x float> %506, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %508 = load <2 x float>, ptr addrspace(3) %402, align 4, !dbg !32
  %509 = shufflevector <2 x float> %508, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %510 = load <2 x float>, ptr addrspace(3) %403, align 4, !dbg !32
  %511 = shufflevector <2 x float> %510, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %512 = load <2 x float>, ptr addrspace(3) %404, align 4, !dbg !32
  %513 = shufflevector <2 x float> %512, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %514 = load <2 x float>, ptr addrspace(3) %405, align 4, !dbg !32
  %515 = shufflevector <2 x float> %514, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %516 = load <2 x float>, ptr addrspace(3) %406, align 4, !dbg !32
  %517 = shufflevector <2 x float> %516, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %518 = load <2 x float>, ptr addrspace(3) %407, align 4, !dbg !32
  %519 = shufflevector <2 x float> %518, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %520 = load <2 x float>, ptr addrspace(3) %408, align 4, !dbg !32
  %521 = shufflevector <2 x float> %520, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %522 = insertelement <8 x float> poison, float %213, i64 0, !dbg !38
  %523 = insertelement <8 x float> %522, float %215, i64 1, !dbg !38
  %524 = insertelement <8 x float> %523, float %217, i64 2, !dbg !38
  %525 = insertelement <8 x float> %524, float %219, i64 3, !dbg !38
  %526 = shufflevector <8 x float> %525, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %527 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %526, <8 x float> %501, <8 x float> %499), !dbg !38
  %528 = insertelement <8 x float> poison, float %221, i64 0, !dbg !38
  %529 = insertelement <8 x float> %528, float %223, i64 1, !dbg !38
  %530 = insertelement <8 x float> %529, float %225, i64 2, !dbg !38
  %531 = insertelement <8 x float> %530, float %227, i64 3, !dbg !38
  %532 = shufflevector <8 x float> %531, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %533 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %532, <8 x float> %503, <8 x float> %527), !dbg !38
  %534 = insertelement <8 x float> poison, float %229, i64 0, !dbg !38
  %535 = insertelement <8 x float> %534, float %231, i64 1, !dbg !38
  %536 = insertelement <8 x float> %535, float %233, i64 2, !dbg !38
  %537 = insertelement <8 x float> %536, float %235, i64 3, !dbg !38
  %538 = shufflevector <8 x float> %537, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %539 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %538, <8 x float> %505, <8 x float> %533), !dbg !38
  %540 = insertelement <8 x float> poison, float %237, i64 0, !dbg !38
  %541 = insertelement <8 x float> %540, float %239, i64 1, !dbg !38
  %542 = insertelement <8 x float> %541, float %241, i64 2, !dbg !38
  %543 = insertelement <8 x float> %542, float %243, i64 3, !dbg !38
  %544 = shufflevector <8 x float> %543, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %545 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %544, <8 x float> %507, <8 x float> %539), !dbg !38
  %546 = insertelement <8 x float> poison, float %245, i64 0, !dbg !38
  %547 = insertelement <8 x float> %546, float %247, i64 1, !dbg !38
  %548 = insertelement <8 x float> %547, float %249, i64 2, !dbg !38
  %549 = insertelement <8 x float> %548, float %251, i64 3, !dbg !38
  %550 = shufflevector <8 x float> %549, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %551 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %550, <8 x float> %509, <8 x float> %545), !dbg !38
  %552 = insertelement <8 x float> poison, float %253, i64 0, !dbg !38
  %553 = insertelement <8 x float> %552, float %255, i64 1, !dbg !38
  %554 = insertelement <8 x float> %553, float %257, i64 2, !dbg !38
  %555 = insertelement <8 x float> %554, float %259, i64 3, !dbg !38
  %556 = shufflevector <8 x float> %555, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %557 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %556, <8 x float> %511, <8 x float> %551), !dbg !38
  %558 = insertelement <8 x float> poison, float %261, i64 0, !dbg !38
  %559 = insertelement <8 x float> %558, float %263, i64 1, !dbg !38
  %560 = insertelement <8 x float> %559, float %265, i64 2, !dbg !38
  %561 = insertelement <8 x float> %560, float %267, i64 3, !dbg !38
  %562 = shufflevector <8 x float> %561, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %563 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %562, <8 x float> %513, <8 x float> %557), !dbg !38
  %564 = insertelement <8 x float> poison, float %269, i64 0, !dbg !38
  %565 = insertelement <8 x float> %564, float %271, i64 1, !dbg !38
  %566 = insertelement <8 x float> %565, float %273, i64 2, !dbg !38
  %567 = insertelement <8 x float> %566, float %275, i64 3, !dbg !38
  %568 = shufflevector <8 x float> %567, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %569 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %568, <8 x float> %515, <8 x float> %563), !dbg !38
  %570 = insertelement <8 x float> poison, float %277, i64 0, !dbg !38
  %571 = insertelement <8 x float> %570, float %279, i64 1, !dbg !38
  %572 = insertelement <8 x float> %571, float %281, i64 2, !dbg !38
  %573 = insertelement <8 x float> %572, float %283, i64 3, !dbg !38
  %574 = shufflevector <8 x float> %573, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %575 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %574, <8 x float> %517, <8 x float> %569), !dbg !38
  %576 = insertelement <8 x float> poison, float %285, i64 0, !dbg !38
  %577 = insertelement <8 x float> %576, float %287, i64 1, !dbg !38
  %578 = insertelement <8 x float> %577, float %289, i64 2, !dbg !38
  %579 = insertelement <8 x float> %578, float %291, i64 3, !dbg !38
  %580 = shufflevector <8 x float> %579, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %581 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %580, <8 x float> %519, <8 x float> %575), !dbg !38
  %582 = insertelement <8 x float> poison, float %293, i64 0, !dbg !38
  %583 = insertelement <8 x float> %582, float %295, i64 1, !dbg !38
  %584 = insertelement <8 x float> %583, float %297, i64 2, !dbg !38
  %585 = insertelement <8 x float> %584, float %299, i64 3, !dbg !38
  %586 = shufflevector <8 x float> %585, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %587 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %586, <8 x float> %521, <8 x float> %581), !dbg !38
  %588 = load <2 x float>, ptr addrspace(3) %409, align 4, !dbg !32
  %589 = shufflevector <2 x float> %588, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %590 = load <2 x float>, ptr addrspace(3) %410, align 4, !dbg !32
  %591 = shufflevector <2 x float> %590, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %592 = load <2 x float>, ptr addrspace(3) %411, align 4, !dbg !32
  %593 = shufflevector <2 x float> %592, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %594 = load <2 x float>, ptr addrspace(3) %412, align 4, !dbg !32
  %595 = shufflevector <2 x float> %594, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %596 = load <2 x float>, ptr addrspace(3) %413, align 4, !dbg !32
  %597 = shufflevector <2 x float> %596, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %598 = load <2 x float>, ptr addrspace(3) %414, align 4, !dbg !32
  %599 = shufflevector <2 x float> %598, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %600 = load <2 x float>, ptr addrspace(3) %415, align 4, !dbg !32
  %601 = shufflevector <2 x float> %600, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %602 = load <2 x float>, ptr addrspace(3) %416, align 4, !dbg !32
  %603 = shufflevector <2 x float> %602, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %604 = load <2 x float>, ptr addrspace(3) %417, align 4, !dbg !32
  %605 = shufflevector <2 x float> %604, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %606 = load <2 x float>, ptr addrspace(3) %418, align 4, !dbg !32
  %607 = shufflevector <2 x float> %606, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %608 = load <2 x float>, ptr addrspace(3) %419, align 4, !dbg !32
  %609 = shufflevector <2 x float> %608, <2 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !32
  %610 = insertelement <8 x float> poison, float %301, i64 0, !dbg !38
  %611 = insertelement <8 x float> %610, float %303, i64 1, !dbg !38
  %612 = insertelement <8 x float> %611, float %305, i64 2, !dbg !38
  %613 = insertelement <8 x float> %612, float %307, i64 3, !dbg !38
  %614 = shufflevector <8 x float> %613, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %615 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %614, <8 x float> %589, <8 x float> %587), !dbg !38
  %616 = insertelement <8 x float> poison, float %309, i64 0, !dbg !38
  %617 = insertelement <8 x float> %616, float %311, i64 1, !dbg !38
  %618 = insertelement <8 x float> %617, float %313, i64 2, !dbg !38
  %619 = insertelement <8 x float> %618, float %315, i64 3, !dbg !38
  %620 = shufflevector <8 x float> %619, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %621 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %620, <8 x float> %591, <8 x float> %615), !dbg !38
  %622 = insertelement <8 x float> poison, float %317, i64 0, !dbg !38
  %623 = insertelement <8 x float> %622, float %319, i64 1, !dbg !38
  %624 = insertelement <8 x float> %623, float %321, i64 2, !dbg !38
  %625 = insertelement <8 x float> %624, float %323, i64 3, !dbg !38
  %626 = shufflevector <8 x float> %625, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %627 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %626, <8 x float> %593, <8 x float> %621), !dbg !38
  %628 = insertelement <8 x float> poison, float %325, i64 0, !dbg !38
  %629 = insertelement <8 x float> %628, float %327, i64 1, !dbg !38
  %630 = insertelement <8 x float> %629, float %329, i64 2, !dbg !38
  %631 = insertelement <8 x float> %630, float %331, i64 3, !dbg !38
  %632 = shufflevector <8 x float> %631, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %633 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %632, <8 x float> %595, <8 x float> %627), !dbg !38
  %634 = insertelement <8 x float> poison, float %333, i64 0, !dbg !38
  %635 = insertelement <8 x float> %634, float %335, i64 1, !dbg !38
  %636 = insertelement <8 x float> %635, float %337, i64 2, !dbg !38
  %637 = insertelement <8 x float> %636, float %339, i64 3, !dbg !38
  %638 = shufflevector <8 x float> %637, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %639 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %638, <8 x float> %597, <8 x float> %633), !dbg !38
  %640 = insertelement <8 x float> poison, float %341, i64 0, !dbg !38
  %641 = insertelement <8 x float> %640, float %343, i64 1, !dbg !38
  %642 = insertelement <8 x float> %641, float %345, i64 2, !dbg !38
  %643 = insertelement <8 x float> %642, float %347, i64 3, !dbg !38
  %644 = shufflevector <8 x float> %643, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %645 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %644, <8 x float> %599, <8 x float> %639), !dbg !38
  %646 = insertelement <8 x float> poison, float %349, i64 0, !dbg !38
  %647 = insertelement <8 x float> %646, float %351, i64 1, !dbg !38
  %648 = insertelement <8 x float> %647, float %353, i64 2, !dbg !38
  %649 = insertelement <8 x float> %648, float %355, i64 3, !dbg !38
  %650 = shufflevector <8 x float> %649, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %651 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %650, <8 x float> %601, <8 x float> %645), !dbg !38
  %652 = insertelement <8 x float> poison, float %357, i64 0, !dbg !38
  %653 = insertelement <8 x float> %652, float %359, i64 1, !dbg !38
  %654 = insertelement <8 x float> %653, float %361, i64 2, !dbg !38
  %655 = insertelement <8 x float> %654, float %363, i64 3, !dbg !38
  %656 = shufflevector <8 x float> %655, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %657 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %656, <8 x float> %603, <8 x float> %651), !dbg !38
  %658 = insertelement <8 x float> poison, float %365, i64 0, !dbg !38
  %659 = insertelement <8 x float> %658, float %367, i64 1, !dbg !38
  %660 = insertelement <8 x float> %659, float %369, i64 2, !dbg !38
  %661 = insertelement <8 x float> %660, float %371, i64 3, !dbg !38
  %662 = shufflevector <8 x float> %661, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %663 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %662, <8 x float> %605, <8 x float> %657), !dbg !38
  %664 = insertelement <8 x float> poison, float %373, i64 0, !dbg !38
  %665 = insertelement <8 x float> %664, float %375, i64 1, !dbg !38
  %666 = insertelement <8 x float> %665, float %377, i64 2, !dbg !38
  %667 = insertelement <8 x float> %666, float %379, i64 3, !dbg !38
  %668 = shufflevector <8 x float> %667, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %669 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %668, <8 x float> %607, <8 x float> %663), !dbg !38
  %670 = insertelement <8 x float> poison, float %381, i64 0, !dbg !38
  %671 = insertelement <8 x float> %670, float %383, i64 1, !dbg !38
  %672 = insertelement <8 x float> %671, float %385, i64 2, !dbg !38
  %673 = insertelement <8 x float> %672, float %387, i64 3, !dbg !38
  %674 = shufflevector <8 x float> %673, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !38
  %675 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %674, <8 x float> %609, <8 x float> %669), !dbg !38
  %676 = getelementptr i8, ptr addrspace(1) %.pn486, i64 128, !dbg !33
  %677 = getelementptr i8, ptr addrspace(1) %.pn6487, i64 2048, !dbg !34
  %678 = getelementptr i8, ptr addrspace(1) %.pn5688, i64 2048, !dbg !34
  %679 = getelementptr i8, ptr addrspace(1) %.pn4889, i64 2048, !dbg !34
  %680 = getelementptr i8, ptr addrspace(1) %.pn4090, i64 2048, !dbg !34
  %681 = add i32 %129, 1, !dbg !37
  %682 = icmp slt i32 %681, 3, !dbg !37
  %683 = select i1 %682, i32 %681, i32 0, !dbg !37
  %684 = shl i32 %683, 9, !dbg !31
  %685 = sext i32 %684 to i64, !dbg !31
  %686 = getelementptr float, ptr addrspace(3) @global_smem, i64 %685, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %687 = getelementptr float, ptr addrspace(3) %686, i64 %47, !dbg !31
  %688 = getelementptr float, ptr addrspace(3) %686, i64 %50, !dbg !31
  %689 = getelementptr float, ptr addrspace(3) %686, i64 %53, !dbg !31
  %690 = getelementptr float, ptr addrspace(3) %686, i64 %56, !dbg !31
  %691 = getelementptr float, ptr addrspace(3) %686, i64 %59, !dbg !31
  %692 = getelementptr float, ptr addrspace(3) %686, i64 %62, !dbg !31
  %693 = getelementptr float, ptr addrspace(3) %686, i64 %65, !dbg !31
  %694 = getelementptr float, ptr addrspace(3) %686, i64 %68, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %687, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %688, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %689, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %690, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %691, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %692, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %693, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x8, $2;", "r,l,r,b"(ptr addrspace(3) %694, ptr addrspace(1) %676, i32 0, i1 true) #3, !dbg !31
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !31
  %695 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %685, !dbg !32
  %696 = getelementptr float, ptr addrspace(3) %695, i64 %71, !dbg !32
  %697 = getelementptr float, ptr addrspace(3) %695, i64 %74, !dbg !32
  %698 = getelementptr float, ptr addrspace(3) %695, i64 %77, !dbg !32
  %699 = getelementptr float, ptr addrspace(3) %695, i64 %80, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %696, ptr addrspace(1) %677, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %697, ptr addrspace(1) %678, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %698, ptr addrspace(1) %679, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %699, ptr addrspace(1) %680, i32 0, i1 true) #3, !dbg !32
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !32
  %700 = add i32 %128, 1, !dbg !37
  %701 = icmp slt i32 %700, 3, !dbg !37
  %702 = select i1 %701, i32 %700, i32 0, !dbg !37
  %703 = shl i32 %702, 9, !dbg !31
  %704 = sext i32 %703 to i64, !dbg !31
  %705 = getelementptr float, ptr addrspace(3) @global_smem, i64 %704, !dbg !31
  tail call void asm sideeffect "cp.async.wait_group 0x4;", ""() #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %706 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 6144), i64 %704, !dbg !32
  br i1 %130, label %125, label %707, !dbg !37

707:                                              ; preds = %125
  %708 = srem i32 %4, %8, !dbg !39
  %709 = add i32 %708, %6, !dbg !40
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %710 = shl i32 %709, 4, !dbg !41
  %711 = or disjoint i32 %710, %16, !dbg !42
  %712 = or disjoint i32 %710, %17, !dbg !42
  %713 = icmp slt i32 %711, 1, !dbg !43
  %714 = icmp slt i32 %712, 1, !dbg !43
  %715 = icmp slt i32 %18, 16, !dbg !44
  %716 = and i1 %715, %713, !dbg !45
  %717 = and i1 %715, %714, !dbg !45
  %718 = shl i32 %20, 4, !dbg !46
  %719 = add i32 %18, %718, !dbg !47
  %720 = sext i32 %719 to i64, !dbg !48
  %721 = getelementptr float, ptr addrspace(1) %2, i64 %720, !dbg !48
  %722 = and i32 %15, 6, !dbg !49
  %723 = mul nuw nsw i32 %722, 20, !dbg !49
  %724 = add nuw nsw i32 %723, %120, !dbg !49
  %725 = zext nneg i32 %724 to i64, !dbg !49
  %726 = getelementptr float, ptr addrspace(3) @global_smem, i64 %725, !dbg !49
  %727 = shufflevector <8 x float> %675, <8 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !49
  store <2 x float> %727, ptr addrspace(3) %726, align 8, !dbg !49
  %728 = getelementptr i8, ptr addrspace(3) %726, i64 80, !dbg !49
  %729 = shufflevector <8 x float> %675, <8 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !49
  store <2 x float> %729, ptr addrspace(3) %728, align 8, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %730 = mul nuw nsw i32 %16, 20, !dbg !49
  %731 = add nuw nsw i32 %730, %14, !dbg !49
  %732 = zext nneg i32 %731 to i64, !dbg !49
  %733 = getelementptr float, ptr addrspace(3) @global_smem, i64 %732, !dbg !49
  %734 = load <4 x i32>, ptr addrspace(3) %733, align 16, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %735 = shufflevector <8 x float> %675, <8 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !49
  store <2 x float> %735, ptr addrspace(3) %726, align 8, !dbg !49
  %736 = shufflevector <8 x float> %675, <8 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !49
  store <2 x float> %736, ptr addrspace(3) %728, align 8, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %737 = load <4 x i32>, ptr addrspace(3) %733, align 16, !dbg !49
  %.extract = extractelement <4 x i32> %734, i64 0, !dbg !49
  %.extract66 = extractelement <4 x i32> %734, i64 1, !dbg !49
  %.extract68 = extractelement <4 x i32> %734, i64 2, !dbg !49
  %.extract70 = extractelement <4 x i32> %734, i64 3, !dbg !49
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract66, i32 %.extract68, i32 %.extract70, ptr addrspace(1) %721, i1 %716) #3, !dbg !49
  %.extract72 = extractelement <4 x i32> %737, i64 0, !dbg !49
  %.extract74 = extractelement <4 x i32> %737, i64 1, !dbg !49
  %.extract76 = extractelement <4 x i32> %737, i64 2, !dbg !49
  %.extract78 = extractelement <4 x i32> %737, i64 3, !dbg !49
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract72, i32 %.extract74, i32 %.extract76, i32 %.extract78, ptr addrspace(1) %721, i1 %717) #3, !dbg !49
  ret void, !dbg !50
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cotxopk6uk7guirjrna2nfny4ffqcc74hi7uztz2fxntzor5jqhs.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/ot")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 17, type: !8, scopeLine: 17, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 42, column: 24, scope: !7)
!11 = !DILocation(line: 48, column: 22, scope: !7)
!12 = !DILocation(line: 49, column: 41, scope: !7)
!13 = !DILocation(line: 49, column: 30, scope: !7)
!14 = !DILocation(line: 49, column: 50, scope: !7)
!15 = !DILocation(line: 51, column: 30, scope: !7)
!16 = !DILocation(line: 54, column: 17, scope: !7)
!17 = !DILocation(line: 54, column: 40, scope: !7)
!18 = !DILocation(line: 54, column: 27, scope: !7)
!19 = !DILocation(line: 60, column: 52, scope: !7)
!20 = !DILocation(line: 66, column: 26, scope: !7)
!21 = !DILocation(line: 67, column: 43, scope: !7)
!22 = !DILocation(line: 67, column: 72, scope: !7)
!23 = !DILocation(line: 67, column: 66, scope: !7)
!24 = !DILocation(line: 67, column: 13, scope: !7)
!25 = !DILocation(line: 68, column: 16, scope: !7)
!26 = !DILocation(line: 68, column: 27, scope: !7)
!27 = !DILocation(line: 68, column: 72, scope: !7)
!28 = !DILocation(line: 68, column: 39, scope: !7)
!29 = !DILocation(line: 68, column: 66, scope: !7)
!30 = !DILocation(line: 68, column: 13, scope: !7)
!31 = !DILocation(line: 76, column: 24, scope: !7)
!32 = !DILocation(line: 77, column: 24, scope: !7)
!33 = !DILocation(line: 79, column: 13, scope: !7)
!34 = !DILocation(line: 80, column: 13, scope: !7)
!35 = !DILocation(line: 76, column: 46, scope: !7)
!36 = !DILocation(line: 77, column: 46, scope: !7)
!37 = !DILocation(line: 71, column: 25, scope: !7)
!38 = !DILocation(line: 78, column: 25, scope: !7)
!39 = !DILocation(line: 50, column: 40, scope: !7)
!40 = !DILocation(line: 50, column: 34, scope: !7)
!41 = !DILocation(line: 83, column: 17, scope: !7)
!42 = !DILocation(line: 83, column: 27, scope: !7)
!43 = !DILocation(line: 88, column: 20, scope: !7)
!44 = !DILocation(line: 88, column: 34, scope: !7)
!45 = !DILocation(line: 88, column: 26, scope: !7)
!46 = !DILocation(line: 92, column: 53, scope: !7)
!47 = !DILocation(line: 92, column: 50, scope: !7)
!48 = !DILocation(line: 92, column: 25, scope: !7)
!49 = !DILocation(line: 92, column: 79, scope: !7)
!50 = !DILocation(line: 92, column: 4, scope: !7)
