; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %.mask = and i32 %3, 16777215, !dbg !10
  %5 = icmp eq i32 %.mask, 0, !dbg !10
  br i1 %5, label %common.ret, label %6, !dbg !10

common.ret:                                       ; preds = %4, %790
  ret void, !dbg !11

6:                                                ; preds = %4
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %8 = add i32 %3, 31, !dbg !13
  %9 = sdiv i32 %8, 32, !dbg !14
  %.frozen = freeze i32 %7
  %10 = sdiv i32 %.frozen, 32, !dbg !15
  %11 = shl nsw i32 %10, 3, !dbg !16
  %12 = sub nsw i32 %9, %11, !dbg !17
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 8), !dbg !18
  %14 = srem i32 %7, %13, !dbg !19
  %15 = add nsw i32 %11, %14, !dbg !20
  %16 = mul i32 %10, 32
  %.decomposed = sub i32 %.frozen, %16
  %17 = sdiv i32 %.decomposed, %13, !dbg !21
  %18 = shl i32 %15, 5, !dbg !22
  %19 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !23
  %20 = and i32 %19, 31, !dbg !23
  %21 = lshr i32 %19, 3, !dbg !23
  %22 = and i32 %21, 31, !dbg !23
  %23 = lshr i32 %19, 4, !dbg !23
  %24 = and i32 %23, 7, !dbg !23
  %25 = lshr i32 %19, 4, !dbg !23
  %26 = and i32 %25, 8, !dbg !23
  %27 = or disjoint i32 %24, %26, !dbg !23
  %28 = or disjoint i32 %18, %22, !dbg !24
  %29 = or disjoint i32 %18, %27, !dbg !23
  %30 = shl nsw i32 %17, 6, !dbg !25
  %31 = or disjoint i32 %22, 32, !dbg !26
  %32 = shl i32 %19, 2, !dbg !26
  %33 = and i32 %32, 28, !dbg !26
  %34 = or disjoint i32 %30, %22, !dbg !27
  %35 = or disjoint i32 %30, %31, !dbg !27
  %36 = srem i32 %28, %3, !dbg !28
  %37 = srem i32 %34, 256, !dbg !29
  %38 = srem i32 %35, 256, !dbg !29
  %39 = shl i32 %36, 9, !dbg !30
  %40 = or disjoint i32 %39, %33, !dbg !31
  %41 = sext i32 %40 to i64, !dbg !32
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !32
  %43 = shl nsw i32 %37, 9, !dbg !33
  %44 = shl nsw i32 %38, 9, !dbg !33
  %45 = or disjoint i32 %43, %33, !dbg !34
  %46 = or disjoint i32 %44, %33, !dbg !34
  %47 = sext i32 %45 to i64, !dbg !35
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !35
  %49 = sext i32 %46 to i64, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !35
  %51 = shl nuw nsw i32 %22, 5, !dbg !36
  %52 = or disjoint i32 %51, %33, !dbg !36
  %53 = zext nneg i32 %52 to i64, !dbg !36
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %54, ptr addrspace(1) %42, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %55 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %53, !dbg !37
  %56 = shl nuw nsw i32 %31, 5, !dbg !37
  %57 = or disjoint i32 %56, %33, !dbg !37
  %58 = zext nneg i32 %57 to i64, !dbg !37
  %59 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %48, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %59, ptr addrspace(1) %50, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %60 = getelementptr i8, ptr addrspace(1) %42, i64 128, !dbg !38
  %61 = getelementptr i8, ptr addrspace(1) %48, i64 128, !dbg !39
  %62 = getelementptr i8, ptr addrspace(1) %50, i64 128, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %63 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %60, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %64 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %53, !dbg !37
  %65 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %64, ptr addrspace(1) %61, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %65, ptr addrspace(1) %62, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %66 = getelementptr i8, ptr addrspace(1) %42, i64 256, !dbg !38
  %67 = getelementptr i8, ptr addrspace(1) %48, i64 256, !dbg !39
  %68 = getelementptr i8, ptr addrspace(1) %50, i64 256, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %69 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %69, ptr addrspace(1) %66, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %70 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %53, !dbg !37
  %71 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %70, ptr addrspace(1) %67, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %71, ptr addrspace(1) %68, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %72 = getelementptr i8, ptr addrspace(1) %42, i64 384, !dbg !38
  %73 = getelementptr i8, ptr addrspace(1) %48, i64 384, !dbg !39
  %74 = getelementptr i8, ptr addrspace(1) %50, i64 384, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %75 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 12288), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %75, ptr addrspace(1) %72, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %76 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %53, !dbg !37
  %77 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %76, ptr addrspace(1) %73, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %77, ptr addrspace(1) %74, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %78 = lshr i32 %19, 4
  %79 = shl nuw nsw i32 %20, 1
  %80 = shl i32 %78, 5
  %81 = and i32 %80, 960
  %82 = zext nneg i32 %81 to i64
  %83 = shl nuw nsw i32 %20, 6
  %84 = zext nneg i32 %83 to i64
  br label %85, !dbg !40

85:                                               ; preds = %6, %85
  %86 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), %6 ], [ %787, %85 ]
  %87 = phi ptr addrspace(3) [ @global_smem, %6 ], [ %784, %85 ]
  %88 = phi i32 [ 0, %6 ], [ %781, %85 ]
  %89 = phi i32 [ 3, %6 ], [ %770, %85 ]
  %.pn1642 = phi ptr addrspace(1) [ %74, %6 ], [ %767, %85 ]
  %.pn2441 = phi ptr addrspace(1) [ %73, %6 ], [ %766, %85 ]
  %.pn840 = phi ptr addrspace(1) [ %72, %6 ], [ %765, %85 ]
  %90 = phi i32 [ 0, %6 ], [ %788, %85 ]
  %91 = phi <8 x float> [ zeroinitializer, %6 ], [ %764, %85 ]
  %92 = icmp ult i32 %90, 384, !dbg !40
  %93 = getelementptr float, ptr addrspace(3) %87, i64 %82, !dbg !36
  %94 = load float, ptr addrspace(3) %93, align 4, !dbg !36
  %95 = getelementptr i8, ptr addrspace(3) %93, i64 128, !dbg !36
  %96 = load float, ptr addrspace(3) %95, align 4, !dbg !36
  %97 = getelementptr i8, ptr addrspace(3) %93, i64 2048, !dbg !36
  %98 = load float, ptr addrspace(3) %97, align 4, !dbg !36
  %99 = getelementptr i8, ptr addrspace(3) %93, i64 2176, !dbg !36
  %100 = load float, ptr addrspace(3) %99, align 4, !dbg !36
  %101 = getelementptr i8, ptr addrspace(3) %93, i64 4, !dbg !36
  %102 = load float, ptr addrspace(3) %101, align 4, !dbg !36
  %103 = getelementptr i8, ptr addrspace(3) %93, i64 132, !dbg !36
  %104 = load float, ptr addrspace(3) %103, align 4, !dbg !36
  %105 = getelementptr i8, ptr addrspace(3) %93, i64 2052, !dbg !36
  %106 = load float, ptr addrspace(3) %105, align 4, !dbg !36
  %107 = getelementptr i8, ptr addrspace(3) %93, i64 2180, !dbg !36
  %108 = load float, ptr addrspace(3) %107, align 4, !dbg !36
  %109 = getelementptr i8, ptr addrspace(3) %93, i64 8, !dbg !36
  %110 = load float, ptr addrspace(3) %109, align 4, !dbg !36
  %111 = getelementptr i8, ptr addrspace(3) %93, i64 136, !dbg !36
  %112 = load float, ptr addrspace(3) %111, align 4, !dbg !36
  %113 = getelementptr i8, ptr addrspace(3) %93, i64 2056, !dbg !36
  %114 = load float, ptr addrspace(3) %113, align 4, !dbg !36
  %115 = getelementptr i8, ptr addrspace(3) %93, i64 2184, !dbg !36
  %116 = load float, ptr addrspace(3) %115, align 4, !dbg !36
  %117 = getelementptr i8, ptr addrspace(3) %93, i64 12, !dbg !36
  %118 = load float, ptr addrspace(3) %117, align 4, !dbg !36
  %119 = getelementptr i8, ptr addrspace(3) %93, i64 140, !dbg !36
  %120 = load float, ptr addrspace(3) %119, align 4, !dbg !36
  %121 = getelementptr i8, ptr addrspace(3) %93, i64 2060, !dbg !36
  %122 = load float, ptr addrspace(3) %121, align 4, !dbg !36
  %123 = getelementptr i8, ptr addrspace(3) %93, i64 2188, !dbg !36
  %124 = load float, ptr addrspace(3) %123, align 4, !dbg !36
  %125 = getelementptr i8, ptr addrspace(3) %93, i64 16, !dbg !36
  %126 = load float, ptr addrspace(3) %125, align 4, !dbg !36
  %127 = getelementptr i8, ptr addrspace(3) %93, i64 144, !dbg !36
  %128 = load float, ptr addrspace(3) %127, align 4, !dbg !36
  %129 = getelementptr i8, ptr addrspace(3) %93, i64 2064, !dbg !36
  %130 = load float, ptr addrspace(3) %129, align 4, !dbg !36
  %131 = getelementptr i8, ptr addrspace(3) %93, i64 2192, !dbg !36
  %132 = load float, ptr addrspace(3) %131, align 4, !dbg !36
  %133 = getelementptr i8, ptr addrspace(3) %93, i64 20, !dbg !36
  %134 = load float, ptr addrspace(3) %133, align 4, !dbg !36
  %135 = getelementptr i8, ptr addrspace(3) %93, i64 148, !dbg !36
  %136 = load float, ptr addrspace(3) %135, align 4, !dbg !36
  %137 = getelementptr i8, ptr addrspace(3) %93, i64 2068, !dbg !36
  %138 = load float, ptr addrspace(3) %137, align 4, !dbg !36
  %139 = getelementptr i8, ptr addrspace(3) %93, i64 2196, !dbg !36
  %140 = load float, ptr addrspace(3) %139, align 4, !dbg !36
  %141 = getelementptr i8, ptr addrspace(3) %93, i64 24, !dbg !36
  %142 = load float, ptr addrspace(3) %141, align 4, !dbg !36
  %143 = getelementptr i8, ptr addrspace(3) %93, i64 152, !dbg !36
  %144 = load float, ptr addrspace(3) %143, align 4, !dbg !36
  %145 = getelementptr i8, ptr addrspace(3) %93, i64 2072, !dbg !36
  %146 = load float, ptr addrspace(3) %145, align 4, !dbg !36
  %147 = getelementptr i8, ptr addrspace(3) %93, i64 2200, !dbg !36
  %148 = load float, ptr addrspace(3) %147, align 4, !dbg !36
  %149 = getelementptr i8, ptr addrspace(3) %93, i64 28, !dbg !36
  %150 = load float, ptr addrspace(3) %149, align 4, !dbg !36
  %151 = getelementptr i8, ptr addrspace(3) %93, i64 156, !dbg !36
  %152 = load float, ptr addrspace(3) %151, align 4, !dbg !36
  %153 = getelementptr i8, ptr addrspace(3) %93, i64 2076, !dbg !36
  %154 = load float, ptr addrspace(3) %153, align 4, !dbg !36
  %155 = getelementptr i8, ptr addrspace(3) %93, i64 2204, !dbg !36
  %156 = load float, ptr addrspace(3) %155, align 4, !dbg !36
  %157 = getelementptr i8, ptr addrspace(3) %93, i64 32, !dbg !36
  %158 = load float, ptr addrspace(3) %157, align 4, !dbg !36
  %159 = getelementptr i8, ptr addrspace(3) %93, i64 160, !dbg !36
  %160 = load float, ptr addrspace(3) %159, align 4, !dbg !36
  %161 = getelementptr i8, ptr addrspace(3) %93, i64 2080, !dbg !36
  %162 = load float, ptr addrspace(3) %161, align 4, !dbg !36
  %163 = getelementptr i8, ptr addrspace(3) %93, i64 2208, !dbg !36
  %164 = load float, ptr addrspace(3) %163, align 4, !dbg !36
  %165 = getelementptr i8, ptr addrspace(3) %93, i64 36, !dbg !36
  %166 = load float, ptr addrspace(3) %165, align 4, !dbg !36
  %167 = getelementptr i8, ptr addrspace(3) %93, i64 164, !dbg !36
  %168 = load float, ptr addrspace(3) %167, align 4, !dbg !36
  %169 = getelementptr i8, ptr addrspace(3) %93, i64 2084, !dbg !36
  %170 = load float, ptr addrspace(3) %169, align 4, !dbg !36
  %171 = getelementptr i8, ptr addrspace(3) %93, i64 2212, !dbg !36
  %172 = load float, ptr addrspace(3) %171, align 4, !dbg !36
  %173 = getelementptr i8, ptr addrspace(3) %93, i64 40, !dbg !36
  %174 = load float, ptr addrspace(3) %173, align 4, !dbg !36
  %175 = getelementptr i8, ptr addrspace(3) %93, i64 168, !dbg !36
  %176 = load float, ptr addrspace(3) %175, align 4, !dbg !36
  %177 = getelementptr i8, ptr addrspace(3) %93, i64 2088, !dbg !36
  %178 = load float, ptr addrspace(3) %177, align 4, !dbg !36
  %179 = getelementptr i8, ptr addrspace(3) %93, i64 2216, !dbg !36
  %180 = load float, ptr addrspace(3) %179, align 4, !dbg !36
  %181 = getelementptr i8, ptr addrspace(3) %93, i64 44, !dbg !36
  %182 = load float, ptr addrspace(3) %181, align 4, !dbg !36
  %183 = getelementptr i8, ptr addrspace(3) %93, i64 172, !dbg !36
  %184 = load float, ptr addrspace(3) %183, align 4, !dbg !36
  %185 = getelementptr i8, ptr addrspace(3) %93, i64 2092, !dbg !36
  %186 = load float, ptr addrspace(3) %185, align 4, !dbg !36
  %187 = getelementptr i8, ptr addrspace(3) %93, i64 2220, !dbg !36
  %188 = load float, ptr addrspace(3) %187, align 4, !dbg !36
  %189 = getelementptr i8, ptr addrspace(3) %93, i64 48, !dbg !36
  %190 = load float, ptr addrspace(3) %189, align 4, !dbg !36
  %191 = getelementptr i8, ptr addrspace(3) %93, i64 176, !dbg !36
  %192 = load float, ptr addrspace(3) %191, align 4, !dbg !36
  %193 = getelementptr i8, ptr addrspace(3) %93, i64 2096, !dbg !36
  %194 = load float, ptr addrspace(3) %193, align 4, !dbg !36
  %195 = getelementptr i8, ptr addrspace(3) %93, i64 2224, !dbg !36
  %196 = load float, ptr addrspace(3) %195, align 4, !dbg !36
  %197 = getelementptr i8, ptr addrspace(3) %93, i64 52, !dbg !36
  %198 = load float, ptr addrspace(3) %197, align 4, !dbg !36
  %199 = getelementptr i8, ptr addrspace(3) %93, i64 180, !dbg !36
  %200 = load float, ptr addrspace(3) %199, align 4, !dbg !36
  %201 = getelementptr i8, ptr addrspace(3) %93, i64 2100, !dbg !36
  %202 = load float, ptr addrspace(3) %201, align 4, !dbg !36
  %203 = getelementptr i8, ptr addrspace(3) %93, i64 2228, !dbg !36
  %204 = load float, ptr addrspace(3) %203, align 4, !dbg !36
  %205 = getelementptr i8, ptr addrspace(3) %93, i64 56, !dbg !36
  %206 = load float, ptr addrspace(3) %205, align 4, !dbg !36
  %207 = getelementptr i8, ptr addrspace(3) %93, i64 184, !dbg !36
  %208 = load float, ptr addrspace(3) %207, align 4, !dbg !36
  %209 = getelementptr i8, ptr addrspace(3) %93, i64 2104, !dbg !36
  %210 = load float, ptr addrspace(3) %209, align 4, !dbg !36
  %211 = getelementptr i8, ptr addrspace(3) %93, i64 2232, !dbg !36
  %212 = load float, ptr addrspace(3) %211, align 4, !dbg !36
  %213 = getelementptr i8, ptr addrspace(3) %93, i64 60, !dbg !36
  %214 = load float, ptr addrspace(3) %213, align 4, !dbg !36
  %215 = getelementptr i8, ptr addrspace(3) %93, i64 188, !dbg !36
  %216 = load float, ptr addrspace(3) %215, align 4, !dbg !36
  %217 = getelementptr i8, ptr addrspace(3) %93, i64 2108, !dbg !36
  %218 = load float, ptr addrspace(3) %217, align 4, !dbg !36
  %219 = getelementptr i8, ptr addrspace(3) %93, i64 2236, !dbg !36
  %220 = load float, ptr addrspace(3) %219, align 4, !dbg !36
  %221 = getelementptr i8, ptr addrspace(3) %93, i64 64, !dbg !36
  %222 = load float, ptr addrspace(3) %221, align 4, !dbg !36
  %223 = getelementptr i8, ptr addrspace(3) %93, i64 192, !dbg !36
  %224 = load float, ptr addrspace(3) %223, align 4, !dbg !36
  %225 = getelementptr i8, ptr addrspace(3) %93, i64 2112, !dbg !36
  %226 = load float, ptr addrspace(3) %225, align 4, !dbg !36
  %227 = getelementptr i8, ptr addrspace(3) %93, i64 2240, !dbg !36
  %228 = load float, ptr addrspace(3) %227, align 4, !dbg !36
  %229 = getelementptr i8, ptr addrspace(3) %93, i64 68, !dbg !36
  %230 = load float, ptr addrspace(3) %229, align 4, !dbg !36
  %231 = getelementptr i8, ptr addrspace(3) %93, i64 196, !dbg !36
  %232 = load float, ptr addrspace(3) %231, align 4, !dbg !36
  %233 = getelementptr i8, ptr addrspace(3) %93, i64 2116, !dbg !36
  %234 = load float, ptr addrspace(3) %233, align 4, !dbg !36
  %235 = getelementptr i8, ptr addrspace(3) %93, i64 2244, !dbg !36
  %236 = load float, ptr addrspace(3) %235, align 4, !dbg !36
  %237 = getelementptr i8, ptr addrspace(3) %93, i64 72, !dbg !36
  %238 = load float, ptr addrspace(3) %237, align 4, !dbg !36
  %239 = getelementptr i8, ptr addrspace(3) %93, i64 200, !dbg !36
  %240 = load float, ptr addrspace(3) %239, align 4, !dbg !36
  %241 = getelementptr i8, ptr addrspace(3) %93, i64 2120, !dbg !36
  %242 = load float, ptr addrspace(3) %241, align 4, !dbg !36
  %243 = getelementptr i8, ptr addrspace(3) %93, i64 2248, !dbg !36
  %244 = load float, ptr addrspace(3) %243, align 4, !dbg !36
  %245 = getelementptr i8, ptr addrspace(3) %93, i64 76, !dbg !36
  %246 = load float, ptr addrspace(3) %245, align 4, !dbg !36
  %247 = getelementptr i8, ptr addrspace(3) %93, i64 204, !dbg !36
  %248 = load float, ptr addrspace(3) %247, align 4, !dbg !36
  %249 = getelementptr i8, ptr addrspace(3) %93, i64 2124, !dbg !36
  %250 = load float, ptr addrspace(3) %249, align 4, !dbg !36
  %251 = getelementptr i8, ptr addrspace(3) %93, i64 2252, !dbg !36
  %252 = load float, ptr addrspace(3) %251, align 4, !dbg !36
  %253 = getelementptr i8, ptr addrspace(3) %93, i64 80, !dbg !36
  %254 = load float, ptr addrspace(3) %253, align 4, !dbg !36
  %255 = getelementptr i8, ptr addrspace(3) %93, i64 208, !dbg !36
  %256 = load float, ptr addrspace(3) %255, align 4, !dbg !36
  %257 = getelementptr i8, ptr addrspace(3) %93, i64 2128, !dbg !36
  %258 = load float, ptr addrspace(3) %257, align 4, !dbg !36
  %259 = getelementptr i8, ptr addrspace(3) %93, i64 2256, !dbg !36
  %260 = load float, ptr addrspace(3) %259, align 4, !dbg !36
  %261 = getelementptr i8, ptr addrspace(3) %93, i64 84, !dbg !36
  %262 = load float, ptr addrspace(3) %261, align 4, !dbg !36
  %263 = getelementptr i8, ptr addrspace(3) %93, i64 212, !dbg !36
  %264 = load float, ptr addrspace(3) %263, align 4, !dbg !36
  %265 = getelementptr i8, ptr addrspace(3) %93, i64 2132, !dbg !36
  %266 = load float, ptr addrspace(3) %265, align 4, !dbg !36
  %267 = getelementptr i8, ptr addrspace(3) %93, i64 2260, !dbg !36
  %268 = load float, ptr addrspace(3) %267, align 4, !dbg !36
  %269 = getelementptr i8, ptr addrspace(3) %93, i64 88, !dbg !36
  %270 = load float, ptr addrspace(3) %269, align 4, !dbg !36
  %271 = getelementptr i8, ptr addrspace(3) %93, i64 216, !dbg !36
  %272 = load float, ptr addrspace(3) %271, align 4, !dbg !36
  %273 = getelementptr i8, ptr addrspace(3) %93, i64 2136, !dbg !36
  %274 = load float, ptr addrspace(3) %273, align 4, !dbg !36
  %275 = getelementptr i8, ptr addrspace(3) %93, i64 2264, !dbg !36
  %276 = load float, ptr addrspace(3) %275, align 4, !dbg !36
  %277 = getelementptr i8, ptr addrspace(3) %93, i64 92, !dbg !36
  %278 = load float, ptr addrspace(3) %277, align 4, !dbg !36
  %279 = getelementptr i8, ptr addrspace(3) %93, i64 220, !dbg !36
  %280 = load float, ptr addrspace(3) %279, align 4, !dbg !36
  %281 = getelementptr i8, ptr addrspace(3) %93, i64 2140, !dbg !36
  %282 = load float, ptr addrspace(3) %281, align 4, !dbg !36
  %283 = getelementptr i8, ptr addrspace(3) %93, i64 2268, !dbg !36
  %284 = load float, ptr addrspace(3) %283, align 4, !dbg !36
  %285 = getelementptr i8, ptr addrspace(3) %93, i64 96, !dbg !36
  %286 = load float, ptr addrspace(3) %285, align 4, !dbg !36
  %287 = getelementptr i8, ptr addrspace(3) %93, i64 224, !dbg !36
  %288 = load float, ptr addrspace(3) %287, align 4, !dbg !36
  %289 = getelementptr i8, ptr addrspace(3) %93, i64 2144, !dbg !36
  %290 = load float, ptr addrspace(3) %289, align 4, !dbg !36
  %291 = getelementptr i8, ptr addrspace(3) %93, i64 2272, !dbg !36
  %292 = load float, ptr addrspace(3) %291, align 4, !dbg !36
  %293 = getelementptr i8, ptr addrspace(3) %93, i64 100, !dbg !36
  %294 = load float, ptr addrspace(3) %293, align 4, !dbg !36
  %295 = getelementptr i8, ptr addrspace(3) %93, i64 228, !dbg !36
  %296 = load float, ptr addrspace(3) %295, align 4, !dbg !36
  %297 = getelementptr i8, ptr addrspace(3) %93, i64 2148, !dbg !36
  %298 = load float, ptr addrspace(3) %297, align 4, !dbg !36
  %299 = getelementptr i8, ptr addrspace(3) %93, i64 2276, !dbg !36
  %300 = load float, ptr addrspace(3) %299, align 4, !dbg !36
  %301 = getelementptr i8, ptr addrspace(3) %93, i64 104, !dbg !36
  %302 = load float, ptr addrspace(3) %301, align 4, !dbg !36
  %303 = getelementptr i8, ptr addrspace(3) %93, i64 232, !dbg !36
  %304 = load float, ptr addrspace(3) %303, align 4, !dbg !36
  %305 = getelementptr i8, ptr addrspace(3) %93, i64 2152, !dbg !36
  %306 = load float, ptr addrspace(3) %305, align 4, !dbg !36
  %307 = getelementptr i8, ptr addrspace(3) %93, i64 2280, !dbg !36
  %308 = load float, ptr addrspace(3) %307, align 4, !dbg !36
  %309 = getelementptr i8, ptr addrspace(3) %93, i64 108, !dbg !36
  %310 = load float, ptr addrspace(3) %309, align 4, !dbg !36
  %311 = getelementptr i8, ptr addrspace(3) %93, i64 236, !dbg !36
  %312 = load float, ptr addrspace(3) %311, align 4, !dbg !36
  %313 = getelementptr i8, ptr addrspace(3) %93, i64 2156, !dbg !36
  %314 = load float, ptr addrspace(3) %313, align 4, !dbg !36
  %315 = getelementptr i8, ptr addrspace(3) %93, i64 2284, !dbg !36
  %316 = load float, ptr addrspace(3) %315, align 4, !dbg !36
  %317 = getelementptr i8, ptr addrspace(3) %93, i64 112, !dbg !36
  %318 = load float, ptr addrspace(3) %317, align 4, !dbg !36
  %319 = getelementptr i8, ptr addrspace(3) %93, i64 240, !dbg !36
  %320 = load float, ptr addrspace(3) %319, align 4, !dbg !36
  %321 = getelementptr i8, ptr addrspace(3) %93, i64 2160, !dbg !36
  %322 = load float, ptr addrspace(3) %321, align 4, !dbg !36
  %323 = getelementptr i8, ptr addrspace(3) %93, i64 2288, !dbg !36
  %324 = load float, ptr addrspace(3) %323, align 4, !dbg !36
  %325 = getelementptr i8, ptr addrspace(3) %93, i64 116, !dbg !36
  %326 = load float, ptr addrspace(3) %325, align 4, !dbg !36
  %327 = getelementptr i8, ptr addrspace(3) %93, i64 244, !dbg !36
  %328 = load float, ptr addrspace(3) %327, align 4, !dbg !36
  %329 = getelementptr i8, ptr addrspace(3) %93, i64 2164, !dbg !36
  %330 = load float, ptr addrspace(3) %329, align 4, !dbg !36
  %331 = getelementptr i8, ptr addrspace(3) %93, i64 2292, !dbg !36
  %332 = load float, ptr addrspace(3) %331, align 4, !dbg !36
  %333 = getelementptr i8, ptr addrspace(3) %93, i64 120, !dbg !36
  %334 = load float, ptr addrspace(3) %333, align 4, !dbg !36
  %335 = getelementptr i8, ptr addrspace(3) %93, i64 248, !dbg !36
  %336 = load float, ptr addrspace(3) %335, align 4, !dbg !36
  %337 = getelementptr i8, ptr addrspace(3) %93, i64 2168, !dbg !36
  %338 = load float, ptr addrspace(3) %337, align 4, !dbg !36
  %339 = getelementptr i8, ptr addrspace(3) %93, i64 2296, !dbg !36
  %340 = load float, ptr addrspace(3) %339, align 4, !dbg !36
  %341 = getelementptr i8, ptr addrspace(3) %93, i64 124, !dbg !36
  %342 = load float, ptr addrspace(3) %341, align 4, !dbg !36
  %343 = getelementptr i8, ptr addrspace(3) %93, i64 252, !dbg !36
  %344 = load float, ptr addrspace(3) %343, align 4, !dbg !36
  %345 = getelementptr i8, ptr addrspace(3) %93, i64 2172, !dbg !36
  %346 = load float, ptr addrspace(3) %345, align 4, !dbg !36
  %347 = getelementptr i8, ptr addrspace(3) %93, i64 2300, !dbg !36
  %348 = load float, ptr addrspace(3) %347, align 4, !dbg !36
  %349 = getelementptr float, ptr addrspace(3) %86, i64 %84, !dbg !37
  %350 = load float, ptr addrspace(3) %349, align 4, !dbg !37
  %351 = getelementptr i8, ptr addrspace(3) %349, i64 128, !dbg !37
  %352 = load float, ptr addrspace(3) %351, align 4, !dbg !37
  %353 = getelementptr i8, ptr addrspace(3) %349, i64 4, !dbg !37
  %354 = load float, ptr addrspace(3) %353, align 4, !dbg !37
  %355 = getelementptr i8, ptr addrspace(3) %349, i64 132, !dbg !37
  %356 = load float, ptr addrspace(3) %355, align 4, !dbg !37
  %357 = getelementptr i8, ptr addrspace(3) %349, i64 8, !dbg !37
  %358 = load float, ptr addrspace(3) %357, align 4, !dbg !37
  %359 = getelementptr i8, ptr addrspace(3) %349, i64 136, !dbg !37
  %360 = load float, ptr addrspace(3) %359, align 4, !dbg !37
  %361 = getelementptr i8, ptr addrspace(3) %349, i64 12, !dbg !37
  %362 = load float, ptr addrspace(3) %361, align 4, !dbg !37
  %363 = getelementptr i8, ptr addrspace(3) %349, i64 140, !dbg !37
  %364 = load float, ptr addrspace(3) %363, align 4, !dbg !37
  %365 = getelementptr i8, ptr addrspace(3) %349, i64 16, !dbg !37
  %366 = load float, ptr addrspace(3) %365, align 4, !dbg !37
  %367 = getelementptr i8, ptr addrspace(3) %349, i64 144, !dbg !37
  %368 = load float, ptr addrspace(3) %367, align 4, !dbg !37
  %369 = getelementptr i8, ptr addrspace(3) %349, i64 20, !dbg !37
  %370 = load float, ptr addrspace(3) %369, align 4, !dbg !37
  %371 = getelementptr i8, ptr addrspace(3) %349, i64 148, !dbg !37
  %372 = load float, ptr addrspace(3) %371, align 4, !dbg !37
  %373 = getelementptr i8, ptr addrspace(3) %349, i64 24, !dbg !37
  %374 = load float, ptr addrspace(3) %373, align 4, !dbg !37
  %375 = getelementptr i8, ptr addrspace(3) %349, i64 152, !dbg !37
  %376 = load float, ptr addrspace(3) %375, align 4, !dbg !37
  %377 = getelementptr i8, ptr addrspace(3) %349, i64 28, !dbg !37
  %378 = load float, ptr addrspace(3) %377, align 4, !dbg !37
  %379 = getelementptr i8, ptr addrspace(3) %349, i64 156, !dbg !37
  %380 = load float, ptr addrspace(3) %379, align 4, !dbg !37
  %381 = getelementptr i8, ptr addrspace(3) %349, i64 32, !dbg !37
  %382 = load float, ptr addrspace(3) %381, align 4, !dbg !37
  %383 = getelementptr i8, ptr addrspace(3) %349, i64 160, !dbg !37
  %384 = load float, ptr addrspace(3) %383, align 4, !dbg !37
  %385 = getelementptr i8, ptr addrspace(3) %349, i64 36, !dbg !37
  %386 = load float, ptr addrspace(3) %385, align 4, !dbg !37
  %387 = getelementptr i8, ptr addrspace(3) %349, i64 164, !dbg !37
  %388 = load float, ptr addrspace(3) %387, align 4, !dbg !37
  %389 = getelementptr i8, ptr addrspace(3) %349, i64 40, !dbg !37
  %390 = load float, ptr addrspace(3) %389, align 4, !dbg !37
  %391 = getelementptr i8, ptr addrspace(3) %349, i64 168, !dbg !37
  %392 = load float, ptr addrspace(3) %391, align 4, !dbg !37
  %393 = getelementptr i8, ptr addrspace(3) %349, i64 44, !dbg !37
  %394 = load float, ptr addrspace(3) %393, align 4, !dbg !37
  %395 = getelementptr i8, ptr addrspace(3) %349, i64 172, !dbg !37
  %396 = load float, ptr addrspace(3) %395, align 4, !dbg !37
  %397 = getelementptr i8, ptr addrspace(3) %349, i64 48, !dbg !37
  %398 = load float, ptr addrspace(3) %397, align 4, !dbg !37
  %399 = getelementptr i8, ptr addrspace(3) %349, i64 176, !dbg !37
  %400 = load float, ptr addrspace(3) %399, align 4, !dbg !37
  %401 = getelementptr i8, ptr addrspace(3) %349, i64 52, !dbg !37
  %402 = load float, ptr addrspace(3) %401, align 4, !dbg !37
  %403 = getelementptr i8, ptr addrspace(3) %349, i64 180, !dbg !37
  %404 = load float, ptr addrspace(3) %403, align 4, !dbg !37
  %405 = getelementptr i8, ptr addrspace(3) %349, i64 56, !dbg !37
  %406 = load float, ptr addrspace(3) %405, align 4, !dbg !37
  %407 = getelementptr i8, ptr addrspace(3) %349, i64 184, !dbg !37
  %408 = load float, ptr addrspace(3) %407, align 4, !dbg !37
  %409 = getelementptr i8, ptr addrspace(3) %349, i64 60, !dbg !37
  %410 = load float, ptr addrspace(3) %409, align 4, !dbg !37
  %411 = getelementptr i8, ptr addrspace(3) %349, i64 188, !dbg !37
  %412 = load float, ptr addrspace(3) %411, align 4, !dbg !37
  %413 = getelementptr i8, ptr addrspace(3) %349, i64 64, !dbg !37
  %414 = load float, ptr addrspace(3) %413, align 4, !dbg !37
  %415 = getelementptr i8, ptr addrspace(3) %349, i64 192, !dbg !37
  %416 = load float, ptr addrspace(3) %415, align 4, !dbg !37
  %417 = getelementptr i8, ptr addrspace(3) %349, i64 68, !dbg !37
  %418 = load float, ptr addrspace(3) %417, align 4, !dbg !37
  %419 = getelementptr i8, ptr addrspace(3) %349, i64 196, !dbg !37
  %420 = load float, ptr addrspace(3) %419, align 4, !dbg !37
  %421 = getelementptr i8, ptr addrspace(3) %349, i64 72, !dbg !37
  %422 = load float, ptr addrspace(3) %421, align 4, !dbg !37
  %423 = getelementptr i8, ptr addrspace(3) %349, i64 200, !dbg !37
  %424 = load float, ptr addrspace(3) %423, align 4, !dbg !37
  %425 = getelementptr i8, ptr addrspace(3) %349, i64 76, !dbg !37
  %426 = load float, ptr addrspace(3) %425, align 4, !dbg !37
  %427 = getelementptr i8, ptr addrspace(3) %349, i64 204, !dbg !37
  %428 = load float, ptr addrspace(3) %427, align 4, !dbg !37
  %429 = getelementptr i8, ptr addrspace(3) %349, i64 80, !dbg !37
  %430 = load float, ptr addrspace(3) %429, align 4, !dbg !37
  %431 = getelementptr i8, ptr addrspace(3) %349, i64 208, !dbg !37
  %432 = load float, ptr addrspace(3) %431, align 4, !dbg !37
  %433 = getelementptr i8, ptr addrspace(3) %349, i64 84, !dbg !37
  %434 = load float, ptr addrspace(3) %433, align 4, !dbg !37
  %435 = getelementptr i8, ptr addrspace(3) %349, i64 212, !dbg !37
  %436 = load float, ptr addrspace(3) %435, align 4, !dbg !37
  %437 = getelementptr i8, ptr addrspace(3) %349, i64 88, !dbg !37
  %438 = load float, ptr addrspace(3) %437, align 4, !dbg !37
  %439 = getelementptr i8, ptr addrspace(3) %349, i64 216, !dbg !37
  %440 = load float, ptr addrspace(3) %439, align 4, !dbg !37
  %441 = getelementptr i8, ptr addrspace(3) %349, i64 92, !dbg !37
  %442 = load float, ptr addrspace(3) %441, align 4, !dbg !37
  %443 = getelementptr i8, ptr addrspace(3) %349, i64 220, !dbg !37
  %444 = load float, ptr addrspace(3) %443, align 4, !dbg !37
  %445 = getelementptr i8, ptr addrspace(3) %349, i64 96, !dbg !37
  %446 = load float, ptr addrspace(3) %445, align 4, !dbg !37
  %447 = getelementptr i8, ptr addrspace(3) %349, i64 224, !dbg !37
  %448 = load float, ptr addrspace(3) %447, align 4, !dbg !37
  %449 = getelementptr i8, ptr addrspace(3) %349, i64 100, !dbg !37
  %450 = load float, ptr addrspace(3) %449, align 4, !dbg !37
  %451 = getelementptr i8, ptr addrspace(3) %349, i64 228, !dbg !37
  %452 = load float, ptr addrspace(3) %451, align 4, !dbg !37
  %453 = getelementptr i8, ptr addrspace(3) %349, i64 104, !dbg !37
  %454 = load float, ptr addrspace(3) %453, align 4, !dbg !37
  %455 = getelementptr i8, ptr addrspace(3) %349, i64 232, !dbg !37
  %456 = load float, ptr addrspace(3) %455, align 4, !dbg !37
  %457 = getelementptr i8, ptr addrspace(3) %349, i64 108, !dbg !37
  %458 = load float, ptr addrspace(3) %457, align 4, !dbg !37
  %459 = getelementptr i8, ptr addrspace(3) %349, i64 236, !dbg !37
  %460 = load float, ptr addrspace(3) %459, align 4, !dbg !37
  %461 = getelementptr i8, ptr addrspace(3) %349, i64 112, !dbg !37
  %462 = load float, ptr addrspace(3) %461, align 4, !dbg !37
  %463 = getelementptr i8, ptr addrspace(3) %349, i64 240, !dbg !37
  %464 = load float, ptr addrspace(3) %463, align 4, !dbg !37
  %465 = getelementptr i8, ptr addrspace(3) %349, i64 116, !dbg !37
  %466 = load float, ptr addrspace(3) %465, align 4, !dbg !37
  %467 = getelementptr i8, ptr addrspace(3) %349, i64 244, !dbg !37
  %468 = load float, ptr addrspace(3) %467, align 4, !dbg !37
  %469 = getelementptr i8, ptr addrspace(3) %349, i64 120, !dbg !37
  %470 = load float, ptr addrspace(3) %469, align 4, !dbg !37
  %471 = getelementptr i8, ptr addrspace(3) %349, i64 248, !dbg !37
  %472 = load float, ptr addrspace(3) %471, align 4, !dbg !37
  %473 = getelementptr i8, ptr addrspace(3) %349, i64 124, !dbg !37
  %474 = load float, ptr addrspace(3) %473, align 4, !dbg !37
  %475 = getelementptr i8, ptr addrspace(3) %349, i64 252, !dbg !37
  %476 = load float, ptr addrspace(3) %475, align 4, !dbg !37
  %477 = insertelement <8 x float> poison, float %94, i64 0, !dbg !41
  %478 = insertelement <8 x float> %477, float %96, i64 1, !dbg !41
  %479 = insertelement <8 x float> %478, float %98, i64 2, !dbg !41
  %480 = insertelement <8 x float> %479, float %100, i64 3, !dbg !41
  %481 = shufflevector <8 x float> %480, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %482 = insertelement <8 x float> poison, float %350, i64 0, !dbg !41
  %483 = insertelement <8 x float> %482, float %352, i64 1, !dbg !41
  %484 = shufflevector <8 x float> %483, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %485 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %481, <8 x float> %484, <8 x float> %91), !dbg !41
  %486 = insertelement <8 x float> poison, float %102, i64 0, !dbg !41
  %487 = insertelement <8 x float> %486, float %104, i64 1, !dbg !41
  %488 = insertelement <8 x float> %487, float %106, i64 2, !dbg !41
  %489 = insertelement <8 x float> %488, float %108, i64 3, !dbg !41
  %490 = shufflevector <8 x float> %489, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %491 = insertelement <8 x float> poison, float %354, i64 0, !dbg !41
  %492 = insertelement <8 x float> %491, float %356, i64 1, !dbg !41
  %493 = shufflevector <8 x float> %492, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %494 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %490, <8 x float> %493, <8 x float> %485), !dbg !41
  %495 = insertelement <8 x float> poison, float %110, i64 0, !dbg !41
  %496 = insertelement <8 x float> %495, float %112, i64 1, !dbg !41
  %497 = insertelement <8 x float> %496, float %114, i64 2, !dbg !41
  %498 = insertelement <8 x float> %497, float %116, i64 3, !dbg !41
  %499 = shufflevector <8 x float> %498, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %500 = insertelement <8 x float> poison, float %358, i64 0, !dbg !41
  %501 = insertelement <8 x float> %500, float %360, i64 1, !dbg !41
  %502 = shufflevector <8 x float> %501, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %503 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %499, <8 x float> %502, <8 x float> %494), !dbg !41
  %504 = insertelement <8 x float> poison, float %118, i64 0, !dbg !41
  %505 = insertelement <8 x float> %504, float %120, i64 1, !dbg !41
  %506 = insertelement <8 x float> %505, float %122, i64 2, !dbg !41
  %507 = insertelement <8 x float> %506, float %124, i64 3, !dbg !41
  %508 = shufflevector <8 x float> %507, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %509 = insertelement <8 x float> poison, float %362, i64 0, !dbg !41
  %510 = insertelement <8 x float> %509, float %364, i64 1, !dbg !41
  %511 = shufflevector <8 x float> %510, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %512 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %508, <8 x float> %511, <8 x float> %503), !dbg !41
  %513 = insertelement <8 x float> poison, float %126, i64 0, !dbg !41
  %514 = insertelement <8 x float> %513, float %128, i64 1, !dbg !41
  %515 = insertelement <8 x float> %514, float %130, i64 2, !dbg !41
  %516 = insertelement <8 x float> %515, float %132, i64 3, !dbg !41
  %517 = shufflevector <8 x float> %516, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %518 = insertelement <8 x float> poison, float %366, i64 0, !dbg !41
  %519 = insertelement <8 x float> %518, float %368, i64 1, !dbg !41
  %520 = shufflevector <8 x float> %519, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %521 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %517, <8 x float> %520, <8 x float> %512), !dbg !41
  %522 = insertelement <8 x float> poison, float %134, i64 0, !dbg !41
  %523 = insertelement <8 x float> %522, float %136, i64 1, !dbg !41
  %524 = insertelement <8 x float> %523, float %138, i64 2, !dbg !41
  %525 = insertelement <8 x float> %524, float %140, i64 3, !dbg !41
  %526 = shufflevector <8 x float> %525, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %527 = insertelement <8 x float> poison, float %370, i64 0, !dbg !41
  %528 = insertelement <8 x float> %527, float %372, i64 1, !dbg !41
  %529 = shufflevector <8 x float> %528, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %530 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %526, <8 x float> %529, <8 x float> %521), !dbg !41
  %531 = insertelement <8 x float> poison, float %142, i64 0, !dbg !41
  %532 = insertelement <8 x float> %531, float %144, i64 1, !dbg !41
  %533 = insertelement <8 x float> %532, float %146, i64 2, !dbg !41
  %534 = insertelement <8 x float> %533, float %148, i64 3, !dbg !41
  %535 = shufflevector <8 x float> %534, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %536 = insertelement <8 x float> poison, float %374, i64 0, !dbg !41
  %537 = insertelement <8 x float> %536, float %376, i64 1, !dbg !41
  %538 = shufflevector <8 x float> %537, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %539 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %535, <8 x float> %538, <8 x float> %530), !dbg !41
  %540 = insertelement <8 x float> poison, float %150, i64 0, !dbg !41
  %541 = insertelement <8 x float> %540, float %152, i64 1, !dbg !41
  %542 = insertelement <8 x float> %541, float %154, i64 2, !dbg !41
  %543 = insertelement <8 x float> %542, float %156, i64 3, !dbg !41
  %544 = shufflevector <8 x float> %543, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %545 = insertelement <8 x float> poison, float %378, i64 0, !dbg !41
  %546 = insertelement <8 x float> %545, float %380, i64 1, !dbg !41
  %547 = shufflevector <8 x float> %546, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %548 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %544, <8 x float> %547, <8 x float> %539), !dbg !41
  %549 = insertelement <8 x float> poison, float %158, i64 0, !dbg !41
  %550 = insertelement <8 x float> %549, float %160, i64 1, !dbg !41
  %551 = insertelement <8 x float> %550, float %162, i64 2, !dbg !41
  %552 = insertelement <8 x float> %551, float %164, i64 3, !dbg !41
  %553 = shufflevector <8 x float> %552, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %554 = insertelement <8 x float> poison, float %382, i64 0, !dbg !41
  %555 = insertelement <8 x float> %554, float %384, i64 1, !dbg !41
  %556 = shufflevector <8 x float> %555, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %557 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %553, <8 x float> %556, <8 x float> %548), !dbg !41
  %558 = insertelement <8 x float> poison, float %166, i64 0, !dbg !41
  %559 = insertelement <8 x float> %558, float %168, i64 1, !dbg !41
  %560 = insertelement <8 x float> %559, float %170, i64 2, !dbg !41
  %561 = insertelement <8 x float> %560, float %172, i64 3, !dbg !41
  %562 = shufflevector <8 x float> %561, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %563 = insertelement <8 x float> poison, float %386, i64 0, !dbg !41
  %564 = insertelement <8 x float> %563, float %388, i64 1, !dbg !41
  %565 = shufflevector <8 x float> %564, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %566 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %562, <8 x float> %565, <8 x float> %557), !dbg !41
  %567 = insertelement <8 x float> poison, float %174, i64 0, !dbg !41
  %568 = insertelement <8 x float> %567, float %176, i64 1, !dbg !41
  %569 = insertelement <8 x float> %568, float %178, i64 2, !dbg !41
  %570 = insertelement <8 x float> %569, float %180, i64 3, !dbg !41
  %571 = shufflevector <8 x float> %570, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %572 = insertelement <8 x float> poison, float %390, i64 0, !dbg !41
  %573 = insertelement <8 x float> %572, float %392, i64 1, !dbg !41
  %574 = shufflevector <8 x float> %573, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %575 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %571, <8 x float> %574, <8 x float> %566), !dbg !41
  %576 = insertelement <8 x float> poison, float %182, i64 0, !dbg !41
  %577 = insertelement <8 x float> %576, float %184, i64 1, !dbg !41
  %578 = insertelement <8 x float> %577, float %186, i64 2, !dbg !41
  %579 = insertelement <8 x float> %578, float %188, i64 3, !dbg !41
  %580 = shufflevector <8 x float> %579, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %581 = insertelement <8 x float> poison, float %394, i64 0, !dbg !41
  %582 = insertelement <8 x float> %581, float %396, i64 1, !dbg !41
  %583 = shufflevector <8 x float> %582, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %584 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %580, <8 x float> %583, <8 x float> %575), !dbg !41
  %585 = insertelement <8 x float> poison, float %190, i64 0, !dbg !41
  %586 = insertelement <8 x float> %585, float %192, i64 1, !dbg !41
  %587 = insertelement <8 x float> %586, float %194, i64 2, !dbg !41
  %588 = insertelement <8 x float> %587, float %196, i64 3, !dbg !41
  %589 = shufflevector <8 x float> %588, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %590 = insertelement <8 x float> poison, float %398, i64 0, !dbg !41
  %591 = insertelement <8 x float> %590, float %400, i64 1, !dbg !41
  %592 = shufflevector <8 x float> %591, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %593 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %589, <8 x float> %592, <8 x float> %584), !dbg !41
  %594 = insertelement <8 x float> poison, float %198, i64 0, !dbg !41
  %595 = insertelement <8 x float> %594, float %200, i64 1, !dbg !41
  %596 = insertelement <8 x float> %595, float %202, i64 2, !dbg !41
  %597 = insertelement <8 x float> %596, float %204, i64 3, !dbg !41
  %598 = shufflevector <8 x float> %597, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %599 = insertelement <8 x float> poison, float %402, i64 0, !dbg !41
  %600 = insertelement <8 x float> %599, float %404, i64 1, !dbg !41
  %601 = shufflevector <8 x float> %600, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %602 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %598, <8 x float> %601, <8 x float> %593), !dbg !41
  %603 = insertelement <8 x float> poison, float %206, i64 0, !dbg !41
  %604 = insertelement <8 x float> %603, float %208, i64 1, !dbg !41
  %605 = insertelement <8 x float> %604, float %210, i64 2, !dbg !41
  %606 = insertelement <8 x float> %605, float %212, i64 3, !dbg !41
  %607 = shufflevector <8 x float> %606, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %608 = insertelement <8 x float> poison, float %406, i64 0, !dbg !41
  %609 = insertelement <8 x float> %608, float %408, i64 1, !dbg !41
  %610 = shufflevector <8 x float> %609, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %611 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %607, <8 x float> %610, <8 x float> %602), !dbg !41
  %612 = insertelement <8 x float> poison, float %214, i64 0, !dbg !41
  %613 = insertelement <8 x float> %612, float %216, i64 1, !dbg !41
  %614 = insertelement <8 x float> %613, float %218, i64 2, !dbg !41
  %615 = insertelement <8 x float> %614, float %220, i64 3, !dbg !41
  %616 = shufflevector <8 x float> %615, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %617 = insertelement <8 x float> poison, float %410, i64 0, !dbg !41
  %618 = insertelement <8 x float> %617, float %412, i64 1, !dbg !41
  %619 = shufflevector <8 x float> %618, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %620 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %616, <8 x float> %619, <8 x float> %611), !dbg !41
  %621 = insertelement <8 x float> poison, float %222, i64 0, !dbg !41
  %622 = insertelement <8 x float> %621, float %224, i64 1, !dbg !41
  %623 = insertelement <8 x float> %622, float %226, i64 2, !dbg !41
  %624 = insertelement <8 x float> %623, float %228, i64 3, !dbg !41
  %625 = shufflevector <8 x float> %624, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %626 = insertelement <8 x float> poison, float %414, i64 0, !dbg !41
  %627 = insertelement <8 x float> %626, float %416, i64 1, !dbg !41
  %628 = shufflevector <8 x float> %627, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %629 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %625, <8 x float> %628, <8 x float> %620), !dbg !41
  %630 = insertelement <8 x float> poison, float %230, i64 0, !dbg !41
  %631 = insertelement <8 x float> %630, float %232, i64 1, !dbg !41
  %632 = insertelement <8 x float> %631, float %234, i64 2, !dbg !41
  %633 = insertelement <8 x float> %632, float %236, i64 3, !dbg !41
  %634 = shufflevector <8 x float> %633, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %635 = insertelement <8 x float> poison, float %418, i64 0, !dbg !41
  %636 = insertelement <8 x float> %635, float %420, i64 1, !dbg !41
  %637 = shufflevector <8 x float> %636, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %638 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %634, <8 x float> %637, <8 x float> %629), !dbg !41
  %639 = insertelement <8 x float> poison, float %238, i64 0, !dbg !41
  %640 = insertelement <8 x float> %639, float %240, i64 1, !dbg !41
  %641 = insertelement <8 x float> %640, float %242, i64 2, !dbg !41
  %642 = insertelement <8 x float> %641, float %244, i64 3, !dbg !41
  %643 = shufflevector <8 x float> %642, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %644 = insertelement <8 x float> poison, float %422, i64 0, !dbg !41
  %645 = insertelement <8 x float> %644, float %424, i64 1, !dbg !41
  %646 = shufflevector <8 x float> %645, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %647 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %643, <8 x float> %646, <8 x float> %638), !dbg !41
  %648 = insertelement <8 x float> poison, float %246, i64 0, !dbg !41
  %649 = insertelement <8 x float> %648, float %248, i64 1, !dbg !41
  %650 = insertelement <8 x float> %649, float %250, i64 2, !dbg !41
  %651 = insertelement <8 x float> %650, float %252, i64 3, !dbg !41
  %652 = shufflevector <8 x float> %651, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %653 = insertelement <8 x float> poison, float %426, i64 0, !dbg !41
  %654 = insertelement <8 x float> %653, float %428, i64 1, !dbg !41
  %655 = shufflevector <8 x float> %654, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %656 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %652, <8 x float> %655, <8 x float> %647), !dbg !41
  %657 = insertelement <8 x float> poison, float %254, i64 0, !dbg !41
  %658 = insertelement <8 x float> %657, float %256, i64 1, !dbg !41
  %659 = insertelement <8 x float> %658, float %258, i64 2, !dbg !41
  %660 = insertelement <8 x float> %659, float %260, i64 3, !dbg !41
  %661 = shufflevector <8 x float> %660, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %662 = insertelement <8 x float> poison, float %430, i64 0, !dbg !41
  %663 = insertelement <8 x float> %662, float %432, i64 1, !dbg !41
  %664 = shufflevector <8 x float> %663, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %665 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %661, <8 x float> %664, <8 x float> %656), !dbg !41
  %666 = insertelement <8 x float> poison, float %262, i64 0, !dbg !41
  %667 = insertelement <8 x float> %666, float %264, i64 1, !dbg !41
  %668 = insertelement <8 x float> %667, float %266, i64 2, !dbg !41
  %669 = insertelement <8 x float> %668, float %268, i64 3, !dbg !41
  %670 = shufflevector <8 x float> %669, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %671 = insertelement <8 x float> poison, float %434, i64 0, !dbg !41
  %672 = insertelement <8 x float> %671, float %436, i64 1, !dbg !41
  %673 = shufflevector <8 x float> %672, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %674 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %670, <8 x float> %673, <8 x float> %665), !dbg !41
  %675 = insertelement <8 x float> poison, float %270, i64 0, !dbg !41
  %676 = insertelement <8 x float> %675, float %272, i64 1, !dbg !41
  %677 = insertelement <8 x float> %676, float %274, i64 2, !dbg !41
  %678 = insertelement <8 x float> %677, float %276, i64 3, !dbg !41
  %679 = shufflevector <8 x float> %678, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %680 = insertelement <8 x float> poison, float %438, i64 0, !dbg !41
  %681 = insertelement <8 x float> %680, float %440, i64 1, !dbg !41
  %682 = shufflevector <8 x float> %681, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %683 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %679, <8 x float> %682, <8 x float> %674), !dbg !41
  %684 = insertelement <8 x float> poison, float %278, i64 0, !dbg !41
  %685 = insertelement <8 x float> %684, float %280, i64 1, !dbg !41
  %686 = insertelement <8 x float> %685, float %282, i64 2, !dbg !41
  %687 = insertelement <8 x float> %686, float %284, i64 3, !dbg !41
  %688 = shufflevector <8 x float> %687, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %689 = insertelement <8 x float> poison, float %442, i64 0, !dbg !41
  %690 = insertelement <8 x float> %689, float %444, i64 1, !dbg !41
  %691 = shufflevector <8 x float> %690, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %692 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %688, <8 x float> %691, <8 x float> %683), !dbg !41
  %693 = insertelement <8 x float> poison, float %286, i64 0, !dbg !41
  %694 = insertelement <8 x float> %693, float %288, i64 1, !dbg !41
  %695 = insertelement <8 x float> %694, float %290, i64 2, !dbg !41
  %696 = insertelement <8 x float> %695, float %292, i64 3, !dbg !41
  %697 = shufflevector <8 x float> %696, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %698 = insertelement <8 x float> poison, float %446, i64 0, !dbg !41
  %699 = insertelement <8 x float> %698, float %448, i64 1, !dbg !41
  %700 = shufflevector <8 x float> %699, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %701 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %697, <8 x float> %700, <8 x float> %692), !dbg !41
  %702 = insertelement <8 x float> poison, float %294, i64 0, !dbg !41
  %703 = insertelement <8 x float> %702, float %296, i64 1, !dbg !41
  %704 = insertelement <8 x float> %703, float %298, i64 2, !dbg !41
  %705 = insertelement <8 x float> %704, float %300, i64 3, !dbg !41
  %706 = shufflevector <8 x float> %705, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %707 = insertelement <8 x float> poison, float %450, i64 0, !dbg !41
  %708 = insertelement <8 x float> %707, float %452, i64 1, !dbg !41
  %709 = shufflevector <8 x float> %708, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %710 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %706, <8 x float> %709, <8 x float> %701), !dbg !41
  %711 = insertelement <8 x float> poison, float %302, i64 0, !dbg !41
  %712 = insertelement <8 x float> %711, float %304, i64 1, !dbg !41
  %713 = insertelement <8 x float> %712, float %306, i64 2, !dbg !41
  %714 = insertelement <8 x float> %713, float %308, i64 3, !dbg !41
  %715 = shufflevector <8 x float> %714, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %716 = insertelement <8 x float> poison, float %454, i64 0, !dbg !41
  %717 = insertelement <8 x float> %716, float %456, i64 1, !dbg !41
  %718 = shufflevector <8 x float> %717, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %719 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %715, <8 x float> %718, <8 x float> %710), !dbg !41
  %720 = insertelement <8 x float> poison, float %310, i64 0, !dbg !41
  %721 = insertelement <8 x float> %720, float %312, i64 1, !dbg !41
  %722 = insertelement <8 x float> %721, float %314, i64 2, !dbg !41
  %723 = insertelement <8 x float> %722, float %316, i64 3, !dbg !41
  %724 = shufflevector <8 x float> %723, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %725 = insertelement <8 x float> poison, float %458, i64 0, !dbg !41
  %726 = insertelement <8 x float> %725, float %460, i64 1, !dbg !41
  %727 = shufflevector <8 x float> %726, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %728 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %724, <8 x float> %727, <8 x float> %719), !dbg !41
  %729 = insertelement <8 x float> poison, float %318, i64 0, !dbg !41
  %730 = insertelement <8 x float> %729, float %320, i64 1, !dbg !41
  %731 = insertelement <8 x float> %730, float %322, i64 2, !dbg !41
  %732 = insertelement <8 x float> %731, float %324, i64 3, !dbg !41
  %733 = shufflevector <8 x float> %732, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %734 = insertelement <8 x float> poison, float %462, i64 0, !dbg !41
  %735 = insertelement <8 x float> %734, float %464, i64 1, !dbg !41
  %736 = shufflevector <8 x float> %735, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %737 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %733, <8 x float> %736, <8 x float> %728), !dbg !41
  %738 = insertelement <8 x float> poison, float %326, i64 0, !dbg !41
  %739 = insertelement <8 x float> %738, float %328, i64 1, !dbg !41
  %740 = insertelement <8 x float> %739, float %330, i64 2, !dbg !41
  %741 = insertelement <8 x float> %740, float %332, i64 3, !dbg !41
  %742 = shufflevector <8 x float> %741, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %743 = insertelement <8 x float> poison, float %466, i64 0, !dbg !41
  %744 = insertelement <8 x float> %743, float %468, i64 1, !dbg !41
  %745 = shufflevector <8 x float> %744, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %746 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %742, <8 x float> %745, <8 x float> %737), !dbg !41
  %747 = insertelement <8 x float> poison, float %334, i64 0, !dbg !41
  %748 = insertelement <8 x float> %747, float %336, i64 1, !dbg !41
  %749 = insertelement <8 x float> %748, float %338, i64 2, !dbg !41
  %750 = insertelement <8 x float> %749, float %340, i64 3, !dbg !41
  %751 = shufflevector <8 x float> %750, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %752 = insertelement <8 x float> poison, float %470, i64 0, !dbg !41
  %753 = insertelement <8 x float> %752, float %472, i64 1, !dbg !41
  %754 = shufflevector <8 x float> %753, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %755 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %751, <8 x float> %754, <8 x float> %746), !dbg !41
  %756 = insertelement <8 x float> poison, float %342, i64 0, !dbg !41
  %757 = insertelement <8 x float> %756, float %344, i64 1, !dbg !41
  %758 = insertelement <8 x float> %757, float %346, i64 2, !dbg !41
  %759 = insertelement <8 x float> %758, float %348, i64 3, !dbg !41
  %760 = shufflevector <8 x float> %759, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %761 = insertelement <8 x float> poison, float %474, i64 0, !dbg !41
  %762 = insertelement <8 x float> %761, float %476, i64 1, !dbg !41
  %763 = shufflevector <8 x float> %762, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %764 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %760, <8 x float> %763, <8 x float> %755), !dbg !41
  %765 = getelementptr i8, ptr addrspace(1) %.pn840, i64 128, !dbg !38
  %766 = getelementptr i8, ptr addrspace(1) %.pn2441, i64 128, !dbg !39
  %767 = getelementptr i8, ptr addrspace(1) %.pn1642, i64 128, !dbg !39
  %768 = add i32 %89, 1, !dbg !40
  %769 = icmp slt i32 %768, 4, !dbg !40
  %770 = select i1 %769, i32 %768, i32 0, !dbg !40
  %771 = shl i32 %770, 10, !dbg !36
  %772 = sext i32 %771 to i64, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %gep = getelementptr float, ptr addrspace(3) %54, i64 %772, !dbg !36
  %773 = select i1 %92, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %765, i32 %773, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %774 = shl i32 %770, 11, !dbg !37
  %775 = sext i32 %774 to i64, !dbg !37
  %776 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %775, !dbg !37
  %777 = getelementptr float, ptr addrspace(3) %776, i64 %53, !dbg !37
  %778 = getelementptr float, ptr addrspace(3) %776, i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %777, ptr addrspace(1) %766, i32 %773, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %778, ptr addrspace(1) %767, i32 %773, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %779 = add i32 %88, 1, !dbg !40
  %780 = icmp slt i32 %779, 4, !dbg !40
  %781 = select i1 %780, i32 %779, i32 0, !dbg !40
  %782 = shl i32 %781, 10, !dbg !36
  %783 = sext i32 %782 to i64, !dbg !36
  %784 = getelementptr float, ptr addrspace(3) @global_smem, i64 %783, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %785 = shl i32 %781, 11, !dbg !37
  %786 = sext i32 %785 to i64, !dbg !37
  %787 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %786, !dbg !37
  %788 = add nuw nsw i32 %90, 32, !dbg !40
  %789 = icmp ult i32 %90, 480, !dbg !40
  br i1 %789, label %85, label %790, !dbg !40

790:                                              ; preds = %85
  %791 = or disjoint i32 %29, 16, !dbg !24
  %792 = and i32 %32, 60, !dbg !26
  %793 = or disjoint i32 %792, %30, !dbg !27
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %794 = icmp slt i32 %29, %3, !dbg !42
  %795 = icmp slt i32 %791, %3, !dbg !42
  %796 = icmp slt i32 %793, 256, !dbg !43
  %797 = and i1 %796, %794, !dbg !44
  %798 = and i1 %795, %796, !dbg !44
  %799 = shl i32 %29, 8, !dbg !45
  %800 = shl i32 %791, 8, !dbg !45
  %801 = add i32 %799, %793, !dbg !46
  %802 = add i32 %793, %800, !dbg !46
  %803 = sext i32 %801 to i64, !dbg !47
  %804 = getelementptr float, ptr addrspace(1) %2, i64 %803, !dbg !47
  %805 = sext i32 %802 to i64, !dbg !47
  %806 = getelementptr float, ptr addrspace(1) %2, i64 %805, !dbg !47
  %807 = and i32 %78, 14, !dbg !48
  %808 = mul nuw nsw i32 %807, 68, !dbg !48
  %809 = add nuw nsw i32 %808, %79, !dbg !48
  %810 = zext nneg i32 %809 to i64, !dbg !48
  %811 = getelementptr float, ptr addrspace(3) @global_smem, i64 %810, !dbg !48
  %812 = shufflevector <8 x float> %764, <8 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !48
  store <2 x float> %812, ptr addrspace(3) %811, align 8, !dbg !48
  %813 = getelementptr i8, ptr addrspace(3) %811, i64 272, !dbg !48
  %814 = shufflevector <8 x float> %764, <8 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !48
  store <2 x float> %814, ptr addrspace(3) %813, align 8, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %815 = lshr i32 %20, 4, !dbg !48
  %816 = or disjoint i32 %807, %815, !dbg !48
  %817 = and i32 %32, 60, !dbg !48
  %818 = mul nuw nsw i32 %816, 68, !dbg !48
  %819 = add nuw nsw i32 %818, %817, !dbg !48
  %820 = zext nneg i32 %819 to i64, !dbg !48
  %821 = getelementptr float, ptr addrspace(3) @global_smem, i64 %820, !dbg !48
  %822 = load <4 x i32>, ptr addrspace(3) %821, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %823 = shufflevector <8 x float> %764, <8 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !48
  store <2 x float> %823, ptr addrspace(3) %811, align 8, !dbg !48
  %824 = shufflevector <8 x float> %764, <8 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !48
  store <2 x float> %824, ptr addrspace(3) %813, align 8, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %825 = load <4 x i32>, ptr addrspace(3) %821, align 16, !dbg !48
  %.extract = extractelement <4 x i32> %822, i64 0, !dbg !48
  %.extract26 = extractelement <4 x i32> %822, i64 1, !dbg !48
  %.extract28 = extractelement <4 x i32> %822, i64 2, !dbg !48
  %.extract30 = extractelement <4 x i32> %822, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract26, i32 %.extract28, i32 %.extract30, ptr addrspace(1) %804, i1 %797) #3, !dbg !48
  %.extract32 = extractelement <4 x i32> %825, i64 0, !dbg !48
  %.extract34 = extractelement <4 x i32> %825, i64 1, !dbg !48
  %.extract36 = extractelement <4 x i32> %825, i64 2, !dbg !48
  %.extract38 = extractelement <4 x i32> %825, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract32, i32 %.extract34, i32 %.extract36, i32 %.extract38, ptr addrspace(1) %806, i1 %798) #3, !dbg !48
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6rosssxoqseo2q5qkctqnwvpgz6cjumz7ni4m6b5ugkqhaqvw7i.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/6r")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 16, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 42, column: 24, scope: !7)
!13 = !DILocation(line: 43, column: 28, scope: !7)
!14 = !DILocation(line: 43, column: 34, scope: !7)
!15 = !DILocation(line: 48, column: 22, scope: !7)
!16 = !DILocation(line: 49, column: 41, scope: !7)
!17 = !DILocation(line: 49, column: 30, scope: !7)
!18 = !DILocation(line: 49, column: 50, scope: !7)
!19 = !DILocation(line: 50, column: 40, scope: !7)
!20 = !DILocation(line: 50, column: 34, scope: !7)
!21 = !DILocation(line: 51, column: 30, scope: !7)
!22 = !DILocation(line: 53, column: 17, scope: !7)
!23 = !DILocation(line: 53, column: 40, scope: !7)
!24 = !DILocation(line: 53, column: 27, scope: !7)
!25 = !DILocation(line: 54, column: 17, scope: !7)
!26 = !DILocation(line: 54, column: 40, scope: !7)
!27 = !DILocation(line: 54, column: 27, scope: !7)
!28 = !DILocation(line: 56, column: 52, scope: !7)
!29 = !DILocation(line: 60, column: 52, scope: !7)
!30 = !DILocation(line: 64, column: 28, scope: !7)
!31 = !DILocation(line: 64, column: 40, scope: !7)
!32 = !DILocation(line: 64, column: 13, scope: !7)
!33 = !DILocation(line: 65, column: 54, scope: !7)
!34 = !DILocation(line: 65, column: 39, scope: !7)
!35 = !DILocation(line: 65, column: 13, scope: !7)
!36 = !DILocation(line: 70, column: 24, scope: !7)
!37 = !DILocation(line: 71, column: 24, scope: !7)
!38 = !DILocation(line: 78, column: 13, scope: !7)
!39 = !DILocation(line: 79, column: 13, scope: !7)
!40 = !DILocation(line: 68, column: 25, scope: !7)
!41 = !DILocation(line: 77, column: 25, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 25, scope: !7)
!48 = !DILocation(line: 90, column: 67, scope: !7)
