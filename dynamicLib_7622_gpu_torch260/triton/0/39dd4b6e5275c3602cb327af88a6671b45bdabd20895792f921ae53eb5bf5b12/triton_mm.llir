; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_mm(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %.mask = and i32 %3, 16777215, !dbg !10
  %5 = icmp eq i32 %.mask, 0, !dbg !10
  br i1 %5, label %common.ret, label %6, !dbg !10

common.ret:                                       ; preds = %4, %790
  ret void, !dbg !11

6:                                                ; preds = %4
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !12
  %8 = add i32 %3, 31, !dbg !13
  %9 = sdiv i32 %8, 32, !dbg !14
  %.frozen = freeze i32 %7
  %10 = sdiv i32 %.frozen, 32, !dbg !15
  %11 = shl nsw i32 %10, 3, !dbg !16
  %12 = sub nsw i32 %9, %11, !dbg !17
  %13 = tail call i32 @llvm.smin.i32(i32 %12, i32 8), !dbg !18
  %14 = srem i32 %7, %13, !dbg !19
  %15 = add nsw i32 %11, %14, !dbg !20
  %16 = mul i32 %10, 32
  %.decomposed = sub i32 %.frozen, %16
  %17 = sdiv i32 %.decomposed, %13, !dbg !21
  %18 = shl i32 %15, 5, !dbg !22
  %19 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !23
  %20 = and i32 %19, 31, !dbg !23
  %21 = lshr i32 %19, 3, !dbg !23
  %22 = and i32 %21, 31, !dbg !23
  %23 = lshr i32 %19, 4, !dbg !23
  %24 = and i32 %23, 7, !dbg !23
  %25 = lshr i32 %19, 4, !dbg !23
  %26 = and i32 %25, 8, !dbg !23
  %27 = or disjoint i32 %24, %26, !dbg !23
  %28 = or disjoint i32 %18, %22, !dbg !24
  %29 = or disjoint i32 %18, %27, !dbg !23
  %30 = shl nsw i32 %17, 6, !dbg !25
  %31 = or disjoint i32 %22, 32, !dbg !26
  %32 = shl i32 %19, 2, !dbg !26
  %33 = and i32 %32, 28, !dbg !26
  %34 = or disjoint i32 %30, %22, !dbg !27
  %35 = or disjoint i32 %30, %31, !dbg !27
  %36 = srem i32 %28, %3, !dbg !28
  %37 = srem i32 %34, 256, !dbg !29
  %38 = srem i32 %35, 256, !dbg !29
  %39 = mul i32 %36, 568, !dbg !30
  %40 = add i32 %39, %33, !dbg !31
  %41 = sext i32 %40 to i64, !dbg !32
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !32
  %43 = mul nsw i32 %37, 568, !dbg !33
  %44 = mul nsw i32 %38, 568, !dbg !33
  %45 = add nsw i32 %43, %33, !dbg !34
  %46 = add nsw i32 %44, %33, !dbg !34
  %47 = sext i32 %45 to i64, !dbg !35
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !35
  %49 = sext i32 %46 to i64, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !35
  %51 = shl nuw nsw i32 %22, 5, !dbg !36
  %52 = or disjoint i32 %51, %33, !dbg !36
  %53 = zext nneg i32 %52 to i64, !dbg !36
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %54, ptr addrspace(1) %42, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %55 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %53, !dbg !37
  %56 = shl nuw nsw i32 %31, 5, !dbg !37
  %57 = or disjoint i32 %56, %33, !dbg !37
  %58 = zext nneg i32 %57 to i64, !dbg !37
  %59 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %55, ptr addrspace(1) %48, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %59, ptr addrspace(1) %50, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %60 = getelementptr i8, ptr addrspace(1) %42, i64 128, !dbg !38
  %61 = getelementptr i8, ptr addrspace(1) %48, i64 128, !dbg !39
  %62 = getelementptr i8, ptr addrspace(1) %50, i64 128, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %63 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 4096), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %63, ptr addrspace(1) %60, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %64 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %53, !dbg !37
  %65 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 24576), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %64, ptr addrspace(1) %61, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %65, ptr addrspace(1) %62, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %66 = getelementptr i8, ptr addrspace(1) %42, i64 256, !dbg !38
  %67 = getelementptr i8, ptr addrspace(1) %48, i64 256, !dbg !39
  %68 = getelementptr i8, ptr addrspace(1) %50, i64 256, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %69 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 8192), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %69, ptr addrspace(1) %66, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %70 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %53, !dbg !37
  %71 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 32768), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %70, ptr addrspace(1) %67, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %71, ptr addrspace(1) %68, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %72 = getelementptr i8, ptr addrspace(1) %42, i64 384, !dbg !38
  %73 = getelementptr i8, ptr addrspace(1) %48, i64 384, !dbg !39
  %74 = getelementptr i8, ptr addrspace(1) %50, i64 384, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %75 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 12288), i64 %53, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %75, ptr addrspace(1) %72, i32 16, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %76 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %53, !dbg !37
  %77 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 40960), i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %76, ptr addrspace(1) %73, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %77, ptr addrspace(1) %74, i32 16, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %78 = lshr i32 %19, 4
  %79 = shl nuw nsw i32 %20, 1
  %invariant.op = sub nuw nsw i32 440, %33, !dbg !40
  %invariant.umin = tail call i32 @llvm.umin.i32(i32 %invariant.op, i32 440), !dbg !40
  %80 = shl i32 %78, 5
  %81 = and i32 %80, 960
  %82 = zext nneg i32 %81 to i64
  %83 = shl nuw nsw i32 %20, 6
  %84 = zext nneg i32 %83 to i64
  br label %85, !dbg !40

85:                                               ; preds = %6, %85
  %86 = phi ptr addrspace(3) [ getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), %6 ], [ %787, %85 ]
  %87 = phi ptr addrspace(3) [ @global_smem, %6 ], [ %784, %85 ]
  %88 = phi i32 [ 0, %6 ], [ %781, %85 ]
  %89 = phi i32 [ 3, %6 ], [ %769, %85 ]
  %.pn1642 = phi ptr addrspace(1) [ %74, %6 ], [ %766, %85 ]
  %.pn2441 = phi ptr addrspace(1) [ %73, %6 ], [ %765, %85 ]
  %.pn840 = phi ptr addrspace(1) [ %72, %6 ], [ %764, %85 ]
  %90 = phi i32 [ 0, %6 ], [ %788, %85 ]
  %91 = phi <8 x float> [ zeroinitializer, %6 ], [ %763, %85 ]
  %92 = getelementptr float, ptr addrspace(3) %87, i64 %82, !dbg !36
  %93 = load float, ptr addrspace(3) %92, align 4, !dbg !36
  %94 = getelementptr i8, ptr addrspace(3) %92, i64 128, !dbg !36
  %95 = load float, ptr addrspace(3) %94, align 4, !dbg !36
  %96 = getelementptr i8, ptr addrspace(3) %92, i64 2048, !dbg !36
  %97 = load float, ptr addrspace(3) %96, align 4, !dbg !36
  %98 = getelementptr i8, ptr addrspace(3) %92, i64 2176, !dbg !36
  %99 = load float, ptr addrspace(3) %98, align 4, !dbg !36
  %100 = getelementptr i8, ptr addrspace(3) %92, i64 4, !dbg !36
  %101 = load float, ptr addrspace(3) %100, align 4, !dbg !36
  %102 = getelementptr i8, ptr addrspace(3) %92, i64 132, !dbg !36
  %103 = load float, ptr addrspace(3) %102, align 4, !dbg !36
  %104 = getelementptr i8, ptr addrspace(3) %92, i64 2052, !dbg !36
  %105 = load float, ptr addrspace(3) %104, align 4, !dbg !36
  %106 = getelementptr i8, ptr addrspace(3) %92, i64 2180, !dbg !36
  %107 = load float, ptr addrspace(3) %106, align 4, !dbg !36
  %108 = getelementptr i8, ptr addrspace(3) %92, i64 8, !dbg !36
  %109 = load float, ptr addrspace(3) %108, align 4, !dbg !36
  %110 = getelementptr i8, ptr addrspace(3) %92, i64 136, !dbg !36
  %111 = load float, ptr addrspace(3) %110, align 4, !dbg !36
  %112 = getelementptr i8, ptr addrspace(3) %92, i64 2056, !dbg !36
  %113 = load float, ptr addrspace(3) %112, align 4, !dbg !36
  %114 = getelementptr i8, ptr addrspace(3) %92, i64 2184, !dbg !36
  %115 = load float, ptr addrspace(3) %114, align 4, !dbg !36
  %116 = getelementptr i8, ptr addrspace(3) %92, i64 12, !dbg !36
  %117 = load float, ptr addrspace(3) %116, align 4, !dbg !36
  %118 = getelementptr i8, ptr addrspace(3) %92, i64 140, !dbg !36
  %119 = load float, ptr addrspace(3) %118, align 4, !dbg !36
  %120 = getelementptr i8, ptr addrspace(3) %92, i64 2060, !dbg !36
  %121 = load float, ptr addrspace(3) %120, align 4, !dbg !36
  %122 = getelementptr i8, ptr addrspace(3) %92, i64 2188, !dbg !36
  %123 = load float, ptr addrspace(3) %122, align 4, !dbg !36
  %124 = getelementptr i8, ptr addrspace(3) %92, i64 16, !dbg !36
  %125 = load float, ptr addrspace(3) %124, align 4, !dbg !36
  %126 = getelementptr i8, ptr addrspace(3) %92, i64 144, !dbg !36
  %127 = load float, ptr addrspace(3) %126, align 4, !dbg !36
  %128 = getelementptr i8, ptr addrspace(3) %92, i64 2064, !dbg !36
  %129 = load float, ptr addrspace(3) %128, align 4, !dbg !36
  %130 = getelementptr i8, ptr addrspace(3) %92, i64 2192, !dbg !36
  %131 = load float, ptr addrspace(3) %130, align 4, !dbg !36
  %132 = getelementptr i8, ptr addrspace(3) %92, i64 20, !dbg !36
  %133 = load float, ptr addrspace(3) %132, align 4, !dbg !36
  %134 = getelementptr i8, ptr addrspace(3) %92, i64 148, !dbg !36
  %135 = load float, ptr addrspace(3) %134, align 4, !dbg !36
  %136 = getelementptr i8, ptr addrspace(3) %92, i64 2068, !dbg !36
  %137 = load float, ptr addrspace(3) %136, align 4, !dbg !36
  %138 = getelementptr i8, ptr addrspace(3) %92, i64 2196, !dbg !36
  %139 = load float, ptr addrspace(3) %138, align 4, !dbg !36
  %140 = getelementptr i8, ptr addrspace(3) %92, i64 24, !dbg !36
  %141 = load float, ptr addrspace(3) %140, align 4, !dbg !36
  %142 = getelementptr i8, ptr addrspace(3) %92, i64 152, !dbg !36
  %143 = load float, ptr addrspace(3) %142, align 4, !dbg !36
  %144 = getelementptr i8, ptr addrspace(3) %92, i64 2072, !dbg !36
  %145 = load float, ptr addrspace(3) %144, align 4, !dbg !36
  %146 = getelementptr i8, ptr addrspace(3) %92, i64 2200, !dbg !36
  %147 = load float, ptr addrspace(3) %146, align 4, !dbg !36
  %148 = getelementptr i8, ptr addrspace(3) %92, i64 28, !dbg !36
  %149 = load float, ptr addrspace(3) %148, align 4, !dbg !36
  %150 = getelementptr i8, ptr addrspace(3) %92, i64 156, !dbg !36
  %151 = load float, ptr addrspace(3) %150, align 4, !dbg !36
  %152 = getelementptr i8, ptr addrspace(3) %92, i64 2076, !dbg !36
  %153 = load float, ptr addrspace(3) %152, align 4, !dbg !36
  %154 = getelementptr i8, ptr addrspace(3) %92, i64 2204, !dbg !36
  %155 = load float, ptr addrspace(3) %154, align 4, !dbg !36
  %156 = getelementptr i8, ptr addrspace(3) %92, i64 32, !dbg !36
  %157 = load float, ptr addrspace(3) %156, align 4, !dbg !36
  %158 = getelementptr i8, ptr addrspace(3) %92, i64 160, !dbg !36
  %159 = load float, ptr addrspace(3) %158, align 4, !dbg !36
  %160 = getelementptr i8, ptr addrspace(3) %92, i64 2080, !dbg !36
  %161 = load float, ptr addrspace(3) %160, align 4, !dbg !36
  %162 = getelementptr i8, ptr addrspace(3) %92, i64 2208, !dbg !36
  %163 = load float, ptr addrspace(3) %162, align 4, !dbg !36
  %164 = getelementptr i8, ptr addrspace(3) %92, i64 36, !dbg !36
  %165 = load float, ptr addrspace(3) %164, align 4, !dbg !36
  %166 = getelementptr i8, ptr addrspace(3) %92, i64 164, !dbg !36
  %167 = load float, ptr addrspace(3) %166, align 4, !dbg !36
  %168 = getelementptr i8, ptr addrspace(3) %92, i64 2084, !dbg !36
  %169 = load float, ptr addrspace(3) %168, align 4, !dbg !36
  %170 = getelementptr i8, ptr addrspace(3) %92, i64 2212, !dbg !36
  %171 = load float, ptr addrspace(3) %170, align 4, !dbg !36
  %172 = getelementptr i8, ptr addrspace(3) %92, i64 40, !dbg !36
  %173 = load float, ptr addrspace(3) %172, align 4, !dbg !36
  %174 = getelementptr i8, ptr addrspace(3) %92, i64 168, !dbg !36
  %175 = load float, ptr addrspace(3) %174, align 4, !dbg !36
  %176 = getelementptr i8, ptr addrspace(3) %92, i64 2088, !dbg !36
  %177 = load float, ptr addrspace(3) %176, align 4, !dbg !36
  %178 = getelementptr i8, ptr addrspace(3) %92, i64 2216, !dbg !36
  %179 = load float, ptr addrspace(3) %178, align 4, !dbg !36
  %180 = getelementptr i8, ptr addrspace(3) %92, i64 44, !dbg !36
  %181 = load float, ptr addrspace(3) %180, align 4, !dbg !36
  %182 = getelementptr i8, ptr addrspace(3) %92, i64 172, !dbg !36
  %183 = load float, ptr addrspace(3) %182, align 4, !dbg !36
  %184 = getelementptr i8, ptr addrspace(3) %92, i64 2092, !dbg !36
  %185 = load float, ptr addrspace(3) %184, align 4, !dbg !36
  %186 = getelementptr i8, ptr addrspace(3) %92, i64 2220, !dbg !36
  %187 = load float, ptr addrspace(3) %186, align 4, !dbg !36
  %188 = getelementptr i8, ptr addrspace(3) %92, i64 48, !dbg !36
  %189 = load float, ptr addrspace(3) %188, align 4, !dbg !36
  %190 = getelementptr i8, ptr addrspace(3) %92, i64 176, !dbg !36
  %191 = load float, ptr addrspace(3) %190, align 4, !dbg !36
  %192 = getelementptr i8, ptr addrspace(3) %92, i64 2096, !dbg !36
  %193 = load float, ptr addrspace(3) %192, align 4, !dbg !36
  %194 = getelementptr i8, ptr addrspace(3) %92, i64 2224, !dbg !36
  %195 = load float, ptr addrspace(3) %194, align 4, !dbg !36
  %196 = getelementptr i8, ptr addrspace(3) %92, i64 52, !dbg !36
  %197 = load float, ptr addrspace(3) %196, align 4, !dbg !36
  %198 = getelementptr i8, ptr addrspace(3) %92, i64 180, !dbg !36
  %199 = load float, ptr addrspace(3) %198, align 4, !dbg !36
  %200 = getelementptr i8, ptr addrspace(3) %92, i64 2100, !dbg !36
  %201 = load float, ptr addrspace(3) %200, align 4, !dbg !36
  %202 = getelementptr i8, ptr addrspace(3) %92, i64 2228, !dbg !36
  %203 = load float, ptr addrspace(3) %202, align 4, !dbg !36
  %204 = getelementptr i8, ptr addrspace(3) %92, i64 56, !dbg !36
  %205 = load float, ptr addrspace(3) %204, align 4, !dbg !36
  %206 = getelementptr i8, ptr addrspace(3) %92, i64 184, !dbg !36
  %207 = load float, ptr addrspace(3) %206, align 4, !dbg !36
  %208 = getelementptr i8, ptr addrspace(3) %92, i64 2104, !dbg !36
  %209 = load float, ptr addrspace(3) %208, align 4, !dbg !36
  %210 = getelementptr i8, ptr addrspace(3) %92, i64 2232, !dbg !36
  %211 = load float, ptr addrspace(3) %210, align 4, !dbg !36
  %212 = getelementptr i8, ptr addrspace(3) %92, i64 60, !dbg !36
  %213 = load float, ptr addrspace(3) %212, align 4, !dbg !36
  %214 = getelementptr i8, ptr addrspace(3) %92, i64 188, !dbg !36
  %215 = load float, ptr addrspace(3) %214, align 4, !dbg !36
  %216 = getelementptr i8, ptr addrspace(3) %92, i64 2108, !dbg !36
  %217 = load float, ptr addrspace(3) %216, align 4, !dbg !36
  %218 = getelementptr i8, ptr addrspace(3) %92, i64 2236, !dbg !36
  %219 = load float, ptr addrspace(3) %218, align 4, !dbg !36
  %220 = getelementptr i8, ptr addrspace(3) %92, i64 64, !dbg !36
  %221 = load float, ptr addrspace(3) %220, align 4, !dbg !36
  %222 = getelementptr i8, ptr addrspace(3) %92, i64 192, !dbg !36
  %223 = load float, ptr addrspace(3) %222, align 4, !dbg !36
  %224 = getelementptr i8, ptr addrspace(3) %92, i64 2112, !dbg !36
  %225 = load float, ptr addrspace(3) %224, align 4, !dbg !36
  %226 = getelementptr i8, ptr addrspace(3) %92, i64 2240, !dbg !36
  %227 = load float, ptr addrspace(3) %226, align 4, !dbg !36
  %228 = getelementptr i8, ptr addrspace(3) %92, i64 68, !dbg !36
  %229 = load float, ptr addrspace(3) %228, align 4, !dbg !36
  %230 = getelementptr i8, ptr addrspace(3) %92, i64 196, !dbg !36
  %231 = load float, ptr addrspace(3) %230, align 4, !dbg !36
  %232 = getelementptr i8, ptr addrspace(3) %92, i64 2116, !dbg !36
  %233 = load float, ptr addrspace(3) %232, align 4, !dbg !36
  %234 = getelementptr i8, ptr addrspace(3) %92, i64 2244, !dbg !36
  %235 = load float, ptr addrspace(3) %234, align 4, !dbg !36
  %236 = getelementptr i8, ptr addrspace(3) %92, i64 72, !dbg !36
  %237 = load float, ptr addrspace(3) %236, align 4, !dbg !36
  %238 = getelementptr i8, ptr addrspace(3) %92, i64 200, !dbg !36
  %239 = load float, ptr addrspace(3) %238, align 4, !dbg !36
  %240 = getelementptr i8, ptr addrspace(3) %92, i64 2120, !dbg !36
  %241 = load float, ptr addrspace(3) %240, align 4, !dbg !36
  %242 = getelementptr i8, ptr addrspace(3) %92, i64 2248, !dbg !36
  %243 = load float, ptr addrspace(3) %242, align 4, !dbg !36
  %244 = getelementptr i8, ptr addrspace(3) %92, i64 76, !dbg !36
  %245 = load float, ptr addrspace(3) %244, align 4, !dbg !36
  %246 = getelementptr i8, ptr addrspace(3) %92, i64 204, !dbg !36
  %247 = load float, ptr addrspace(3) %246, align 4, !dbg !36
  %248 = getelementptr i8, ptr addrspace(3) %92, i64 2124, !dbg !36
  %249 = load float, ptr addrspace(3) %248, align 4, !dbg !36
  %250 = getelementptr i8, ptr addrspace(3) %92, i64 2252, !dbg !36
  %251 = load float, ptr addrspace(3) %250, align 4, !dbg !36
  %252 = getelementptr i8, ptr addrspace(3) %92, i64 80, !dbg !36
  %253 = load float, ptr addrspace(3) %252, align 4, !dbg !36
  %254 = getelementptr i8, ptr addrspace(3) %92, i64 208, !dbg !36
  %255 = load float, ptr addrspace(3) %254, align 4, !dbg !36
  %256 = getelementptr i8, ptr addrspace(3) %92, i64 2128, !dbg !36
  %257 = load float, ptr addrspace(3) %256, align 4, !dbg !36
  %258 = getelementptr i8, ptr addrspace(3) %92, i64 2256, !dbg !36
  %259 = load float, ptr addrspace(3) %258, align 4, !dbg !36
  %260 = getelementptr i8, ptr addrspace(3) %92, i64 84, !dbg !36
  %261 = load float, ptr addrspace(3) %260, align 4, !dbg !36
  %262 = getelementptr i8, ptr addrspace(3) %92, i64 212, !dbg !36
  %263 = load float, ptr addrspace(3) %262, align 4, !dbg !36
  %264 = getelementptr i8, ptr addrspace(3) %92, i64 2132, !dbg !36
  %265 = load float, ptr addrspace(3) %264, align 4, !dbg !36
  %266 = getelementptr i8, ptr addrspace(3) %92, i64 2260, !dbg !36
  %267 = load float, ptr addrspace(3) %266, align 4, !dbg !36
  %268 = getelementptr i8, ptr addrspace(3) %92, i64 88, !dbg !36
  %269 = load float, ptr addrspace(3) %268, align 4, !dbg !36
  %270 = getelementptr i8, ptr addrspace(3) %92, i64 216, !dbg !36
  %271 = load float, ptr addrspace(3) %270, align 4, !dbg !36
  %272 = getelementptr i8, ptr addrspace(3) %92, i64 2136, !dbg !36
  %273 = load float, ptr addrspace(3) %272, align 4, !dbg !36
  %274 = getelementptr i8, ptr addrspace(3) %92, i64 2264, !dbg !36
  %275 = load float, ptr addrspace(3) %274, align 4, !dbg !36
  %276 = getelementptr i8, ptr addrspace(3) %92, i64 92, !dbg !36
  %277 = load float, ptr addrspace(3) %276, align 4, !dbg !36
  %278 = getelementptr i8, ptr addrspace(3) %92, i64 220, !dbg !36
  %279 = load float, ptr addrspace(3) %278, align 4, !dbg !36
  %280 = getelementptr i8, ptr addrspace(3) %92, i64 2140, !dbg !36
  %281 = load float, ptr addrspace(3) %280, align 4, !dbg !36
  %282 = getelementptr i8, ptr addrspace(3) %92, i64 2268, !dbg !36
  %283 = load float, ptr addrspace(3) %282, align 4, !dbg !36
  %284 = getelementptr i8, ptr addrspace(3) %92, i64 96, !dbg !36
  %285 = load float, ptr addrspace(3) %284, align 4, !dbg !36
  %286 = getelementptr i8, ptr addrspace(3) %92, i64 224, !dbg !36
  %287 = load float, ptr addrspace(3) %286, align 4, !dbg !36
  %288 = getelementptr i8, ptr addrspace(3) %92, i64 2144, !dbg !36
  %289 = load float, ptr addrspace(3) %288, align 4, !dbg !36
  %290 = getelementptr i8, ptr addrspace(3) %92, i64 2272, !dbg !36
  %291 = load float, ptr addrspace(3) %290, align 4, !dbg !36
  %292 = getelementptr i8, ptr addrspace(3) %92, i64 100, !dbg !36
  %293 = load float, ptr addrspace(3) %292, align 4, !dbg !36
  %294 = getelementptr i8, ptr addrspace(3) %92, i64 228, !dbg !36
  %295 = load float, ptr addrspace(3) %294, align 4, !dbg !36
  %296 = getelementptr i8, ptr addrspace(3) %92, i64 2148, !dbg !36
  %297 = load float, ptr addrspace(3) %296, align 4, !dbg !36
  %298 = getelementptr i8, ptr addrspace(3) %92, i64 2276, !dbg !36
  %299 = load float, ptr addrspace(3) %298, align 4, !dbg !36
  %300 = getelementptr i8, ptr addrspace(3) %92, i64 104, !dbg !36
  %301 = load float, ptr addrspace(3) %300, align 4, !dbg !36
  %302 = getelementptr i8, ptr addrspace(3) %92, i64 232, !dbg !36
  %303 = load float, ptr addrspace(3) %302, align 4, !dbg !36
  %304 = getelementptr i8, ptr addrspace(3) %92, i64 2152, !dbg !36
  %305 = load float, ptr addrspace(3) %304, align 4, !dbg !36
  %306 = getelementptr i8, ptr addrspace(3) %92, i64 2280, !dbg !36
  %307 = load float, ptr addrspace(3) %306, align 4, !dbg !36
  %308 = getelementptr i8, ptr addrspace(3) %92, i64 108, !dbg !36
  %309 = load float, ptr addrspace(3) %308, align 4, !dbg !36
  %310 = getelementptr i8, ptr addrspace(3) %92, i64 236, !dbg !36
  %311 = load float, ptr addrspace(3) %310, align 4, !dbg !36
  %312 = getelementptr i8, ptr addrspace(3) %92, i64 2156, !dbg !36
  %313 = load float, ptr addrspace(3) %312, align 4, !dbg !36
  %314 = getelementptr i8, ptr addrspace(3) %92, i64 2284, !dbg !36
  %315 = load float, ptr addrspace(3) %314, align 4, !dbg !36
  %316 = getelementptr i8, ptr addrspace(3) %92, i64 112, !dbg !36
  %317 = load float, ptr addrspace(3) %316, align 4, !dbg !36
  %318 = getelementptr i8, ptr addrspace(3) %92, i64 240, !dbg !36
  %319 = load float, ptr addrspace(3) %318, align 4, !dbg !36
  %320 = getelementptr i8, ptr addrspace(3) %92, i64 2160, !dbg !36
  %321 = load float, ptr addrspace(3) %320, align 4, !dbg !36
  %322 = getelementptr i8, ptr addrspace(3) %92, i64 2288, !dbg !36
  %323 = load float, ptr addrspace(3) %322, align 4, !dbg !36
  %324 = getelementptr i8, ptr addrspace(3) %92, i64 116, !dbg !36
  %325 = load float, ptr addrspace(3) %324, align 4, !dbg !36
  %326 = getelementptr i8, ptr addrspace(3) %92, i64 244, !dbg !36
  %327 = load float, ptr addrspace(3) %326, align 4, !dbg !36
  %328 = getelementptr i8, ptr addrspace(3) %92, i64 2164, !dbg !36
  %329 = load float, ptr addrspace(3) %328, align 4, !dbg !36
  %330 = getelementptr i8, ptr addrspace(3) %92, i64 2292, !dbg !36
  %331 = load float, ptr addrspace(3) %330, align 4, !dbg !36
  %332 = getelementptr i8, ptr addrspace(3) %92, i64 120, !dbg !36
  %333 = load float, ptr addrspace(3) %332, align 4, !dbg !36
  %334 = getelementptr i8, ptr addrspace(3) %92, i64 248, !dbg !36
  %335 = load float, ptr addrspace(3) %334, align 4, !dbg !36
  %336 = getelementptr i8, ptr addrspace(3) %92, i64 2168, !dbg !36
  %337 = load float, ptr addrspace(3) %336, align 4, !dbg !36
  %338 = getelementptr i8, ptr addrspace(3) %92, i64 2296, !dbg !36
  %339 = load float, ptr addrspace(3) %338, align 4, !dbg !36
  %340 = getelementptr i8, ptr addrspace(3) %92, i64 124, !dbg !36
  %341 = load float, ptr addrspace(3) %340, align 4, !dbg !36
  %342 = getelementptr i8, ptr addrspace(3) %92, i64 252, !dbg !36
  %343 = load float, ptr addrspace(3) %342, align 4, !dbg !36
  %344 = getelementptr i8, ptr addrspace(3) %92, i64 2172, !dbg !36
  %345 = load float, ptr addrspace(3) %344, align 4, !dbg !36
  %346 = getelementptr i8, ptr addrspace(3) %92, i64 2300, !dbg !36
  %347 = load float, ptr addrspace(3) %346, align 4, !dbg !36
  %348 = getelementptr float, ptr addrspace(3) %86, i64 %84, !dbg !37
  %349 = load float, ptr addrspace(3) %348, align 4, !dbg !37
  %350 = getelementptr i8, ptr addrspace(3) %348, i64 128, !dbg !37
  %351 = load float, ptr addrspace(3) %350, align 4, !dbg !37
  %352 = getelementptr i8, ptr addrspace(3) %348, i64 4, !dbg !37
  %353 = load float, ptr addrspace(3) %352, align 4, !dbg !37
  %354 = getelementptr i8, ptr addrspace(3) %348, i64 132, !dbg !37
  %355 = load float, ptr addrspace(3) %354, align 4, !dbg !37
  %356 = getelementptr i8, ptr addrspace(3) %348, i64 8, !dbg !37
  %357 = load float, ptr addrspace(3) %356, align 4, !dbg !37
  %358 = getelementptr i8, ptr addrspace(3) %348, i64 136, !dbg !37
  %359 = load float, ptr addrspace(3) %358, align 4, !dbg !37
  %360 = getelementptr i8, ptr addrspace(3) %348, i64 12, !dbg !37
  %361 = load float, ptr addrspace(3) %360, align 4, !dbg !37
  %362 = getelementptr i8, ptr addrspace(3) %348, i64 140, !dbg !37
  %363 = load float, ptr addrspace(3) %362, align 4, !dbg !37
  %364 = getelementptr i8, ptr addrspace(3) %348, i64 16, !dbg !37
  %365 = load float, ptr addrspace(3) %364, align 4, !dbg !37
  %366 = getelementptr i8, ptr addrspace(3) %348, i64 144, !dbg !37
  %367 = load float, ptr addrspace(3) %366, align 4, !dbg !37
  %368 = getelementptr i8, ptr addrspace(3) %348, i64 20, !dbg !37
  %369 = load float, ptr addrspace(3) %368, align 4, !dbg !37
  %370 = getelementptr i8, ptr addrspace(3) %348, i64 148, !dbg !37
  %371 = load float, ptr addrspace(3) %370, align 4, !dbg !37
  %372 = getelementptr i8, ptr addrspace(3) %348, i64 24, !dbg !37
  %373 = load float, ptr addrspace(3) %372, align 4, !dbg !37
  %374 = getelementptr i8, ptr addrspace(3) %348, i64 152, !dbg !37
  %375 = load float, ptr addrspace(3) %374, align 4, !dbg !37
  %376 = getelementptr i8, ptr addrspace(3) %348, i64 28, !dbg !37
  %377 = load float, ptr addrspace(3) %376, align 4, !dbg !37
  %378 = getelementptr i8, ptr addrspace(3) %348, i64 156, !dbg !37
  %379 = load float, ptr addrspace(3) %378, align 4, !dbg !37
  %380 = getelementptr i8, ptr addrspace(3) %348, i64 32, !dbg !37
  %381 = load float, ptr addrspace(3) %380, align 4, !dbg !37
  %382 = getelementptr i8, ptr addrspace(3) %348, i64 160, !dbg !37
  %383 = load float, ptr addrspace(3) %382, align 4, !dbg !37
  %384 = getelementptr i8, ptr addrspace(3) %348, i64 36, !dbg !37
  %385 = load float, ptr addrspace(3) %384, align 4, !dbg !37
  %386 = getelementptr i8, ptr addrspace(3) %348, i64 164, !dbg !37
  %387 = load float, ptr addrspace(3) %386, align 4, !dbg !37
  %388 = getelementptr i8, ptr addrspace(3) %348, i64 40, !dbg !37
  %389 = load float, ptr addrspace(3) %388, align 4, !dbg !37
  %390 = getelementptr i8, ptr addrspace(3) %348, i64 168, !dbg !37
  %391 = load float, ptr addrspace(3) %390, align 4, !dbg !37
  %392 = getelementptr i8, ptr addrspace(3) %348, i64 44, !dbg !37
  %393 = load float, ptr addrspace(3) %392, align 4, !dbg !37
  %394 = getelementptr i8, ptr addrspace(3) %348, i64 172, !dbg !37
  %395 = load float, ptr addrspace(3) %394, align 4, !dbg !37
  %396 = getelementptr i8, ptr addrspace(3) %348, i64 48, !dbg !37
  %397 = load float, ptr addrspace(3) %396, align 4, !dbg !37
  %398 = getelementptr i8, ptr addrspace(3) %348, i64 176, !dbg !37
  %399 = load float, ptr addrspace(3) %398, align 4, !dbg !37
  %400 = getelementptr i8, ptr addrspace(3) %348, i64 52, !dbg !37
  %401 = load float, ptr addrspace(3) %400, align 4, !dbg !37
  %402 = getelementptr i8, ptr addrspace(3) %348, i64 180, !dbg !37
  %403 = load float, ptr addrspace(3) %402, align 4, !dbg !37
  %404 = getelementptr i8, ptr addrspace(3) %348, i64 56, !dbg !37
  %405 = load float, ptr addrspace(3) %404, align 4, !dbg !37
  %406 = getelementptr i8, ptr addrspace(3) %348, i64 184, !dbg !37
  %407 = load float, ptr addrspace(3) %406, align 4, !dbg !37
  %408 = getelementptr i8, ptr addrspace(3) %348, i64 60, !dbg !37
  %409 = load float, ptr addrspace(3) %408, align 4, !dbg !37
  %410 = getelementptr i8, ptr addrspace(3) %348, i64 188, !dbg !37
  %411 = load float, ptr addrspace(3) %410, align 4, !dbg !37
  %412 = getelementptr i8, ptr addrspace(3) %348, i64 64, !dbg !37
  %413 = load float, ptr addrspace(3) %412, align 4, !dbg !37
  %414 = getelementptr i8, ptr addrspace(3) %348, i64 192, !dbg !37
  %415 = load float, ptr addrspace(3) %414, align 4, !dbg !37
  %416 = getelementptr i8, ptr addrspace(3) %348, i64 68, !dbg !37
  %417 = load float, ptr addrspace(3) %416, align 4, !dbg !37
  %418 = getelementptr i8, ptr addrspace(3) %348, i64 196, !dbg !37
  %419 = load float, ptr addrspace(3) %418, align 4, !dbg !37
  %420 = getelementptr i8, ptr addrspace(3) %348, i64 72, !dbg !37
  %421 = load float, ptr addrspace(3) %420, align 4, !dbg !37
  %422 = getelementptr i8, ptr addrspace(3) %348, i64 200, !dbg !37
  %423 = load float, ptr addrspace(3) %422, align 4, !dbg !37
  %424 = getelementptr i8, ptr addrspace(3) %348, i64 76, !dbg !37
  %425 = load float, ptr addrspace(3) %424, align 4, !dbg !37
  %426 = getelementptr i8, ptr addrspace(3) %348, i64 204, !dbg !37
  %427 = load float, ptr addrspace(3) %426, align 4, !dbg !37
  %428 = getelementptr i8, ptr addrspace(3) %348, i64 80, !dbg !37
  %429 = load float, ptr addrspace(3) %428, align 4, !dbg !37
  %430 = getelementptr i8, ptr addrspace(3) %348, i64 208, !dbg !37
  %431 = load float, ptr addrspace(3) %430, align 4, !dbg !37
  %432 = getelementptr i8, ptr addrspace(3) %348, i64 84, !dbg !37
  %433 = load float, ptr addrspace(3) %432, align 4, !dbg !37
  %434 = getelementptr i8, ptr addrspace(3) %348, i64 212, !dbg !37
  %435 = load float, ptr addrspace(3) %434, align 4, !dbg !37
  %436 = getelementptr i8, ptr addrspace(3) %348, i64 88, !dbg !37
  %437 = load float, ptr addrspace(3) %436, align 4, !dbg !37
  %438 = getelementptr i8, ptr addrspace(3) %348, i64 216, !dbg !37
  %439 = load float, ptr addrspace(3) %438, align 4, !dbg !37
  %440 = getelementptr i8, ptr addrspace(3) %348, i64 92, !dbg !37
  %441 = load float, ptr addrspace(3) %440, align 4, !dbg !37
  %442 = getelementptr i8, ptr addrspace(3) %348, i64 220, !dbg !37
  %443 = load float, ptr addrspace(3) %442, align 4, !dbg !37
  %444 = getelementptr i8, ptr addrspace(3) %348, i64 96, !dbg !37
  %445 = load float, ptr addrspace(3) %444, align 4, !dbg !37
  %446 = getelementptr i8, ptr addrspace(3) %348, i64 224, !dbg !37
  %447 = load float, ptr addrspace(3) %446, align 4, !dbg !37
  %448 = getelementptr i8, ptr addrspace(3) %348, i64 100, !dbg !37
  %449 = load float, ptr addrspace(3) %448, align 4, !dbg !37
  %450 = getelementptr i8, ptr addrspace(3) %348, i64 228, !dbg !37
  %451 = load float, ptr addrspace(3) %450, align 4, !dbg !37
  %452 = getelementptr i8, ptr addrspace(3) %348, i64 104, !dbg !37
  %453 = load float, ptr addrspace(3) %452, align 4, !dbg !37
  %454 = getelementptr i8, ptr addrspace(3) %348, i64 232, !dbg !37
  %455 = load float, ptr addrspace(3) %454, align 4, !dbg !37
  %456 = getelementptr i8, ptr addrspace(3) %348, i64 108, !dbg !37
  %457 = load float, ptr addrspace(3) %456, align 4, !dbg !37
  %458 = getelementptr i8, ptr addrspace(3) %348, i64 236, !dbg !37
  %459 = load float, ptr addrspace(3) %458, align 4, !dbg !37
  %460 = getelementptr i8, ptr addrspace(3) %348, i64 112, !dbg !37
  %461 = load float, ptr addrspace(3) %460, align 4, !dbg !37
  %462 = getelementptr i8, ptr addrspace(3) %348, i64 240, !dbg !37
  %463 = load float, ptr addrspace(3) %462, align 4, !dbg !37
  %464 = getelementptr i8, ptr addrspace(3) %348, i64 116, !dbg !37
  %465 = load float, ptr addrspace(3) %464, align 4, !dbg !37
  %466 = getelementptr i8, ptr addrspace(3) %348, i64 244, !dbg !37
  %467 = load float, ptr addrspace(3) %466, align 4, !dbg !37
  %468 = getelementptr i8, ptr addrspace(3) %348, i64 120, !dbg !37
  %469 = load float, ptr addrspace(3) %468, align 4, !dbg !37
  %470 = getelementptr i8, ptr addrspace(3) %348, i64 248, !dbg !37
  %471 = load float, ptr addrspace(3) %470, align 4, !dbg !37
  %472 = getelementptr i8, ptr addrspace(3) %348, i64 124, !dbg !37
  %473 = load float, ptr addrspace(3) %472, align 4, !dbg !37
  %474 = getelementptr i8, ptr addrspace(3) %348, i64 252, !dbg !37
  %475 = load float, ptr addrspace(3) %474, align 4, !dbg !37
  %476 = insertelement <8 x float> poison, float %93, i64 0, !dbg !41
  %477 = insertelement <8 x float> %476, float %95, i64 1, !dbg !41
  %478 = insertelement <8 x float> %477, float %97, i64 2, !dbg !41
  %479 = insertelement <8 x float> %478, float %99, i64 3, !dbg !41
  %480 = shufflevector <8 x float> %479, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %481 = insertelement <8 x float> poison, float %349, i64 0, !dbg !41
  %482 = insertelement <8 x float> %481, float %351, i64 1, !dbg !41
  %483 = shufflevector <8 x float> %482, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %484 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %480, <8 x float> %483, <8 x float> %91), !dbg !41
  %485 = insertelement <8 x float> poison, float %101, i64 0, !dbg !41
  %486 = insertelement <8 x float> %485, float %103, i64 1, !dbg !41
  %487 = insertelement <8 x float> %486, float %105, i64 2, !dbg !41
  %488 = insertelement <8 x float> %487, float %107, i64 3, !dbg !41
  %489 = shufflevector <8 x float> %488, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %490 = insertelement <8 x float> poison, float %353, i64 0, !dbg !41
  %491 = insertelement <8 x float> %490, float %355, i64 1, !dbg !41
  %492 = shufflevector <8 x float> %491, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %493 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %489, <8 x float> %492, <8 x float> %484), !dbg !41
  %494 = insertelement <8 x float> poison, float %109, i64 0, !dbg !41
  %495 = insertelement <8 x float> %494, float %111, i64 1, !dbg !41
  %496 = insertelement <8 x float> %495, float %113, i64 2, !dbg !41
  %497 = insertelement <8 x float> %496, float %115, i64 3, !dbg !41
  %498 = shufflevector <8 x float> %497, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %499 = insertelement <8 x float> poison, float %357, i64 0, !dbg !41
  %500 = insertelement <8 x float> %499, float %359, i64 1, !dbg !41
  %501 = shufflevector <8 x float> %500, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %502 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %498, <8 x float> %501, <8 x float> %493), !dbg !41
  %503 = insertelement <8 x float> poison, float %117, i64 0, !dbg !41
  %504 = insertelement <8 x float> %503, float %119, i64 1, !dbg !41
  %505 = insertelement <8 x float> %504, float %121, i64 2, !dbg !41
  %506 = insertelement <8 x float> %505, float %123, i64 3, !dbg !41
  %507 = shufflevector <8 x float> %506, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %508 = insertelement <8 x float> poison, float %361, i64 0, !dbg !41
  %509 = insertelement <8 x float> %508, float %363, i64 1, !dbg !41
  %510 = shufflevector <8 x float> %509, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %511 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %507, <8 x float> %510, <8 x float> %502), !dbg !41
  %512 = insertelement <8 x float> poison, float %125, i64 0, !dbg !41
  %513 = insertelement <8 x float> %512, float %127, i64 1, !dbg !41
  %514 = insertelement <8 x float> %513, float %129, i64 2, !dbg !41
  %515 = insertelement <8 x float> %514, float %131, i64 3, !dbg !41
  %516 = shufflevector <8 x float> %515, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %517 = insertelement <8 x float> poison, float %365, i64 0, !dbg !41
  %518 = insertelement <8 x float> %517, float %367, i64 1, !dbg !41
  %519 = shufflevector <8 x float> %518, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %520 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %516, <8 x float> %519, <8 x float> %511), !dbg !41
  %521 = insertelement <8 x float> poison, float %133, i64 0, !dbg !41
  %522 = insertelement <8 x float> %521, float %135, i64 1, !dbg !41
  %523 = insertelement <8 x float> %522, float %137, i64 2, !dbg !41
  %524 = insertelement <8 x float> %523, float %139, i64 3, !dbg !41
  %525 = shufflevector <8 x float> %524, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %526 = insertelement <8 x float> poison, float %369, i64 0, !dbg !41
  %527 = insertelement <8 x float> %526, float %371, i64 1, !dbg !41
  %528 = shufflevector <8 x float> %527, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %529 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %525, <8 x float> %528, <8 x float> %520), !dbg !41
  %530 = insertelement <8 x float> poison, float %141, i64 0, !dbg !41
  %531 = insertelement <8 x float> %530, float %143, i64 1, !dbg !41
  %532 = insertelement <8 x float> %531, float %145, i64 2, !dbg !41
  %533 = insertelement <8 x float> %532, float %147, i64 3, !dbg !41
  %534 = shufflevector <8 x float> %533, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %535 = insertelement <8 x float> poison, float %373, i64 0, !dbg !41
  %536 = insertelement <8 x float> %535, float %375, i64 1, !dbg !41
  %537 = shufflevector <8 x float> %536, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %538 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %534, <8 x float> %537, <8 x float> %529), !dbg !41
  %539 = insertelement <8 x float> poison, float %149, i64 0, !dbg !41
  %540 = insertelement <8 x float> %539, float %151, i64 1, !dbg !41
  %541 = insertelement <8 x float> %540, float %153, i64 2, !dbg !41
  %542 = insertelement <8 x float> %541, float %155, i64 3, !dbg !41
  %543 = shufflevector <8 x float> %542, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %544 = insertelement <8 x float> poison, float %377, i64 0, !dbg !41
  %545 = insertelement <8 x float> %544, float %379, i64 1, !dbg !41
  %546 = shufflevector <8 x float> %545, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %547 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %543, <8 x float> %546, <8 x float> %538), !dbg !41
  %548 = insertelement <8 x float> poison, float %157, i64 0, !dbg !41
  %549 = insertelement <8 x float> %548, float %159, i64 1, !dbg !41
  %550 = insertelement <8 x float> %549, float %161, i64 2, !dbg !41
  %551 = insertelement <8 x float> %550, float %163, i64 3, !dbg !41
  %552 = shufflevector <8 x float> %551, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %553 = insertelement <8 x float> poison, float %381, i64 0, !dbg !41
  %554 = insertelement <8 x float> %553, float %383, i64 1, !dbg !41
  %555 = shufflevector <8 x float> %554, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %556 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %552, <8 x float> %555, <8 x float> %547), !dbg !41
  %557 = insertelement <8 x float> poison, float %165, i64 0, !dbg !41
  %558 = insertelement <8 x float> %557, float %167, i64 1, !dbg !41
  %559 = insertelement <8 x float> %558, float %169, i64 2, !dbg !41
  %560 = insertelement <8 x float> %559, float %171, i64 3, !dbg !41
  %561 = shufflevector <8 x float> %560, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %562 = insertelement <8 x float> poison, float %385, i64 0, !dbg !41
  %563 = insertelement <8 x float> %562, float %387, i64 1, !dbg !41
  %564 = shufflevector <8 x float> %563, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %565 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %561, <8 x float> %564, <8 x float> %556), !dbg !41
  %566 = insertelement <8 x float> poison, float %173, i64 0, !dbg !41
  %567 = insertelement <8 x float> %566, float %175, i64 1, !dbg !41
  %568 = insertelement <8 x float> %567, float %177, i64 2, !dbg !41
  %569 = insertelement <8 x float> %568, float %179, i64 3, !dbg !41
  %570 = shufflevector <8 x float> %569, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %571 = insertelement <8 x float> poison, float %389, i64 0, !dbg !41
  %572 = insertelement <8 x float> %571, float %391, i64 1, !dbg !41
  %573 = shufflevector <8 x float> %572, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %574 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %570, <8 x float> %573, <8 x float> %565), !dbg !41
  %575 = insertelement <8 x float> poison, float %181, i64 0, !dbg !41
  %576 = insertelement <8 x float> %575, float %183, i64 1, !dbg !41
  %577 = insertelement <8 x float> %576, float %185, i64 2, !dbg !41
  %578 = insertelement <8 x float> %577, float %187, i64 3, !dbg !41
  %579 = shufflevector <8 x float> %578, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %580 = insertelement <8 x float> poison, float %393, i64 0, !dbg !41
  %581 = insertelement <8 x float> %580, float %395, i64 1, !dbg !41
  %582 = shufflevector <8 x float> %581, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %583 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %579, <8 x float> %582, <8 x float> %574), !dbg !41
  %584 = insertelement <8 x float> poison, float %189, i64 0, !dbg !41
  %585 = insertelement <8 x float> %584, float %191, i64 1, !dbg !41
  %586 = insertelement <8 x float> %585, float %193, i64 2, !dbg !41
  %587 = insertelement <8 x float> %586, float %195, i64 3, !dbg !41
  %588 = shufflevector <8 x float> %587, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %589 = insertelement <8 x float> poison, float %397, i64 0, !dbg !41
  %590 = insertelement <8 x float> %589, float %399, i64 1, !dbg !41
  %591 = shufflevector <8 x float> %590, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %592 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %588, <8 x float> %591, <8 x float> %583), !dbg !41
  %593 = insertelement <8 x float> poison, float %197, i64 0, !dbg !41
  %594 = insertelement <8 x float> %593, float %199, i64 1, !dbg !41
  %595 = insertelement <8 x float> %594, float %201, i64 2, !dbg !41
  %596 = insertelement <8 x float> %595, float %203, i64 3, !dbg !41
  %597 = shufflevector <8 x float> %596, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %598 = insertelement <8 x float> poison, float %401, i64 0, !dbg !41
  %599 = insertelement <8 x float> %598, float %403, i64 1, !dbg !41
  %600 = shufflevector <8 x float> %599, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %601 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %597, <8 x float> %600, <8 x float> %592), !dbg !41
  %602 = insertelement <8 x float> poison, float %205, i64 0, !dbg !41
  %603 = insertelement <8 x float> %602, float %207, i64 1, !dbg !41
  %604 = insertelement <8 x float> %603, float %209, i64 2, !dbg !41
  %605 = insertelement <8 x float> %604, float %211, i64 3, !dbg !41
  %606 = shufflevector <8 x float> %605, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %607 = insertelement <8 x float> poison, float %405, i64 0, !dbg !41
  %608 = insertelement <8 x float> %607, float %407, i64 1, !dbg !41
  %609 = shufflevector <8 x float> %608, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %610 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %606, <8 x float> %609, <8 x float> %601), !dbg !41
  %611 = insertelement <8 x float> poison, float %213, i64 0, !dbg !41
  %612 = insertelement <8 x float> %611, float %215, i64 1, !dbg !41
  %613 = insertelement <8 x float> %612, float %217, i64 2, !dbg !41
  %614 = insertelement <8 x float> %613, float %219, i64 3, !dbg !41
  %615 = shufflevector <8 x float> %614, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %616 = insertelement <8 x float> poison, float %409, i64 0, !dbg !41
  %617 = insertelement <8 x float> %616, float %411, i64 1, !dbg !41
  %618 = shufflevector <8 x float> %617, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %619 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %615, <8 x float> %618, <8 x float> %610), !dbg !41
  %620 = insertelement <8 x float> poison, float %221, i64 0, !dbg !41
  %621 = insertelement <8 x float> %620, float %223, i64 1, !dbg !41
  %622 = insertelement <8 x float> %621, float %225, i64 2, !dbg !41
  %623 = insertelement <8 x float> %622, float %227, i64 3, !dbg !41
  %624 = shufflevector <8 x float> %623, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %625 = insertelement <8 x float> poison, float %413, i64 0, !dbg !41
  %626 = insertelement <8 x float> %625, float %415, i64 1, !dbg !41
  %627 = shufflevector <8 x float> %626, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %628 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %624, <8 x float> %627, <8 x float> %619), !dbg !41
  %629 = insertelement <8 x float> poison, float %229, i64 0, !dbg !41
  %630 = insertelement <8 x float> %629, float %231, i64 1, !dbg !41
  %631 = insertelement <8 x float> %630, float %233, i64 2, !dbg !41
  %632 = insertelement <8 x float> %631, float %235, i64 3, !dbg !41
  %633 = shufflevector <8 x float> %632, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %634 = insertelement <8 x float> poison, float %417, i64 0, !dbg !41
  %635 = insertelement <8 x float> %634, float %419, i64 1, !dbg !41
  %636 = shufflevector <8 x float> %635, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %637 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %633, <8 x float> %636, <8 x float> %628), !dbg !41
  %638 = insertelement <8 x float> poison, float %237, i64 0, !dbg !41
  %639 = insertelement <8 x float> %638, float %239, i64 1, !dbg !41
  %640 = insertelement <8 x float> %639, float %241, i64 2, !dbg !41
  %641 = insertelement <8 x float> %640, float %243, i64 3, !dbg !41
  %642 = shufflevector <8 x float> %641, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %643 = insertelement <8 x float> poison, float %421, i64 0, !dbg !41
  %644 = insertelement <8 x float> %643, float %423, i64 1, !dbg !41
  %645 = shufflevector <8 x float> %644, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %646 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %642, <8 x float> %645, <8 x float> %637), !dbg !41
  %647 = insertelement <8 x float> poison, float %245, i64 0, !dbg !41
  %648 = insertelement <8 x float> %647, float %247, i64 1, !dbg !41
  %649 = insertelement <8 x float> %648, float %249, i64 2, !dbg !41
  %650 = insertelement <8 x float> %649, float %251, i64 3, !dbg !41
  %651 = shufflevector <8 x float> %650, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %652 = insertelement <8 x float> poison, float %425, i64 0, !dbg !41
  %653 = insertelement <8 x float> %652, float %427, i64 1, !dbg !41
  %654 = shufflevector <8 x float> %653, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %655 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %651, <8 x float> %654, <8 x float> %646), !dbg !41
  %656 = insertelement <8 x float> poison, float %253, i64 0, !dbg !41
  %657 = insertelement <8 x float> %656, float %255, i64 1, !dbg !41
  %658 = insertelement <8 x float> %657, float %257, i64 2, !dbg !41
  %659 = insertelement <8 x float> %658, float %259, i64 3, !dbg !41
  %660 = shufflevector <8 x float> %659, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %661 = insertelement <8 x float> poison, float %429, i64 0, !dbg !41
  %662 = insertelement <8 x float> %661, float %431, i64 1, !dbg !41
  %663 = shufflevector <8 x float> %662, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %664 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %660, <8 x float> %663, <8 x float> %655), !dbg !41
  %665 = insertelement <8 x float> poison, float %261, i64 0, !dbg !41
  %666 = insertelement <8 x float> %665, float %263, i64 1, !dbg !41
  %667 = insertelement <8 x float> %666, float %265, i64 2, !dbg !41
  %668 = insertelement <8 x float> %667, float %267, i64 3, !dbg !41
  %669 = shufflevector <8 x float> %668, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %670 = insertelement <8 x float> poison, float %433, i64 0, !dbg !41
  %671 = insertelement <8 x float> %670, float %435, i64 1, !dbg !41
  %672 = shufflevector <8 x float> %671, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %673 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %669, <8 x float> %672, <8 x float> %664), !dbg !41
  %674 = insertelement <8 x float> poison, float %269, i64 0, !dbg !41
  %675 = insertelement <8 x float> %674, float %271, i64 1, !dbg !41
  %676 = insertelement <8 x float> %675, float %273, i64 2, !dbg !41
  %677 = insertelement <8 x float> %676, float %275, i64 3, !dbg !41
  %678 = shufflevector <8 x float> %677, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %679 = insertelement <8 x float> poison, float %437, i64 0, !dbg !41
  %680 = insertelement <8 x float> %679, float %439, i64 1, !dbg !41
  %681 = shufflevector <8 x float> %680, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %682 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %678, <8 x float> %681, <8 x float> %673), !dbg !41
  %683 = insertelement <8 x float> poison, float %277, i64 0, !dbg !41
  %684 = insertelement <8 x float> %683, float %279, i64 1, !dbg !41
  %685 = insertelement <8 x float> %684, float %281, i64 2, !dbg !41
  %686 = insertelement <8 x float> %685, float %283, i64 3, !dbg !41
  %687 = shufflevector <8 x float> %686, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %688 = insertelement <8 x float> poison, float %441, i64 0, !dbg !41
  %689 = insertelement <8 x float> %688, float %443, i64 1, !dbg !41
  %690 = shufflevector <8 x float> %689, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %691 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %687, <8 x float> %690, <8 x float> %682), !dbg !41
  %692 = insertelement <8 x float> poison, float %285, i64 0, !dbg !41
  %693 = insertelement <8 x float> %692, float %287, i64 1, !dbg !41
  %694 = insertelement <8 x float> %693, float %289, i64 2, !dbg !41
  %695 = insertelement <8 x float> %694, float %291, i64 3, !dbg !41
  %696 = shufflevector <8 x float> %695, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %697 = insertelement <8 x float> poison, float %445, i64 0, !dbg !41
  %698 = insertelement <8 x float> %697, float %447, i64 1, !dbg !41
  %699 = shufflevector <8 x float> %698, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %700 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %696, <8 x float> %699, <8 x float> %691), !dbg !41
  %701 = insertelement <8 x float> poison, float %293, i64 0, !dbg !41
  %702 = insertelement <8 x float> %701, float %295, i64 1, !dbg !41
  %703 = insertelement <8 x float> %702, float %297, i64 2, !dbg !41
  %704 = insertelement <8 x float> %703, float %299, i64 3, !dbg !41
  %705 = shufflevector <8 x float> %704, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %706 = insertelement <8 x float> poison, float %449, i64 0, !dbg !41
  %707 = insertelement <8 x float> %706, float %451, i64 1, !dbg !41
  %708 = shufflevector <8 x float> %707, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %709 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %705, <8 x float> %708, <8 x float> %700), !dbg !41
  %710 = insertelement <8 x float> poison, float %301, i64 0, !dbg !41
  %711 = insertelement <8 x float> %710, float %303, i64 1, !dbg !41
  %712 = insertelement <8 x float> %711, float %305, i64 2, !dbg !41
  %713 = insertelement <8 x float> %712, float %307, i64 3, !dbg !41
  %714 = shufflevector <8 x float> %713, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %715 = insertelement <8 x float> poison, float %453, i64 0, !dbg !41
  %716 = insertelement <8 x float> %715, float %455, i64 1, !dbg !41
  %717 = shufflevector <8 x float> %716, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %718 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %714, <8 x float> %717, <8 x float> %709), !dbg !41
  %719 = insertelement <8 x float> poison, float %309, i64 0, !dbg !41
  %720 = insertelement <8 x float> %719, float %311, i64 1, !dbg !41
  %721 = insertelement <8 x float> %720, float %313, i64 2, !dbg !41
  %722 = insertelement <8 x float> %721, float %315, i64 3, !dbg !41
  %723 = shufflevector <8 x float> %722, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %724 = insertelement <8 x float> poison, float %457, i64 0, !dbg !41
  %725 = insertelement <8 x float> %724, float %459, i64 1, !dbg !41
  %726 = shufflevector <8 x float> %725, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %727 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %723, <8 x float> %726, <8 x float> %718), !dbg !41
  %728 = insertelement <8 x float> poison, float %317, i64 0, !dbg !41
  %729 = insertelement <8 x float> %728, float %319, i64 1, !dbg !41
  %730 = insertelement <8 x float> %729, float %321, i64 2, !dbg !41
  %731 = insertelement <8 x float> %730, float %323, i64 3, !dbg !41
  %732 = shufflevector <8 x float> %731, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %733 = insertelement <8 x float> poison, float %461, i64 0, !dbg !41
  %734 = insertelement <8 x float> %733, float %463, i64 1, !dbg !41
  %735 = shufflevector <8 x float> %734, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %736 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %732, <8 x float> %735, <8 x float> %727), !dbg !41
  %737 = insertelement <8 x float> poison, float %325, i64 0, !dbg !41
  %738 = insertelement <8 x float> %737, float %327, i64 1, !dbg !41
  %739 = insertelement <8 x float> %738, float %329, i64 2, !dbg !41
  %740 = insertelement <8 x float> %739, float %331, i64 3, !dbg !41
  %741 = shufflevector <8 x float> %740, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %742 = insertelement <8 x float> poison, float %465, i64 0, !dbg !41
  %743 = insertelement <8 x float> %742, float %467, i64 1, !dbg !41
  %744 = shufflevector <8 x float> %743, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %745 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %741, <8 x float> %744, <8 x float> %736), !dbg !41
  %746 = insertelement <8 x float> poison, float %333, i64 0, !dbg !41
  %747 = insertelement <8 x float> %746, float %335, i64 1, !dbg !41
  %748 = insertelement <8 x float> %747, float %337, i64 2, !dbg !41
  %749 = insertelement <8 x float> %748, float %339, i64 3, !dbg !41
  %750 = shufflevector <8 x float> %749, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %751 = insertelement <8 x float> poison, float %469, i64 0, !dbg !41
  %752 = insertelement <8 x float> %751, float %471, i64 1, !dbg !41
  %753 = shufflevector <8 x float> %752, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %754 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %750, <8 x float> %753, <8 x float> %745), !dbg !41
  %755 = insertelement <8 x float> poison, float %341, i64 0, !dbg !41
  %756 = insertelement <8 x float> %755, float %343, i64 1, !dbg !41
  %757 = insertelement <8 x float> %756, float %345, i64 2, !dbg !41
  %758 = insertelement <8 x float> %757, float %347, i64 3, !dbg !41
  %759 = shufflevector <8 x float> %758, <8 x float> poison, <8 x i32> <i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3>, !dbg !41
  %760 = insertelement <8 x float> poison, float %473, i64 0, !dbg !41
  %761 = insertelement <8 x float> %760, float %475, i64 1, !dbg !41
  %762 = shufflevector <8 x float> %761, <8 x float> poison, <8 x i32> <i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1>, !dbg !41
  %763 = tail call <8 x float> @llvm.fmuladd.v8f32(<8 x float> %759, <8 x float> %762, <8 x float> %754), !dbg !41
  %764 = getelementptr i8, ptr addrspace(1) %.pn840, i64 128, !dbg !38
  %765 = getelementptr i8, ptr addrspace(1) %.pn2441, i64 128, !dbg !39
  %766 = getelementptr i8, ptr addrspace(1) %.pn1642, i64 128, !dbg !39
  %767 = add i32 %89, 1, !dbg !40
  %768 = icmp slt i32 %767, 4, !dbg !40
  %769 = select i1 %768, i32 %767, i32 0, !dbg !40
  %770 = shl i32 %769, 10, !dbg !36
  %771 = sext i32 %770 to i64, !dbg !36
  %772 = icmp ult i32 %90, %invariant.umin, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %gep = getelementptr float, ptr addrspace(3) %54, i64 %771, !dbg !36
  %773 = select i1 %772, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %gep, ptr addrspace(1) %764, i32 %773, i1 true) #3, !dbg !36
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !36
  %774 = shl i32 %769, 11, !dbg !37
  %775 = sext i32 %774 to i64, !dbg !37
  %776 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %775, !dbg !37
  %777 = getelementptr float, ptr addrspace(3) %776, i64 %53, !dbg !37
  %778 = getelementptr float, ptr addrspace(3) %776, i64 %58, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %777, ptr addrspace(1) %765, i32 %773, i1 true) #3, !dbg !37
  tail call void asm sideeffect "@$3 cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r,b"(ptr addrspace(3) %778, ptr addrspace(1) %766, i32 %773, i1 true) #3, !dbg !37
  tail call void asm sideeffect "cp.async.commit_group ;", ""() #3, !dbg !37
  %779 = add i32 %88, 1, !dbg !40
  %780 = icmp slt i32 %779, 4, !dbg !40
  %781 = select i1 %780, i32 %779, i32 0, !dbg !40
  %782 = shl i32 %781, 10, !dbg !36
  %783 = sext i32 %782 to i64, !dbg !36
  %784 = getelementptr float, ptr addrspace(3) @global_smem, i64 %783, !dbg !36
  tail call void asm sideeffect "cp.async.wait_group 0x6;", ""() #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %785 = shl i32 %781, 11, !dbg !37
  %786 = sext i32 %785 to i64, !dbg !37
  %787 = getelementptr float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i64 16384), i64 %786, !dbg !37
  %788 = add nuw nsw i32 %90, 32, !dbg !40
  %789 = icmp ult i32 %90, 536, !dbg !40
  br i1 %789, label %85, label %790, !dbg !40

790:                                              ; preds = %85
  %791 = or disjoint i32 %29, 16, !dbg !24
  %792 = and i32 %32, 60, !dbg !26
  %793 = or disjoint i32 %792, %30, !dbg !27
  tail call void asm sideeffect "cp.async.wait_group 0x0;", ""() #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %794 = icmp slt i32 %29, %3, !dbg !42
  %795 = icmp slt i32 %791, %3, !dbg !42
  %796 = icmp slt i32 %793, 256, !dbg !43
  %797 = and i1 %796, %794, !dbg !44
  %798 = and i1 %795, %796, !dbg !44
  %799 = shl i32 %29, 8, !dbg !45
  %800 = shl i32 %791, 8, !dbg !45
  %801 = add i32 %799, %793, !dbg !46
  %802 = add i32 %793, %800, !dbg !46
  %803 = sext i32 %801 to i64, !dbg !47
  %804 = getelementptr float, ptr addrspace(1) %2, i64 %803, !dbg !47
  %805 = sext i32 %802 to i64, !dbg !47
  %806 = getelementptr float, ptr addrspace(1) %2, i64 %805, !dbg !47
  %807 = and i32 %78, 14, !dbg !48
  %808 = mul nuw nsw i32 %807, 68, !dbg !48
  %809 = add nuw nsw i32 %808, %79, !dbg !48
  %810 = zext nneg i32 %809 to i64, !dbg !48
  %811 = getelementptr float, ptr addrspace(3) @global_smem, i64 %810, !dbg !48
  %812 = shufflevector <8 x float> %763, <8 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !48
  store <2 x float> %812, ptr addrspace(3) %811, align 8, !dbg !48
  %813 = getelementptr i8, ptr addrspace(3) %811, i64 272, !dbg !48
  %814 = shufflevector <8 x float> %763, <8 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !48
  store <2 x float> %814, ptr addrspace(3) %813, align 8, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %815 = lshr i32 %20, 4, !dbg !48
  %816 = or disjoint i32 %807, %815, !dbg !48
  %817 = and i32 %32, 60, !dbg !48
  %818 = mul nuw nsw i32 %816, 68, !dbg !48
  %819 = add nuw nsw i32 %818, %817, !dbg !48
  %820 = zext nneg i32 %819 to i64, !dbg !48
  %821 = getelementptr float, ptr addrspace(3) @global_smem, i64 %820, !dbg !48
  %822 = load <4 x i32>, ptr addrspace(3) %821, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %823 = shufflevector <8 x float> %763, <8 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !48
  store <2 x float> %823, ptr addrspace(3) %811, align 8, !dbg !48
  %824 = shufflevector <8 x float> %763, <8 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !48
  store <2 x float> %824, ptr addrspace(3) %813, align 8, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %825 = load <4 x i32>, ptr addrspace(3) %821, align 16, !dbg !48
  %.extract = extractelement <4 x i32> %822, i64 0, !dbg !48
  %.extract26 = extractelement <4 x i32> %822, i64 1, !dbg !48
  %.extract28 = extractelement <4 x i32> %822, i64 2, !dbg !48
  %.extract30 = extractelement <4 x i32> %822, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract26, i32 %.extract28, i32 %.extract30, ptr addrspace(1) %804, i1 %797) #3, !dbg !48
  %.extract32 = extractelement <4 x i32> %825, i64 0, !dbg !48
  %.extract34 = extractelement <4 x i32> %825, i64 1, !dbg !48
  %.extract36 = extractelement <4 x i32> %825, i64 2, !dbg !48
  %.extract38 = extractelement <4 x i32> %825, i64 3, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract32, i32 %.extract34, i32 %.extract36, i32 %.extract38, ptr addrspace(1) %806, i1 %798) #3, !dbg !48
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x float> @llvm.fmuladd.v8f32(<8 x float>, <8 x float>, <8 x float>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgyopitbdvrcswi6d4mg2vy5ug4tidkkuve7x3e22wrip64amqom.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/gy")
!4 = !{ptr @triton_mm, !"kernel", i32 1}
!5 = !{ptr @triton_mm, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_mm", linkageName: "triton_mm", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 33, column: 16, scope: !7)
!11 = !DILocation(line: 0, scope: !7)
!12 = !DILocation(line: 42, column: 24, scope: !7)
!13 = !DILocation(line: 43, column: 28, scope: !7)
!14 = !DILocation(line: 43, column: 34, scope: !7)
!15 = !DILocation(line: 48, column: 22, scope: !7)
!16 = !DILocation(line: 49, column: 41, scope: !7)
!17 = !DILocation(line: 49, column: 30, scope: !7)
!18 = !DILocation(line: 49, column: 50, scope: !7)
!19 = !DILocation(line: 50, column: 40, scope: !7)
!20 = !DILocation(line: 50, column: 34, scope: !7)
!21 = !DILocation(line: 51, column: 30, scope: !7)
!22 = !DILocation(line: 53, column: 17, scope: !7)
!23 = !DILocation(line: 53, column: 40, scope: !7)
!24 = !DILocation(line: 53, column: 27, scope: !7)
!25 = !DILocation(line: 54, column: 17, scope: !7)
!26 = !DILocation(line: 54, column: 40, scope: !7)
!27 = !DILocation(line: 54, column: 27, scope: !7)
!28 = !DILocation(line: 56, column: 52, scope: !7)
!29 = !DILocation(line: 60, column: 52, scope: !7)
!30 = !DILocation(line: 64, column: 28, scope: !7)
!31 = !DILocation(line: 64, column: 40, scope: !7)
!32 = !DILocation(line: 64, column: 13, scope: !7)
!33 = !DILocation(line: 65, column: 54, scope: !7)
!34 = !DILocation(line: 65, column: 39, scope: !7)
!35 = !DILocation(line: 65, column: 13, scope: !7)
!36 = !DILocation(line: 73, column: 24, scope: !7)
!37 = !DILocation(line: 74, column: 24, scope: !7)
!38 = !DILocation(line: 78, column: 13, scope: !7)
!39 = !DILocation(line: 79, column: 13, scope: !7)
!40 = !DILocation(line: 68, column: 25, scope: !7)
!41 = !DILocation(line: 77, column: 25, scope: !7)
!42 = !DILocation(line: 86, column: 20, scope: !7)
!43 = !DILocation(line: 86, column: 34, scope: !7)
!44 = !DILocation(line: 86, column: 26, scope: !7)
!45 = !DILocation(line: 89, column: 26, scope: !7)
!46 = !DILocation(line: 89, column: 22, scope: !7)
!47 = !DILocation(line: 90, column: 25, scope: !7)
!48 = !DILocation(line: 90, column: 67, scope: !7)
