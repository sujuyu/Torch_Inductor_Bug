; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8], align 16

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = and i32 %6, 127, !dbg !12
  %10 = or disjoint i32 %9, 128, !dbg !12
  %11 = or disjoint i32 %5, %8, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = or disjoint i32 %5, %9, !dbg !13
  %14 = or disjoint i32 %5, %10, !dbg !13
  %15 = icmp slt i32 %11, %2, !dbg !14
  %16 = icmp slt i32 %12, %2, !dbg !14
  %17 = icmp slt i32 %13, %2, !dbg !14
  %18 = icmp slt i32 %14, %2, !dbg !14
  %.frozen = freeze i32 %13
  %19 = sdiv i32 %.frozen, 156, !dbg !15
  %20 = mul i32 %19, 156
  %.decomposed = sub i32 %.frozen, %20
  %.frozen1 = freeze i32 %14
  %21 = sdiv i32 %.frozen1, 156, !dbg !15
  %22 = mul i32 %21, 156
  %.decomposed2 = sub i32 %.frozen1, %22
  %23 = sext i32 %11 to i64, !dbg !16
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !16
  %25 = sext i32 %12 to i64, !dbg !16
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !16
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %15) #2, !dbg !17
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %16) #2, !dbg !17
  %29 = mul i32 %19, 1872, !dbg !18
  %30 = mul i32 %21, 1872, !dbg !18
  %31 = add i32 %29, %.decomposed, !dbg !19
  %32 = add i32 %30, %.decomposed2, !dbg !19
  %33 = sext i32 %31 to i64, !dbg !20
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !20
  %35 = sext i32 %32 to i64, !dbg !20
  %36 = getelementptr float, ptr addrspace(1) %1, i64 %35, !dbg !20
  %37 = shl nuw nsw i32 %9, 1, !dbg !21
  %38 = zext nneg i32 %37 to i64, !dbg !21
  %39 = getelementptr float, ptr addrspace(3) @global_smem, i64 %38, !dbg !21
  %40 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !21
  %41 = insertelement <2 x i32> %40, i32 %28, i64 1, !dbg !21
  store <2 x i32> %41, ptr addrspace(3) %39, align 8, !dbg !21
  tail call void @llvm.nvvm.barrier0(), !dbg !21
  %42 = zext nneg i32 %9 to i64, !dbg !21
  %43 = getelementptr float, ptr addrspace(3) @global_smem, i64 %42, !dbg !21
  %44 = load i32, ptr addrspace(3) %43, align 4, !dbg !21
  %45 = zext nneg i32 %10 to i64, !dbg !21
  %46 = getelementptr float, ptr addrspace(3) @global_smem, i64 %45, !dbg !21
  %47 = load i32, ptr addrspace(3) %46, align 4, !dbg !21
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %44, ptr addrspace(1) %34, i1 %17) #2, !dbg !21
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %47, ptr addrspace(1) %36, i1 %18) #2, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6pisv3oxpachlkp5tciwos7ckihswphewxj2kuz7g4krlgjlgb4.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu_torch260/6p")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 19, column: 28, scope: !7)
!11 = !DILocation(line: 19, column: 33, scope: !7)
!12 = !DILocation(line: 20, column: 36, scope: !7)
!13 = !DILocation(line: 20, column: 23, scope: !7)
!14 = !DILocation(line: 21, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 20, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 35, scope: !7)
!18 = !DILocation(line: 26, column: 36, scope: !7)
!19 = !DILocation(line: 26, column: 31, scope: !7)
!20 = !DILocation(line: 26, column: 25, scope: !7)
!21 = !DILocation(line: 26, column: 48, scope: !7)
!22 = !DILocation(line: 26, column: 4, scope: !7)
