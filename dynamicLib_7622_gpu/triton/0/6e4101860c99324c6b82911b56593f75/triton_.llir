; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external addrspace(3) global [0 x i8]

define void @triton__0d1d2d3d4d5d678(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, i32 %8) local_unnamed_addr !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %11 = and i32 %10, 31, !dbg !8
  %12 = lshr i32 %10, 5, !dbg !8
  %13 = and i32 %12, 1, !dbg !8
  %urem = and i32 %10, 63, !dbg !8
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !9
  %15 = icmp slt i32 %14, %7, !dbg !10
  %16 = icmp ult i32 %urem, 50, !dbg !11
  %.frozen = freeze i32 %14
  %17 = sdiv i32 %.frozen, 172, !dbg !12
  %18 = mul i32 %17, 172
  %.decomposed = sub i32 %.frozen, %18
  %19 = sext i32 %17 to i64, !dbg !13
  %20 = getelementptr double, ptr addrspace(1) %0, i64 %19, !dbg !13
  %21 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %20, i1 %15) #3, !dbg !14
  %22 = bitcast i64 %21 to double, !dbg !14
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !15
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %15) #3, !dbg !16
  %25 = mul nuw nsw i32 %urem, 172, !dbg !17
  %26 = add nsw i32 %.decomposed, %25, !dbg !18
  %27 = mul i32 %17, 8600, !dbg !19
  %28 = add i32 %26, %27, !dbg !20
  %29 = sext i32 %28 to i64, !dbg !21
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %29, !dbg !21
  %31 = and i1 %16, %15, !dbg !22
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %31, i32 0, i1 %31) #3, !dbg !23
  %33 = bitcast i32 %32 to float, !dbg !23
  %34 = sext i32 %.decomposed to i64, !dbg !24
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %34, !dbg !24
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %15) #3, !dbg !25
  %37 = bitcast i32 %36 to float, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %4, i64 %29, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %31, i32 0, i1 %31) #3, !dbg !27
  %40 = bitcast i32 %39 to float, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %5, i64 %19, !dbg !28
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %15) #3, !dbg !29
  %43 = bitcast i32 %42 to float, !dbg !29
  %44 = sitofp i32 %urem to double, !dbg !30
  %45 = fcmp olt double %22, 5.000000e+01, !dbg !31
  %46 = fcmp uno double %22, 0.000000e+00, !dbg !35
  %47 = or i1 %45, %46, !dbg !36
  %48 = select i1 %47, double %22, double 5.000000e+01, !dbg !37
  %49 = fcmp ogt double %48, %44, !dbg !38
  %50 = and i32 %24, 2147483647, !dbg !39
  %51 = icmp eq i32 %50, 0, !dbg !39
  %52 = or i1 %51, %49, !dbg !40
  %53 = fadd float %33, %37, !dbg !41
  %54 = fadd float %53, %40, !dbg !42
  %55 = and i1 %31, %52, !dbg !43
  %56 = select i1 %55, float %54, float 0.000000e+00, !dbg !43
  %57 = bitcast float %56 to i32, !dbg !44
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 16, i32 31), !dbg !44
  %59 = bitcast i32 %58 to float, !dbg !44
  %60 = fadd float %56, %59, !dbg !48
  %61 = bitcast float %60 to i32, !dbg !44
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 8, i32 31), !dbg !44
  %63 = bitcast i32 %62 to float, !dbg !44
  %64 = fadd float %60, %63, !dbg !48
  %65 = bitcast float %64 to i32, !dbg !44
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 4, i32 31), !dbg !44
  %67 = bitcast i32 %66 to float, !dbg !44
  %68 = fadd float %64, %67, !dbg !48
  %69 = bitcast float %68 to i32, !dbg !44
  %70 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %69, i32 2, i32 31), !dbg !44
  %71 = bitcast i32 %70 to float, !dbg !44
  %72 = fadd float %68, %71, !dbg !48
  %73 = bitcast float %72 to i32, !dbg !44
  %74 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %73, i32 1, i32 31), !dbg !44
  %75 = bitcast i32 %74 to float, !dbg !44
  %76 = fadd float %72, %75, !dbg !48
  %77 = icmp eq i32 %11, 0, !dbg !44
  %78 = zext nneg i32 %13 to i64, !dbg !44
  %79 = getelementptr float, ptr addrspace(3) @global_smem, i64 %78, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %79, float %76, i1 %77) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %80 = icmp slt i32 %10, 2, !dbg !44
  %81 = sext i32 %10 to i64, !dbg !44
  %82 = getelementptr float, ptr addrspace(3) @global_smem, i64 %81, !dbg !44
  %83 = tail call float asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %82, i1 %80) #3, !dbg !44
  %84 = bitcast float %83 to i32, !dbg !44
  %85 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %84, i32 1, i32 31), !dbg !44
  %86 = bitcast i32 %85 to float, !dbg !44
  %87 = fadd float %83, %86, !dbg !48
  %88 = and i32 %10, 1, !dbg !44
  %89 = icmp eq i32 %88, 0, !dbg !44
  %90 = and i1 %80, %89, !dbg !44
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %82, float %87, i1 %90) #3, !dbg !44
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %91 = load float, ptr addrspace(3) @global_smem, align 4, !dbg !44
  %92 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %43) #3, !dbg !52
  %93 = fmul float %91, %92, !dbg !53
  %94 = mul i32 %17, 1872, !dbg !54
  %95 = add i32 %94, %.decomposed, !dbg !55
  %96 = sext i32 %95 to i64, !dbg !56
  %97 = getelementptr float, ptr addrspace(1) %6, i64 %96, !dbg !56
  %98 = icmp eq i32 %urem, 0, !dbg !57
  %99 = bitcast float %93 to i32, !dbg !57
  %100 = and i1 %98, %15, !dbg !57
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %99, ptr addrspace(1) %97, i1 %100) #3, !dbg !57
  ret void, !dbg !58
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "ctiqpdlpgaiduxafg6qyu7cxfydu4g6aep4cm3sra4idbsog63rw.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu/ti")
!3 = !{ptr @triton__0d1d2d3d4d5d678, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3d4d5d678, !"maxntidx", i32 64}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3d4d5d678", linkageName: "triton__0d1d2d3d4d5d678", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 26, column: 13, scope: !5)
!9 = !DILocation(line: 23, column: 28, scope: !5)
!10 = !DILocation(line: 25, column: 21, scope: !5)
!11 = !DILocation(line: 28, column: 21, scope: !5)
!12 = !DILocation(line: 30, column: 20, scope: !5)
!13 = !DILocation(line: 33, column: 30, scope: !5)
!14 = !DILocation(line: 33, column: 35, scope: !5)
!15 = !DILocation(line: 34, column: 30, scope: !5)
!16 = !DILocation(line: 34, column: 35, scope: !5)
!17 = !DILocation(line: 35, column: 41, scope: !5)
!18 = !DILocation(line: 35, column: 37, scope: !5)
!19 = !DILocation(line: 35, column: 53, scope: !5)
!20 = !DILocation(line: 35, column: 48, scope: !5)
!21 = !DILocation(line: 35, column: 31, scope: !5)
!22 = !DILocation(line: 35, column: 67, scope: !5)
!23 = !DILocation(line: 35, column: 59, scope: !5)
!24 = !DILocation(line: 36, column: 31, scope: !5)
!25 = !DILocation(line: 36, column: 36, scope: !5)
!26 = !DILocation(line: 37, column: 31, scope: !5)
!27 = !DILocation(line: 37, column: 59, scope: !5)
!28 = !DILocation(line: 38, column: 31, scope: !5)
!29 = !DILocation(line: 38, column: 36, scope: !5)
!30 = !DILocation(line: 40, column: 19, scope: !5)
!31 = !DILocation(line: 37, column: 15, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !5, file: !33, discriminator: 0)
!33 = !DIFile(filename: "triton_helpers.py", directory: "/home/admin/zy429782/torch_folder/pytorch-2.3.1/torch/_inductor")
!34 = !DILocation(line: 42, column: 40, scope: !32)
!35 = !DILocation(line: 39, column: 21, scope: !32, inlinedAt: !34)
!36 = !DILocation(line: 39, column: 16, scope: !32, inlinedAt: !34)
!37 = !DILocation(line: 40, column: 29, scope: !32, inlinedAt: !34)
!38 = !DILocation(line: 43, column: 18, scope: !5)
!39 = !DILocation(line: 45, column: 19, scope: !5)
!40 = !DILocation(line: 46, column: 18, scope: !5)
!41 = !DILocation(line: 47, column: 20, scope: !5)
!42 = !DILocation(line: 48, column: 20, scope: !5)
!43 = !DILocation(line: 0, scope: !5)
!44 = !DILocation(line: 243, column: 36, scope: !45, inlinedAt: !47)
!45 = distinct !DILexicalBlockFile(scope: !5, file: !46, discriminator: 0)
!46 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/compiled_torch/lib/python3.8/site-packages/triton/language")
!47 = !DILocation(line: 52, column: 26, scope: !45)
!48 = !DILocation(line: 233, column: 15, scope: !49, inlinedAt: !50)
!49 = distinct !DILexicalBlockFile(scope: !45, file: !46, discriminator: 0)
!50 = !DILocation(line: 243, column: 36, scope: !49, inlinedAt: !51)
!51 = !DILocation(line: 52, column: 26, scope: !49)
!52 = !DILocation(line: 53, column: 16, scope: !5)
!53 = !DILocation(line: 54, column: 20, scope: !5)
!54 = !DILocation(line: 55, column: 36, scope: !5)
!55 = !DILocation(line: 55, column: 31, scope: !5)
!56 = !DILocation(line: 55, column: 25, scope: !5)
!57 = !DILocation(line: 55, column: 49, scope: !5)
!58 = !DILocation(line: 55, column: 4, scope: !5)
