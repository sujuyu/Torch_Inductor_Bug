; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d2d3de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !5 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %6 = shl i32 %5, 1, !dbg !8
  %7 = and i32 %6, 510, !dbg !8
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %.fr = freeze i32 %8, !dbg !10
  %9 = shl i32 %.fr, 9, !dbg !10
  %10 = or i32 %9, %7, !dbg !11
  %11 = icmp slt i32 %10, %3, !dbg !12
  %12 = sdiv i32 %10, 16, !dbg !13
  %13 = srem i32 %12, 50, !dbg !14
  %14 = sdiv i32 %10, 800, !dbg !15
  %15 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !16
  %16 = insertelement <2 x i32> %15, i32 %10, i64 1, !dbg !16
  %17 = srem <2 x i32> %16, <i32 8, i32 16>, !dbg !16
  %18 = extractelement <2 x i32> %17, i64 0, !dbg !17
  %19 = shl nsw i32 %18, 4, !dbg !17
  %20 = extractelement <2 x i32> %17, i64 1, !dbg !18
  %21 = add nsw i32 %19, %20, !dbg !18
  %22 = shl nsw i32 %13, 7, !dbg !19
  %23 = srem i32 %10, 6400, !dbg !20
  %24 = sub nsw i32 %10, %23, !dbg !21
  %25 = add i32 %24, %22, !dbg !20
  %26 = add i32 %25, %21, !dbg !22
  %27 = sext i32 %26 to i64, !dbg !23
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !23
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %11) #1, !dbg !24
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !24
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !24
  %32 = bitcast i32 %30 to float, !dbg !24
  %33 = bitcast i32 %31 to float, !dbg !24
  %34 = sext i32 %21 to i64, !dbg !25
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !25
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %11) #1, !dbg !26
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !26
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !26
  %39 = bitcast i32 %37 to float, !dbg !26
  %40 = bitcast i32 %38 to float, !dbg !26
  %41 = fadd float %32, %39, !dbg !27
  %42 = fadd float %33, %40, !dbg !27
  %43 = sext i32 %10 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %43, !dbg !28
  %45 = bitcast float %41 to i32, !dbg !29
  %46 = bitcast float %42 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %45, i32 %46, ptr addrspace(1) %44, i1 %11) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cl65xknsmhvdzvpivttvbp6f3osgfs6abk7h623mgjpqnufnowgi.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu/l6")
!3 = !{ptr @triton__0d1d2d3de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3de, !"maxntidx", i32 256}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3de", linkageName: "triton__0d1d2d3de", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 22, column: 36, scope: !5)
!9 = !DILocation(line: 21, column: 28, scope: !5)
!10 = !DILocation(line: 21, column: 33, scope: !5)
!11 = !DILocation(line: 22, column: 23, scope: !5)
!12 = !DILocation(line: 23, column: 21, scope: !5)
!13 = !DILocation(line: 25, column: 20, scope: !5)
!14 = !DILocation(line: 25, column: 26, scope: !5)
!15 = !DILocation(line: 26, column: 20, scope: !5)
!16 = !DILocation(line: 26, column: 27, scope: !5)
!17 = !DILocation(line: 29, column: 39, scope: !5)
!18 = !DILocation(line: 29, column: 36, scope: !5)
!19 = !DILocation(line: 29, column: 50, scope: !5)
!20 = !DILocation(line: 29, column: 62, scope: !5)
!21 = !DILocation(line: 29, column: 46, scope: !5)
!22 = !DILocation(line: 29, column: 57, scope: !5)
!23 = !DILocation(line: 29, column: 30, scope: !5)
!24 = !DILocation(line: 29, column: 68, scope: !5)
!25 = !DILocation(line: 30, column: 30, scope: !5)
!26 = !DILocation(line: 30, column: 45, scope: !5)
!27 = !DILocation(line: 31, column: 18, scope: !5)
!28 = !DILocation(line: 32, column: 25, scope: !5)
!29 = !DILocation(line: 32, column: 36, scope: !5)
!30 = !DILocation(line: 32, column: 4, scope: !5)
