; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton__0d1d234d5e(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !5 {
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %8 = shl i32 %7, 1, !dbg !8
  %9 = and i32 %8, 510, !dbg !8
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !9
  %11 = shl i32 %10, 9, !dbg !10
  %12 = or i32 %11, %9, !dbg !11
  %13 = or i32 %12, 1, !dbg !11
  %14 = icmp slt i32 %12, %5, !dbg !12
  %15 = icmp slt i32 %13, %5, !dbg !12
  %.frozen = freeze i32 %12
  %16 = sdiv i32 %.frozen, 568, !dbg !13
  %17 = mul i32 %16, 568
  %.decomposed = sub i32 %.frozen, %17
  %18 = srem i32 %13, 568, !dbg !14
  %19 = icmp slt i32 %.decomposed, 204, !dbg !15
  %20 = icmp slt i32 %18, 204, !dbg !15
  %21 = mul nsw i32 %16, 204, !dbg !16
  %22 = add nsw i32 %21, %.decomposed, !dbg !17
  %23 = add nsw i32 %21, %18, !dbg !17
  %24 = sext i32 %22 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !18
  %26 = sext i32 %23 to i64, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !18
  %28 = and i1 %14, %19, !dbg !19
  %29 = and i1 %20, %15, !dbg !19
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %28, i32 0, i1 %28) #1, !dbg !20
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %29, i32 0, i1 %29) #1, !dbg !20
  %32 = add nsw i32 %.decomposed, -204, !dbg !21
  %33 = icmp ult i32 %32, 16, !dbg !21
  %34 = add nsw i32 %18, -204, !dbg !21
  %35 = icmp ult i32 %34, 16, !dbg !21
  %36 = shl nsw i32 %16, 4, !dbg !22
  %37 = add nsw i32 %32, %36, !dbg !23
  %38 = add nsw i32 %36, %34, !dbg !23
  %39 = sext i32 %37 to i64, !dbg !24
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !24
  %41 = sext i32 %38 to i64, !dbg !24
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !24
  %43 = and i1 %14, %33, !dbg !25
  %44 = and i1 %35, %15, !dbg !25
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %43, i32 0, i1 %43) #1, !dbg !26
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %44, i32 0, i1 %44) #1, !dbg !26
  %47 = add nsw i32 %.decomposed, -220, !dbg !27
  %48 = icmp ult i32 %47, 176, !dbg !27
  %49 = add nsw i32 %18, -220, !dbg !27
  %50 = icmp ult i32 %49, 176, !dbg !27
  %51 = mul i32 %16, 1872, !dbg !28
  %52 = add i32 %47, %51, !dbg !29
  %53 = add i32 %51, %49, !dbg !29
  %54 = sext i32 %52 to i64, !dbg !30
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !30
  %56 = sext i32 %53 to i64, !dbg !30
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !30
  %58 = and i1 %14, %48, !dbg !31
  %59 = and i1 %50, %15, !dbg !31
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %58, i32 0, i1 %58) #1, !dbg !32
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %59, i32 0, i1 %59) #1, !dbg !32
  %62 = icmp sgt i32 %.decomposed, 395, !dbg !33
  %63 = icmp sgt i32 %18, 395, !dbg !33
  %64 = add i32 %51, -396, !dbg !34
  %65 = add i32 %64, %.decomposed, !dbg !35
  %66 = add i32 %64, %18, !dbg !35
  %67 = sext i32 %65 to i64, !dbg !36
  %68 = getelementptr float, ptr addrspace(1) %3, i64 %67, !dbg !36
  %69 = sext i32 %66 to i64, !dbg !36
  %70 = getelementptr float, ptr addrspace(1) %3, i64 %69, !dbg !36
  %71 = and i1 %14, %62, !dbg !37
  %72 = and i1 %63, %15, !dbg !37
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %71, i32 0, i1 %71) #1, !dbg !38
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %72, i32 0, i1 %72) #1, !dbg !38
  %75 = sext i32 %12 to i64, !dbg !39
  %76 = getelementptr float, ptr addrspace(1) %4, i64 %75, !dbg !39
  %77 = sext i32 %13 to i64, !dbg !39
  %78 = getelementptr float, ptr addrspace(1) %4, i64 %77, !dbg !39
  %79 = select i1 %62, i32 %73, i32 0, !dbg !40
  %80 = select i1 %48, i32 %60, i32 %79, !dbg !40
  %81 = select i1 %33, i32 %45, i32 %80, !dbg !40
  %82 = select i1 %19, i32 %30, i32 %81, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %82, ptr addrspace(1) %76, i1 %14) #1, !dbg !40
  %83 = select i1 %63, i32 %74, i32 0, !dbg !40
  %84 = select i1 %50, i32 %61, i32 %83, !dbg !40
  %85 = select i1 %35, i32 %46, i32 %84, !dbg !40
  %86 = select i1 %20, i32 %31, i32 %85, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %78, i1 %15) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "c6tzaqb7ibfjag6y77mfdkven4ehtn43m6lhaxkskry2zhoa445q.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu/6t")
!3 = !{ptr @triton__0d1d234d5e, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d234d5e, !"maxntidx", i32 256}
!5 = distinct !DISubprogram(name: "triton__0d1d234d5e", linkageName: "triton__0d1d234d5e", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 22, column: 36, scope: !5)
!9 = !DILocation(line: 21, column: 28, scope: !5)
!10 = !DILocation(line: 21, column: 33, scope: !5)
!11 = !DILocation(line: 22, column: 23, scope: !5)
!12 = !DILocation(line: 23, column: 21, scope: !5)
!13 = !DILocation(line: 25, column: 20, scope: !5)
!14 = !DILocation(line: 24, column: 18, scope: !5)
!15 = !DILocation(line: 31, column: 18, scope: !5)
!16 = !DILocation(line: 32, column: 40, scope: !5)
!17 = !DILocation(line: 32, column: 36, scope: !5)
!18 = !DILocation(line: 32, column: 30, scope: !5)
!19 = !DILocation(line: 32, column: 53, scope: !5)
!20 = !DILocation(line: 32, column: 46, scope: !5)
!21 = !DILocation(line: 38, column: 19, scope: !5)
!22 = !DILocation(line: 39, column: 49, scope: !5)
!23 = !DILocation(line: 39, column: 46, scope: !5)
!24 = !DILocation(line: 39, column: 31, scope: !5)
!25 = !DILocation(line: 39, column: 63, scope: !5)
!26 = !DILocation(line: 39, column: 55, scope: !5)
!27 = !DILocation(line: 45, column: 20, scope: !5)
!28 = !DILocation(line: 46, column: 51, scope: !5)
!29 = !DILocation(line: 46, column: 46, scope: !5)
!30 = !DILocation(line: 46, column: 31, scope: !5)
!31 = !DILocation(line: 46, column: 65, scope: !5)
!32 = !DILocation(line: 46, column: 57, scope: !5)
!33 = !DILocation(line: 49, column: 20, scope: !5)
!34 = !DILocation(line: 52, column: 40, scope: !5)
!35 = !DILocation(line: 52, column: 46, scope: !5)
!36 = !DILocation(line: 52, column: 31, scope: !5)
!37 = !DILocation(line: 52, column: 65, scope: !5)
!38 = !DILocation(line: 52, column: 57, scope: !5)
!39 = !DILocation(line: 58, column: 25, scope: !5)
!40 = !DILocation(line: 58, column: 37, scope: !5)
!41 = !DILocation(line: 58, column: 4, scope: !5)
