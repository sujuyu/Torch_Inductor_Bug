; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

@global_smem = external local_unnamed_addr addrspace(3) global [0 x i8]

define void @triton__0d1d2d3de4de(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !5 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !8
  %7 = lshr i32 %6, 3, !dbg !8
  %8 = and i32 %7, 7, !dbg !8
  %9 = and i32 %6, 7, !dbg !8
  %10 = shl nuw nsw i32 %9, 1, !dbg !9
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 3, !dbg !11
  %13 = or i32 %12, %8, !dbg !8
  %14 = or i32 %12, %9, !dbg !8
  %15 = icmp slt i32 %13, %3, !dbg !12
  %16 = icmp slt i32 %14, %3, !dbg !12
  %17 = shl i32 %13, 4, !dbg !13
  %18 = or i32 %17, %10, !dbg !14
  %19 = sext i32 %18 to i64, !dbg !15
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !15
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %15, i32 0, i1 %15, i32 0, i1 %15) #3, !dbg !16
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !16
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !16
  %24 = bitcast i32 %22 to float, !dbg !16
  %25 = bitcast i32 %23 to float, !dbg !16
  %26 = fadd float %24, %25, !dbg !17
  %27 = select i1 %15, float %26, float 0.000000e+00, !dbg !17
  %28 = bitcast float %27 to i32, !dbg !23
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 4, i32 31), !dbg !23
  %30 = bitcast i32 %29 to float, !dbg !23
  %31 = fadd float %27, %30, !dbg !17
  %32 = bitcast float %31 to i32, !dbg !23
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 2, i32 31), !dbg !23
  %34 = bitcast i32 %33 to float, !dbg !23
  %35 = fadd float %31, %34, !dbg !17
  %36 = bitcast float %35 to i32, !dbg !23
  %37 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %36, i32 1, i32 31), !dbg !23
  %38 = bitcast i32 %37 to float, !dbg !23
  %39 = fadd float %35, %38, !dbg !17
  %40 = zext nneg i32 %8 to i64, !dbg !25
  %41 = getelementptr float, ptr addrspace(3) @global_smem, i64 %40, !dbg !25
  %42 = insertelement <1 x float> undef, float %39, i64 0, !dbg !25
  store <1 x float> %42, ptr addrspace(3) %41, align 4, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %43 = zext nneg i32 %9 to i64, !dbg !25
  %44 = getelementptr float, ptr addrspace(3) @global_smem, i64 %43, !dbg !25
  %45 = load float, ptr addrspace(3) %44, align 4, !dbg !25
  %46 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %45, float 1.600000e+01) #3, !dbg !25
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %39, float 1.600000e+01) #3, !dbg !25
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %39, float 1.600000e+01) #3, !dbg !25
  %49 = fsub float %24, %47, !dbg !26
  %50 = fsub float %25, %47, !dbg !26
  %51 = fmul float %49, %49, !dbg !27
  %52 = fmul float %50, %50, !dbg !27
  %53 = fadd float %51, %52, !dbg !28
  %54 = select i1 %15, float %53, float 0.000000e+00, !dbg !28
  %55 = bitcast float %54 to i32, !dbg !31
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 4, i32 31), !dbg !31
  %57 = bitcast i32 %56 to float, !dbg !31
  %58 = fadd float %54, %57, !dbg !28
  %59 = bitcast float %58 to i32, !dbg !31
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 2, i32 31), !dbg !31
  %61 = bitcast i32 %60 to float, !dbg !31
  %62 = fadd float %58, %61, !dbg !28
  %63 = bitcast float %62 to i32, !dbg !31
  %64 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %63, i32 1, i32 31), !dbg !31
  %65 = bitcast i32 %64 to float, !dbg !31
  %66 = fadd float %62, %65, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %67 = insertelement <1 x float> undef, float %66, i64 0, !dbg !33
  store <1 x float> %67, ptr addrspace(3) %41, align 4, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %68 = load i32, ptr addrspace(3) %44, align 4, !dbg !33
  %69 = sext i32 %14 to i64, !dbg !34
  %70 = getelementptr float, ptr addrspace(1) %1, i64 %69, !dbg !34
  %71 = icmp eq i32 %8, 0, !dbg !35
  %72 = bitcast float %46 to i32, !dbg !35
  %73 = and i1 %71, %16, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %72, ptr addrspace(1) %70, i1 %73) #3, !dbg !35
  %74 = getelementptr float, ptr addrspace(1) %2, i64 %69, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %74, i1 %73) #3, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}
!nvvm.annotations = !{!3, !4, !4, !3}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C, file: !2, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug)
!2 = !DIFile(filename: "cgpqnanhf645zczmn6pagexw7azue7q675cburz7ymzk673uie23.py", directory: "/home/admin/zy429782/fx_experiments/torch_aot_tool/dynamicLib_7622_gpu/gp")
!3 = !{ptr @triton__0d1d2d3de4de, !"kernel", i32 1}
!4 = !{ptr @triton__0d1d2d3de4de, !"maxntidx", i32 64}
!5 = distinct !DISubprogram(name: "triton__0d1d2d3de4de", linkageName: "triton__0d1d2d3de4de", scope: !2, file: !2, line: 20, type: !6, scopeLine: 20, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 24, column: 23, scope: !5)
!9 = !DILocation(line: 26, column: 13, scope: !5)
!10 = !DILocation(line: 23, column: 28, scope: !5)
!11 = !DILocation(line: 23, column: 33, scope: !5)
!12 = !DILocation(line: 25, column: 21, scope: !5)
!13 = !DILocation(line: 31, column: 39, scope: !5)
!14 = !DILocation(line: 31, column: 36, scope: !5)
!15 = !DILocation(line: 31, column: 30, scope: !5)
!16 = !DILocation(line: 31, column: 45, scope: !5)
!17 = !DILocation(line: 233, column: 15, scope: !18, inlinedAt: !21)
!18 = distinct !DILexicalBlockFile(scope: !20, file: !19, discriminator: 0)
!19 = !DIFile(filename: "standard.py", directory: "/home/admin/zy429782/miniforge3/envs/compiled_torch/lib/python3.8/site-packages/triton/language")
!20 = distinct !DILexicalBlockFile(scope: !5, file: !19, discriminator: 0)
!21 = !DILocation(line: 243, column: 36, scope: !18, inlinedAt: !22)
!22 = !DILocation(line: 36, column: 24, scope: !18)
!23 = !DILocation(line: 243, column: 36, scope: !20, inlinedAt: !24)
!24 = !DILocation(line: 36, column: 24, scope: !20)
!25 = !DILocation(line: 39, column: 19, scope: !5)
!26 = !DILocation(line: 40, column: 19, scope: !5)
!27 = !DILocation(line: 41, column: 20, scope: !5)
!28 = !DILocation(line: 233, column: 15, scope: !18, inlinedAt: !29)
!29 = !DILocation(line: 243, column: 36, scope: !18, inlinedAt: !30)
!30 = !DILocation(line: 44, column: 26, scope: !18)
!31 = !DILocation(line: 243, column: 36, scope: !20, inlinedAt: !32)
!32 = !DILocation(line: 44, column: 26, scope: !20)
!33 = !DILocation(line: 44, column: 12, scope: !5)
!34 = !DILocation(line: 45, column: 25, scope: !5)
!35 = !DILocation(line: 45, column: 37, scope: !5)
!36 = !DILocation(line: 46, column: 25, scope: !5)
!37 = !DILocation(line: 46, column: 37, scope: !5)
!38 = !DILocation(line: 46, column: 4, scope: !5)
